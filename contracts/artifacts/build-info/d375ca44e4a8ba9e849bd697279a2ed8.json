{
	"id": "d375ca44e4a8ba9e849bd697279a2ed8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n\r\ncontract GBMarketplace is Ownable, Pausable,  ReentrancyGuard  {\r\n    IERC20 public ERC20;\r\n    IERC721 public ERCNFT;\r\n\r\n    using Counters for Counters.Counter;\r\n    \r\n    Counters.Counter private numOfListing;\r\n\r\n    using SafeMath for uint;\r\n\r\n    uint  commissionPercentage = 350;\r\n    uint comissionAmount;\r\n    uint sellerAmount;\r\n    uint amountListed;\r\n\r\nstruct NFTListing {  \r\n  ERC721 nft;\r\n  uint256 tokenId;\r\n  uint price;\r\n  address coin;\r\n  address seller;\r\n  bool forSale;\r\n}\r\n  \r\n  event NftBuy(address _buyer, uint256 _tokenId, uint _price);\r\n  event transferToBuyer(address _buyer, uint256 _tokenId, uint _price);\r\n  event updateToBuyer(address _buyer, uint256 _tokenId, uint _price);\r\n  event NftList(address _seller, uint256 _tokenId, uint _id);\r\n  event Deposit(address sender, uint256 amount);\r\n\r\n \r\n  mapping(uint256 => NFTListing) public listings;\r\n\r\n  constructor (address initialOwner)\r\n    Ownable(initialOwner){}\r\n   \r\n   modifier onlyNftOwner(ERC721 _nft, uint _Id) {\r\n        require(msg.sender == listings[_Id].seller);\r\n        require(_nft == listings[_Id].nft);\r\n        _;\r\n    }\r\n\r\n\r\n    function pauseMarketplace() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpauseMarketplace() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n  function listNFT(ERC721 _nft, uint256 _tokenId, uint _price, address _coin) public payable {\r\n    require(_nft.ownerOf(_tokenId) == msg.sender, \"You are not the owner\");\r\n    require(_price > 0, \"NFTMarket: price must be greater than 0\");\r\n    numOfListing.increment();\r\n    listings[numOfListing.current()] = NFTListing(\r\n        _nft,\r\n        _tokenId,\r\n        _price,\r\n        _coin,\r\n        payable(msg.sender),\r\n        false\r\n    );\r\n    NFTListing storage listing = listings[numOfListing.current()];\r\n    _nft.transferFrom(msg.sender, address(this), _tokenId);\r\n    listing.forSale = true;\r\n    emit NftList(msg.sender, _tokenId, numOfListing.current());\r\n}\r\n\r\n    // this function will cancel the listing. it also has checks to make sure only the owner of the listing can cancel the listing from the market place\r\n    function cancel(ERC721 _nft, uint _Id) public payable onlyNftOwner(_nft, _Id) {\r\n        NFTListing storage listing = listings[_Id];\r\n        require(listing.seller == msg.sender, \"is not the seller\");\r\n        require(listing.forSale == true, \"is not listened\");\r\n        _nft.transferFrom(address(this), msg.sender, listing.tokenId);\r\n        listing.forSale = false;\r\n    }\r\n\r\n    // this function will facilitate the purchasing of a listing\r\n    function buyNFT(ERC721 _nft, uint _Id) public payable whenNotPaused nonReentrant {\r\n        NFTListing storage listing = listings[_Id];\r\n        require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\");\r\n        require(listing.forSale != false, \"item is not for sell\");\r\n        require(listing.seller != msg.sender, \"You cannot buy your own nft\");\r\n        require(listing.nft == _nft, \"item is not the same contract address\");\r\n        require(msg.value >= listing.price, \"not enough balance for this transaction\");\r\n        amountListed = listing.price;\r\n        comissionAmount = amountListed.mul(commissionPercentage).div(10000);\r\n        sellerAmount = amountListed.sub(comissionAmount);\r\n        ERC20 = IERC20(listing.coin);\r\n        ERC20.transfer(listing.seller, sellerAmount);\r\n\r\n        _nft.transferFrom(address(this), msg.sender, listing.tokenId);\r\n        listing.seller = msg.sender;\r\n        listing.forSale = false;\r\n        emit NftBuy(msg.sender, listing.tokenId, sellerAmount);\r\n    }\r\n\r\n\r\n    // Function to transfer NFT to the buyer and refund\r\n    function transferNFT(uint256 _listingId) public whenNotPaused nonReentrant {\r\n        NFTListing storage listing = listings[_listingId];\r\n        require(_listingId > 0 && _listingId <= numOfListing.current(), \"item doesn't exist\");\r\n        require(listing.forSale != false, \"item is not for sell\");\r\n        require(listing.seller != msg.sender, \"You cannot buy your own nft\");\r\n\r\n        amountListed = listing.price;\r\n        comissionAmount = amountListed.mul(commissionPercentage).div(10000);\r\n        sellerAmount = amountListed.sub(comissionAmount);\r\n\r\n        ERC20 = IERC20(listing.coin);\r\n        ERC20.transfer(listing.seller, sellerAmount);\r\n        ERC20.transfer(msg.sender, sellerAmount);  // Refund to the buyer\r\n\r\n        listing.forSale = false;\r\n        emit NftBuy(msg.sender, listing.tokenId, sellerAmount);\r\n    }\r\n\r\n    // Function to update the NFT info just if is necessary\r\n    function updateNFT(ERC721 _nft, uint _Id, address _sender) public whenNotPaused nonReentrant onlyOwner {\r\n        NFTListing storage listing = listings[_Id];\r\n        require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\");\r\n        require(listing.forSale != false, \"item is not for sell\");\r\n        require(listing.seller != _sender, \"You cannot buy your own nft\");\r\n        require(listing.nft == _nft, \"item is not the same contract address\");\r\n        listing.seller = _sender;\r\n        listing.forSale = false;\r\n        emit updateToBuyer(_sender, listing.tokenId, listing.price);\r\n    }\r\n\r\n\r\n     // Function to transfer or withdraw the funds\r\n    function transferOrWithdraw (uint _amount, address _ERC20Address) public whenNotPaused nonReentrant onlyOwner {\r\n        require(_amount != 0, \"Amount cannot be zero\");\r\n        require(_ERC20Address != address(0), \"ERC20 address cannot be zero address\");\r\n        ERC20 = IERC20(_ERC20Address);\r\n        require(_amount <= ERC20.balanceOf(address(this)), \"Insufficient funds.\");\r\n        ERC20.transfer(msg.sender , _amount);\r\n    }\r\n\r\n  // update comission percentage\r\n  function updateComissionPercentage(uint256 _value) public onlyOwner{\r\n        commissionPercentage = _value;\r\n  }\r\n\r\n    receive() external payable {\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n  // this function will get the listings in the market place\r\n    function getNFTListing(uint _Id) public view returns (NFTListing memory) {\r\n        return listings[_Id];\r\n    }\r\n\r\n    \r\n    // get list of items\r\n    function getListinglength() public view returns (uint) {\r\n        return numOfListing.current();\r\n    }   \r\n\r\n    // get comission percentage\r\n    function getComissionPercentage() public view returns (uint256){\r\n      return commissionPercentage;\r\n    }\r\n\r\n    // get id listed for sale\r\n  function getIdListed(ERC721 _nft, uint256 _tokenId) public view returns (uint256) {\r\n    bool found = false;  // Flag to indicate if NFT listing has been found\r\n    uint256 i;  // Variable to store the index of the NFT listing\r\n\r\n    for (i = 1; i <= numOfListing.current(); i++) {\r\n        if (listings[i].nft == _nft && listings[i].tokenId == _tokenId && listings[i].forSale) {\r\n            found = true;  // Set flag to true if NFT listing is found\r\n            break;  // Exit the loop\r\n        }\r\n    }\r\n\r\n    // Check if NFT listing has been found, otherwise revert with an error message\r\n    if (!found) {\r\n        return 0;\r\n    }\r\n\r\n    return i;  // Return the index of the NFT listing\r\n}\r\n\r\n\r\n      // get all id listed \r\n    function getAllIdListed (ERC721 _nft, uint256 _tokenId) public view returns (uint){\r\n    for (uint i = 1; i <= numOfListing.current(); i++) {\r\n        NFTListing storage listing = listings[i];\r\n        if (listing.nft == _nft && listing.tokenId == _tokenId) {\r\n            return i;\r\n        }\r\n    }\r\n    return 0;\r\n  }\r\n}   \r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 5000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e5b76b6b8f150225358e208a1e28012dfc42e1521c990c3e08639c7f45fe50c64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201e5b76b6b8f150225358e208a1e28012dfc42e1521c990c3e08639c7f45fe50c64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E JUMPDEST PUSH23 0xB6B8F150225358E208A1E28012DFC42E1521C990C3E086 CODECOPY 0xC7 DELEGATECALL PUSH0 0xE5 0xC PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201e5b76b6b8f150225358e208a1e28012dfc42e1521c990c3e08639c7f45fe50c64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E JUMPDEST PUSH23 0xB6B8F150225358E208A1E28012DFC42E1521C990C3E086 CODECOPY 0xC7 DELEGATECALL PUSH0 0xE5 0xC PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e5b76b6b8f150225358e208a1e28012dfc42e1521c990c3e08639c7f45fe50c64736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 894,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 896,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 900,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 904,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 908,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 914,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a9a64a5ff3a73a5105caa86ee34cf9e18c1e95fdab30bc9c060285c1c90f156264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a9a64a5ff3a73a5105caa86ee34cf9e18c1e95fdab30bc9c060285c1c90f156264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xA6 0x4A PUSH0 RETURN 0xA7 GASPRICE MLOAD SDIV 0xCA 0xA8 PUSH15 0xE34CF9E18C1E95FDAB30BC9C060285 0xC1 0xC9 0xF ISZERO PUSH3 0x64736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "195:6066:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a9a64a5ff3a73a5105caa86ee34cf9e18c1e95fdab30bc9c060285c1c90f156264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xA6 0x4A PUSH0 RETURN 0xA7 GASPRICE MLOAD SDIV 0xCA 0xA8 PUSH15 0xE34CF9E18C1E95FDAB30BC9C060285 0xC1 0xC9 0xF ISZERO PUSH3 0x64736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "195:6066:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9a64a5ff3a73a5105caa86ee34cf9e18c1e95fdab30bc9c060285c1c90f156264736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e6fa45ac3307dbdc67b7144ddb1e62c8cb1755ecc6bc589de84ee8ceae2728c964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e6fa45ac3307dbdc67b7144ddb1e62c8cb1755ecc6bc589de84ee8ceae2728c964736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 STATICCALL GASLIMIT 0xAC CALLER SMOD 0xDB 0xDC PUSH8 0xB7144DDB1E62C8CB OR SSTORE 0xEC 0xC6 0xBC PC SWAP14 0xE8 0x4E 0xE8 0xCE 0xAE 0x27 0x28 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "424:971:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e6fa45ac3307dbdc67b7144ddb1e62c8cb1755ecc6bc589de84ee8ceae2728c964736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 STATICCALL GASLIMIT 0xAC CALLER SMOD 0xDB 0xDC PUSH8 0xB7144DDB1E62C8CB OR SSTORE 0xEC 0xC6 0xBC PC SWAP14 0xE8 0x4E 0xE8 0xCE 0xAE 0x27 0x28 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "424:971:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6fa45ac3307dbdc67b7144ddb1e62c8cb1755ecc6bc589de84ee8ceae2728c964736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a684dadd02a4cdf31dd0c75d86916e4560d9e54118b9f8e986318c59289e5e8a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a684dadd02a4cdf31dd0c75d86916e4560d9e54118b9f8e986318c59289e5e8a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 DUP5 0xDA 0xDD MUL LOG4 0xCD RETURN SAR 0xD0 0xC7 0x5D DUP7 SWAP2 PUSH15 0x4560D9E54118B9F8E986318C59289E 0x5E DUP11 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a684dadd02a4cdf31dd0c75d86916e4560d9e54118b9f8e986318c59289e5e8a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 DUP5 0xDA 0xDD MUL LOG4 0xCD RETURN SAR 0xD0 0xC7 0x5D DUP7 SWAP2 PUSH15 0x4560D9E54118B9F8E986318C59289E 0x5E DUP11 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a684dadd02a4cdf31dd0c75d86916e4560d9e54118b9f8e986318c59289e5e8a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220635e75064271c091d3028c6ef6dd3fd6f5bf989657d04b7054d4acadb32d5ab064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220635e75064271c091d3028c6ef6dd3fd6f5bf989657d04b7054d4acadb32d5ab064736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x5E750642 PUSH18 0xC091D3028C6EF6DD3FD6F5BF989657D04B70 SLOAD 0xD4 0xAC 0xAD 0xB3 0x2D GAS 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220635e75064271c091d3028c6ef6dd3fd6f5bf989657d04b7054d4acadb32d5ab064736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x5E750642 PUSH18 0xC091D3028C6EF6DD3FD6F5BF989657D04B70 SLOAD 0xD4 0xAC 0xAD 0xB3 0x2D GAS 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220635e75064271c091d3028c6ef6dd3fd6f5bf989657d04b7054d4acadb32d5ab064736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122007720d8fc99445aee63c0cb4917cbad5639504231a04aeb6ba4efd461706896664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122007720d8fc99445aee63c0cb4917cbad5639504231a04aeb6ba4efd461706896664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD PUSH19 0xD8FC99445AEE63C0CB4917CBAD5639504231A DIV 0xAE 0xB6 0xBA 0x4E REVERT CHAINID OR MOD DUP10 PUSH7 0x64736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "482:6210:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:18;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122007720d8fc99445aee63c0cb4917cbad5639504231a04aeb6ba4efd461706896664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD PUSH19 0xD8FC99445AEE63C0CB4917CBAD5639504231A DIV 0xAE 0xB6 0xBA 0x4E REVERT CHAINID OR MOD DUP10 PUSH7 0x64736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "482:6210:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122007720d8fc99445aee63c0cb4917cbad5639504231a04aeb6ba4efd461706896664736f6c63430008160033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b152df09bfe36e3ce000527bd3b03c16959b233594f6b21cd785ed4078a9c1b364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b152df09bfe36e3ce000527bd3b03c16959b233594f6b21cd785ed4078a9c1b364736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 MSTORE 0xDF MULMOD 0xBF 0xE3 PUSH15 0x3CE000527BD3B03C16959B233594F6 0xB2 SHR 0xD7 DUP6 0xED BLOCKHASH PUSH25 0xA9C1B364736F6C634300081600330000000000000000000000 ",
							"sourceMap": "216:1047:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:19;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b152df09bfe36e3ce000527bd3b03c16959b233594f6b21cd785ed4078a9c1b364736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 MSTORE 0xDF MULMOD 0xBF 0xE3 PUSH15 0x3CE000527BD3B03C16959B233594F6 0xB2 SHR 0xD7 DUP6 0xED BLOCKHASH PUSH25 0xA9C1B364736F6C634300081600330000000000000000000000 ",
							"sourceMap": "216:1047:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b152df09bfe36e3ce000527bd3b03c16959b233594f6b21cd785ed4078a9c1b364736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Marketplace.sol": {
				"GBMarketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "NftBuy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "NftList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "transferToBuyer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "updateToBuyer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ERC20",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ERCNFT",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC721",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_Id",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC721",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_Id",
									"type": "uint256"
								}
							],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC721",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getAllIdListed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getComissionPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC721",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getIdListed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getListinglength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_Id",
									"type": "uint256"
								}
							],
							"name": "getNFTListing",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract ERC721",
											"name": "nft",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "coin",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "forSale",
											"type": "bool"
										}
									],
									"internalType": "struct GBMarketplace.NFTListing",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC721",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_coin",
									"type": "address"
								}
							],
							"name": "listNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "contract ERC721",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "coin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "forSale",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauseMarketplace",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_listingId",
									"type": "uint256"
								}
							],
							"name": "transferNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_ERC20Address",
									"type": "address"
								}
							],
							"name": "transferOrWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpauseMarketplace",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "updateComissionPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC721",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_Id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "updateNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Marketplace.sol\":478:7956  contract GBMarketplace is Ownable, Pausable,  ReentrancyGuard  {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Marketplace.sol\":759:762  350 */\n  0x015e\n    /* \"contracts/Marketplace.sol\":730:762  uint  commissionPercentage = 350 */\n  0x05\n  sstore\n    /* \"contracts/Marketplace.sol\":1356:1419  constructor (address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Marketplace.sol\":1404:1416  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/Marketplace.sol\":478:7956  contract GBMarketplace is Ownable, Pausable,  ReentrancyGuard  {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_21:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_22:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_19:\n    /* \"contracts/Marketplace.sol\":478:7956  contract GBMarketplace is Ownable, Pausable,  ReentrancyGuard  {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Marketplace.sol\":478:7956  contract GBMarketplace is Ownable, Pausable,  ReentrancyGuard  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x925a9953\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xcc4aa204\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xde74e57b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xde74e57b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdf706cbc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0xcc4aa204\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcf02976f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd68cdc52\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x9cefe029\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x9cefe029\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa82ba76f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc85d5262\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x925a9953\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x98590ef9\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x65a19c20\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8699fdf4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x65a19c20\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6ee4c120\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x249e10c5\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x249e10c5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3ec62279\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x0ea59c4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21f67fbb\n      eq\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Marketplace.sol\":6345:6375  Deposit(msg.sender, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Marketplace.sol\":6353:6363  msg.sender */\n      caller\n        /* \"#utility.yul\":188:262   */\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":6365:6374  msg.value */\n      callvalue\n        /* \"#utility.yul\":293:295   */\n      0x20\n        /* \"#utility.yul\":278:296   */\n      dup3\n      add\n        /* \"#utility.yul\":271:305   */\n      mstore\n        /* \"contracts/Marketplace.sol\":6345:6375  Deposit(msg.sender, msg.value) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap2\n        /* \"#utility.yul\":161:179   */\n      add\n        /* \"contracts/Marketplace.sol\":6345:6375  Deposit(msg.sender, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Marketplace.sol\":478:7956  contract GBMarketplace is Ownable, Pausable,  ReentrancyGuard  {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Marketplace.sol\":6453:6565  function getNFTListing(uint _Id) public view returns (NFTListing memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/Marketplace.sol\":6544:6557  listings[_Id] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":6544:6552  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":6544:6557  listings[_Id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":6537:6557  return listings[_Id] */\n      dup3\n      mload\n      0xc0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup3\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      add\n      sload\n      swap1\n      dup2\n      and\n      0x80\n      dup4\n      add\n      mstore\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/Marketplace.sol\":6453:6565  function getNFTListing(uint _Id) public view returns (NFTListing memory) {... */\n      jump\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n        /* \"#utility.yul\":649:653   */\n      0x00\n        /* \"#utility.yul\":691:694   */\n      0xc0\n        /* \"#utility.yul\":680:689   */\n      dup3\n        /* \"#utility.yul\":676:695   */\n      add\n        /* \"#utility.yul\":668:695   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:756   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":802:804   */\n      dup1\n        /* \"#utility.yul\":793:799   */\n      dup5\n        /* \"#utility.yul\":787:800   */\n      mload\n        /* \"#utility.yul\":783:805   */\n      and\n        /* \"#utility.yul\":772:781   */\n      dup4\n        /* \"#utility.yul\":765:806   */\n      mstore\n        /* \"#utility.yul\":862:866   */\n      0x20\n        /* \"#utility.yul\":854:860   */\n      dup5\n        /* \"#utility.yul\":850:867   */\n      add\n        /* \"#utility.yul\":844:868   */\n      mload\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":826:835   */\n      dup5\n        /* \"#utility.yul\":822:842   */\n      add\n        /* \"#utility.yul\":815:869   */\n      mstore\n        /* \"#utility.yul\":925:929   */\n      0x40\n        /* \"#utility.yul\":917:923   */\n      dup5\n        /* \"#utility.yul\":913:930   */\n      add\n        /* \"#utility.yul\":907:931   */\n      mload\n        /* \"#utility.yul\":900:904   */\n      0x40\n        /* \"#utility.yul\":889:898   */\n      dup5\n        /* \"#utility.yul\":885:905   */\n      add\n        /* \"#utility.yul\":878:932   */\n      mstore\n        /* \"#utility.yul\":1000:1002   */\n      dup1\n        /* \"#utility.yul\":992:996   */\n      0x60\n        /* \"#utility.yul\":984:990   */\n      dup6\n        /* \"#utility.yul\":980:997   */\n      add\n        /* \"#utility.yul\":974:998   */\n      mload\n        /* \"#utility.yul\":970:1003   */\n      and\n        /* \"#utility.yul\":963:967   */\n      0x60\n        /* \"#utility.yul\":952:961   */\n      dup5\n        /* \"#utility.yul\":948:968   */\n      add\n        /* \"#utility.yul\":941:1004   */\n      mstore\n        /* \"#utility.yul\":1072:1074   */\n      dup1\n        /* \"#utility.yul\":1064:1068   */\n      0x80\n        /* \"#utility.yul\":1056:1062   */\n      dup6\n        /* \"#utility.yul\":1052:1069   */\n      add\n        /* \"#utility.yul\":1046:1070   */\n      mload\n        /* \"#utility.yul\":1042:1075   */\n      and\n        /* \"#utility.yul\":1035:1039   */\n      0x80\n        /* \"#utility.yul\":1024:1033   */\n      dup5\n        /* \"#utility.yul\":1020:1040   */\n      add\n        /* \"#utility.yul\":1013:1076   */\n      mstore\n      pop\n        /* \"#utility.yul\":1146:1150   */\n      0xa0\n        /* \"#utility.yul\":1138:1144   */\n      dup4\n        /* \"#utility.yul\":1134:1151   */\n      add\n        /* \"#utility.yul\":1128:1152   */\n      mload\n        /* \"#utility.yul\":1121:1153   */\n      iszero\n        /* \"#utility.yul\":1114:1154   */\n      iszero\n        /* \"#utility.yul\":1107:1111   */\n      0xa0\n        /* \"#utility.yul\":1096:1105   */\n      dup4\n        /* \"#utility.yul\":1092:1112   */\n      add\n        /* \"#utility.yul\":1085:1155   */\n      mstore\n        /* \"#utility.yul\":501:1161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"contracts/Marketplace.sol\":6453:6565  function getNFTListing(uint _Id) public view returns (NFTListing memory) {... */\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace.sol\":1683:1759  function unpauseMarketplace() public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Marketplace.sol\":4132:4968  function transferNFT(uint256 _listingId) public whenNotPaused nonReentrant {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_43\n      tag_47\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":1603:1675  function pauseMarketplace() public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_43\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":1331:1345   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1324:1346   */\n      iszero\n        /* \"#utility.yul\":1306:1347   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1294:1296   */\n      0x20\n        /* \"#utility.yul\":1279:1297   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      tag_40\n        /* \"#utility.yul\":1166:1353   */\n      jump\n        /* \"contracts/Marketplace.sol\":6752:6859  function getComissionPercentage() public view returns (uint256){... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n        /* \"contracts/Marketplace.sol\":6831:6851  commissionPercentage */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":6752:6859  function getComissionPercentage() public view returns (uint256){... */\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":1504:1529   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1477:1495   */\n      add\n        /* \"contracts/Marketplace.sol\":6752:6859  function getComissionPercentage() public view returns (uint256){... */\n      tag_40\n        /* \"#utility.yul\":1358:1535   */\n      jump\n        /* \"contracts/Marketplace.sol\":5708:6141  function transferOrWithdraw (uint _amount, address _ERC20Address) public whenNotPaused nonReentrant onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_43\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_43\n      tag_69\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":7633:7953  function getAllIdListed (ERC721 _nft, uint256 _tokenId) public view returns (uint){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_58\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_77:\n      mload(0x40)\n        /* \"#utility.yul\":2530:2572   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2518:2573   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2500:2574   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2488:2490   */\n      0x20\n        /* \"#utility.yul\":2473:2491   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_40\n        /* \"#utility.yul\":2354:2580   */\n      jump\n        /* \"contracts/Marketplace.sol\":5037:5646  function updateNFT(ERC721 _nft, uint _Id, address _sender) public whenNotPaused nonReentrant onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_43\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":2594:2970  function cancel(ERC721 _nft, uint _Id) public payable onlyNftOwner(_nft, _Id) {... */\n    tag_14:\n      tag_43\n      tag_87\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":6181:6294  function updateComissionPercentage(uint256 _value) public onlyOwner{... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_43\n      tag_91\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":3044:4065  function buyNFT(ERC721 _nft, uint _Id) public payable whenNotPaused nonReentrant {... */\n    tag_16:\n      tag_43\n      tag_94\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":6605:6708  function getListinglength() public view returns (uint) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_58\n      tag_98\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":548:567  IERC20 public ERC20 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      sload(0x02)\n      tag_77\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"contracts/Marketplace.sol\":6896:7594  function getIdListed(ERC721 _nft, uint256 _tokenId) public view returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_58\n      tag_107\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":1765:2432  function listNFT(ERC721 _nft, uint256 _tokenId, uint _price, address _coin) public payable {... */\n    tag_20:\n      tag_43\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":1303:1349  mapping(uint256 => NFTListing) public listings */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_116:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap4\n      dup5\n      and\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      dup3\n      and\n      swap2\n      dup2\n      and\n      swap1\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n      dup7\n      jump\n    tag_115:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4157:4199   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4226:4241   */\n      swap8\n      dup9\n      and\n        /* \"#utility.yul\":4208:4242   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4258:4276   */\n      dup2\n      add\n        /* \"#utility.yul\":4251:4285   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":4301:4319   */\n      dup6\n      add\n        /* \"#utility.yul\":4294:4328   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":4364:4379   */\n      swap1\n      dup5\n      and\n        /* \"#utility.yul\":4359:4361   */\n      0x60\n        /* \"#utility.yul\":4344:4362   */\n      dup5\n      add\n        /* \"#utility.yul\":4337:4380   */\n      mstore\n        /* \"#utility.yul\":4417:4432   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4411:4414   */\n      0x80\n        /* \"#utility.yul\":4396:4415   */\n      dup3\n      add\n        /* \"#utility.yul\":4389:4433   */\n      mstore\n        /* \"#utility.yul\":4477:4491   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4470:4492   */\n      iszero\n        /* \"#utility.yul\":4464:4467   */\n      0xa0\n        /* \"#utility.yul\":4449:4468   */\n      dup3\n      add\n        /* \"#utility.yul\":4442:4493   */\n      mstore\n        /* \"#utility.yul\":4134:4137   */\n      0xc0\n        /* \"#utility.yul\":4119:4138   */\n      add\n        /* \"contracts/Marketplace.sol\":1303:1349  mapping(uint256 => NFTListing) public listings */\n      tag_40\n        /* \"#utility.yul\":3851:4499   */\n      jump\n        /* \"contracts/Marketplace.sol\":574:595  IERC721 public ERCNFT */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      sload(0x03)\n      tag_77\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_43\n      tag_127\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":1683:1759  function unpauseMarketplace() public onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/Marketplace.sol\":1741:1751  _unpause() */\n      tag_137\n        /* \"contracts/Marketplace.sol\":1741:1749  _unpause */\n      tag_138\n        /* \"contracts/Marketplace.sol\":1741:1751  _unpause() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/Marketplace.sol\":1683:1759  function unpauseMarketplace() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":4132:4968  function transferNFT(uint256 _listingId) public whenNotPaused nonReentrant {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_143\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Marketplace.sol\":4218:4244  NFTListing storage listing */\n      0x00\n        /* \"contracts/Marketplace.sol\":4247:4267  listings[_listingId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":4247:4255  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":4247:4267  listings[_listingId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":4286:4300  _listingId > 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Marketplace.sol\":4286:4340  _listingId > 0 && _listingId <= numOfListing.current() */\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":4318:4330  numOfListing */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Marketplace.sol\":4304:4314  _listingId */\n      dup3\n        /* \"contracts/Marketplace.sol\":4304:4340  _listingId <= numOfListing.current() */\n      gt\n      iszero\n        /* \"contracts/Marketplace.sol\":4286:4340  _listingId > 0 && _listingId <= numOfListing.current() */\n    tag_146:\n        /* \"contracts/Marketplace.sol\":4278:4363  require(_listingId > 0 && _listingId <= numOfListing.current(), \"item doesn't exist\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5205:5207   */\n      0x20\n        /* \"contracts/Marketplace.sol\":4278:4363  require(_listingId > 0 && _listingId <= numOfListing.current(), \"item doesn't exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5187:5208   */\n      mstore\n        /* \"#utility.yul\":5244:5246   */\n      0x12\n        /* \"#utility.yul\":5224:5242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5217:5247   */\n      mstore\n        /* \"#utility.yul\":5283:5303   */\n      0x6974656d20646f65736e27742065786973740000000000000000000000000000\n        /* \"#utility.yul\":5263:5281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5256:5304   */\n      mstore\n        /* \"#utility.yul\":5321:5339   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":4278:4363  require(_listingId > 0 && _listingId <= numOfListing.current(), \"item doesn't exist\") */\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/Marketplace.sol\":4382:4397  listing.forSale */\n      0x04\n      dup2\n      add\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace.sol\":4382:4406  listing.forSale != false */\n      iszero\n      iszero\n        /* \"contracts/Marketplace.sol\":4401:4406  false */\n      0x00\n        /* \"contracts/Marketplace.sol\":4382:4406  listing.forSale != false */\n      sub\n        /* \"contracts/Marketplace.sol\":4374:4431  require(listing.forSale != false, \"item is not for sell\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"contracts/Marketplace.sol\":4374:4431  require(listing.forSale != false, \"item is not for sell\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x14\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5652   */\n      0x6974656d206973206e6f7420666f722073656c6c000000000000000000000000\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5653   */\n      mstore\n        /* \"#utility.yul\":5670:5688   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":4374:4431  require(listing.forSale != false, \"item is not for sell\") */\n      tag_150\n        /* \"#utility.yul\":5350:5694   */\n      jump\n        /* \"contracts/Marketplace.sol\":4374:4431  require(listing.forSale != false, \"item is not for sell\") */\n    tag_152:\n        /* \"contracts/Marketplace.sol\":4450:4464  listing.seller */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":4468:4478  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":4450:4478  listing.seller != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Marketplace.sol\":4450:4464  listing.seller */\n      swap1\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":4450:4478  listing.seller != msg.sender */\n      sub\n        /* \"contracts/Marketplace.sol\":4442:4510  require(listing.seller != msg.sender, \"You cannot buy your own nft\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"contracts/Marketplace.sol\":4442:4510  require(listing.seller != msg.sender, \"You cannot buy your own nft\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5883:5904   */\n      mstore\n        /* \"#utility.yul\":5940:5942   */\n      0x1b\n        /* \"#utility.yul\":5920:5938   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5913:5943   */\n      mstore\n        /* \"#utility.yul\":5979:6008   */\n      0x596f752063616e6e6f742062757920796f7572206f776e206e66740000000000\n        /* \"#utility.yul\":5959:5977   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5952:6009   */\n      mstore\n        /* \"#utility.yul\":6026:6044   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":4442:4510  require(listing.seller != msg.sender, \"You cannot buy your own nft\") */\n      tag_150\n        /* \"#utility.yul\":5699:6050   */\n      jump\n        /* \"contracts/Marketplace.sol\":4442:4510  require(listing.seller != msg.sender, \"You cannot buy your own nft\") */\n    tag_155:\n        /* \"contracts/Marketplace.sol\":4538:4551  listing.price */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":4523:4535  amountListed */\n      0x08\n        /* \"contracts/Marketplace.sol\":4523:4551  amountListed = listing.price */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":4597:4617  commissionPercentage */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":4580:4629  amountListed.mul(commissionPercentage).div(10000) */\n      tag_158\n      swap2\n        /* \"contracts/Marketplace.sol\":4623:4628  10000 */\n      0x2710\n      swap2\n        /* \"contracts/Marketplace.sol\":4580:4618  amountListed.mul(commissionPercentage) */\n      tag_159\n      swap2\n        /* \"contracts/Marketplace.sol\":4538:4551  listing.price */\n      swap1\n        /* \"contracts/Marketplace.sol\":4580:4596  amountListed.mul */\n      tag_160\n        /* \"contracts/Marketplace.sol\":4580:4618  amountListed.mul(commissionPercentage) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/Marketplace.sol\":4580:4622  amountListed.mul(commissionPercentage).div */\n      swap1\n      tag_161\n        /* \"contracts/Marketplace.sol\":4580:4629  amountListed.mul(commissionPercentage).div(10000) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/Marketplace.sol\":4562:4577  comissionAmount */\n      0x06\n        /* \"contracts/Marketplace.sol\":4562:4629  comissionAmount = amountListed.mul(commissionPercentage).div(10000) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":4655:4667  amountListed */\n      sload(0x08)\n        /* \"contracts/Marketplace.sol\":4655:4688  amountListed.sub(comissionAmount) */\n      tag_162\n      swap2\n        /* \"contracts/Marketplace.sol\":4655:4671  amountListed.sub */\n      tag_163\n        /* \"contracts/Marketplace.sol\":4655:4688  amountListed.sub(comissionAmount) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/Marketplace.sol\":4640:4652  sellerAmount */\n      0x07\n        /* \"contracts/Marketplace.sol\":4640:4688  sellerAmount = amountListed.sub(comissionAmount) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":4716:4728  listing.coin */\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":4701:4706  ERC20 */\n      0x02\n        /* \"contracts/Marketplace.sol\":4701:4729  ERC20 = IERC20(listing.coin) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n        /* \"contracts/Marketplace.sol\":4716:4728  listing.coin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      dup4\n      and\n        /* \"contracts/Marketplace.sol\":4701:4729  ERC20 = IERC20(listing.coin) */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Marketplace.sol\":4755:4769  listing.seller */\n      0x04\n      dup1\n      dup6\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":4740:4784  ERC20.transfer(listing.seller, sellerAmount) */\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":4755:4769  listing.seller */\n      swap4\n      and\n        /* \"contracts/Marketplace.sol\":4740:4784  ERC20.transfer(listing.seller, sellerAmount) */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":188:262   */\n      mstore\n        /* \"#utility.yul\":278:296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":271:305   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Marketplace.sol\":4740:4754  ERC20.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":161:179   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":4740:4784  ERC20.transfer(listing.seller, sellerAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      pop\n        /* \"contracts/Marketplace.sol\":4795:4800  ERC20 */\n      sload(0x02)\n        /* \"contracts/Marketplace.sol\":4822:4834  sellerAmount */\n      sload(0x07)\n        /* \"contracts/Marketplace.sol\":4795:4835  ERC20.transfer(msg.sender, sellerAmount) */\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":4810:4820  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":4795:4835  ERC20.transfer(msg.sender, sellerAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":188:262   */\n      mstore\n        /* \"#utility.yul\":278:296   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":271:305   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Marketplace.sol\":4795:4800  ERC20 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace.sol\":4795:4809  ERC20.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":161:179   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":4795:4835  ERC20.transfer(msg.sender, sellerAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_172:\n      pop\n        /* \"contracts/Marketplace.sol\":4872:4887  listing.forSale */\n      0x04\n      dup2\n      add\n        /* \"contracts/Marketplace.sol\":4872:4895  listing.forSale = false */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      sstore\n      0x01\n        /* \"contracts/Marketplace.sol\":4930:4945  listing.tokenId */\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":4947:4959  sellerAmount */\n      sload(0x07)\n        /* \"contracts/Marketplace.sol\":4911:4960  NftBuy(msg.sender, listing.tokenId, sellerAmount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Marketplace.sol\":4918:4928  msg.sender */\n      caller\n        /* \"#utility.yul\":6539:6613   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      dup2\n      add\n        /* \"#utility.yul\":6622:6656   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":6672:6690   */\n      dup3\n      add\n        /* \"#utility.yul\":6665:6699   */\n      mstore\n        /* \"contracts/Marketplace.sol\":4911:4960  NftBuy(msg.sender, listing.tokenId, sellerAmount) */\n      0xc0790eb4899023169be51dd7074a99a15959464f9a0e6b19767d8d61539b8726\n      swap1\n        /* \"#utility.yul\":6527:6529   */\n      0x60\n        /* \"#utility.yul\":6512:6530   */\n      add\n        /* \"contracts/Marketplace.sol\":4911:4960  NftBuy(msg.sender, listing.tokenId, sellerAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Marketplace.sol\":4207:4968  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_175:\n        /* \"contracts/Marketplace.sol\":4132:4968  function transferNFT(uint256 _listingId) public whenNotPaused nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":1603:1675  function pauseMarketplace() public onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/Marketplace.sol\":1659:1667  _pause() */\n      tag_137\n        /* \"contracts/Marketplace.sol\":1659:1665  _pause */\n      tag_181\n        /* \"contracts/Marketplace.sol\":1659:1667  _pause() */\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":5708:6141  function transferOrWithdraw (uint _amount, address _ERC20Address) public whenNotPaused nonReentrant onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_185\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/Marketplace.sol\":5837:5844  _amount */\n      dup2\n        /* \"contracts/Marketplace.sol\":5848:5849  0 */\n      0x00\n        /* \"contracts/Marketplace.sol\":5837:5849  _amount != 0 */\n      sub\n        /* \"contracts/Marketplace.sol\":5829:5875  require(_amount != 0, \"Amount cannot be zero\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6912:6914   */\n      0x20\n        /* \"contracts/Marketplace.sol\":5829:5875  require(_amount != 0, \"Amount cannot be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6894:6915   */\n      mstore\n        /* \"#utility.yul\":6951:6953   */\n      0x15\n        /* \"#utility.yul\":6931:6949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6924:6954   */\n      mstore\n        /* \"#utility.yul\":6990:7013   */\n      0x416d6f756e742063616e6e6f74206265207a65726f0000000000000000000000\n        /* \"#utility.yul\":6970:6988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6963:7014   */\n      mstore\n        /* \"#utility.yul\":7031:7049   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":5829:5875  require(_amount != 0, \"Amount cannot be zero\") */\n      tag_150\n        /* \"#utility.yul\":6710:7055   */\n      jump\n        /* \"contracts/Marketplace.sol\":5829:5875  require(_amount != 0, \"Amount cannot be zero\") */\n    tag_191:\n        /* \"contracts/Marketplace.sol\":5894:5921  _ERC20Address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/Marketplace.sol\":5886:5962  require(_ERC20Address != address(0), \"ERC20 address cannot be zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7262:7264   */\n      0x20\n        /* \"contracts/Marketplace.sol\":5886:5962  require(_ERC20Address != address(0), \"ERC20 address cannot be zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7244:7265   */\n      mstore\n        /* \"#utility.yul\":7301:7303   */\n      0x24\n        /* \"#utility.yul\":7281:7299   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7274:7304   */\n      mstore\n        /* \"#utility.yul\":7340:7374   */\n      0x455243323020616464726573732063616e6e6f74206265207a65726f20616464\n        /* \"#utility.yul\":7320:7338   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7313:7375   */\n      mstore\n        /* \"#utility.yul\":7411:7417   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7391:7409   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7384:7418   */\n      mstore\n        /* \"#utility.yul\":7435:7454   */\n      0x84\n      add\n        /* \"contracts/Marketplace.sol\":5886:5962  require(_ERC20Address != address(0), \"ERC20 address cannot be zero address\") */\n      tag_150\n        /* \"#utility.yul\":7060:7460   */\n      jump\n        /* \"contracts/Marketplace.sol\":5886:5962  require(_ERC20Address != address(0), \"ERC20 address cannot be zero address\") */\n    tag_194:\n        /* \"contracts/Marketplace.sol\":5973:5978  ERC20 */\n      0x02\n        /* \"contracts/Marketplace.sol\":5973:6002  ERC20 = IERC20(_ERC20Address) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Marketplace.sol\":6032:6062  ERC20.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":6056:6060  this */\n      address\n        /* \"contracts/Marketplace.sol\":6032:6062  ERC20.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2500:2574   */\n      mstore\n        /* \"contracts/Marketplace.sol\":6032:6047  ERC20.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2473:2491   */\n      0x24\n      add\n        /* \"contracts/Marketplace.sol\":6032:6062  ERC20.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/Marketplace.sol\":6021:6028  _amount */\n      dup3\n        /* \"contracts/Marketplace.sol\":6021:6062  _amount <= ERC20.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"contracts/Marketplace.sol\":6013:6086  require(_amount <= ERC20.balanceOf(address(this)), \"Insufficient funds.\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7856:7858   */\n      0x20\n        /* \"contracts/Marketplace.sol\":6013:6086  require(_amount <= ERC20.balanceOf(address(this)), \"Insufficient funds.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7838:7859   */\n      mstore\n        /* \"#utility.yul\":7895:7897   */\n      0x13\n        /* \"#utility.yul\":7875:7893   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7868:7898   */\n      mstore\n        /* \"#utility.yul\":7934:7955   */\n      0x496e73756666696369656e742066756e64732e00000000000000000000000000\n        /* \"#utility.yul\":7914:7932   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7907:7956   */\n      mstore\n        /* \"#utility.yul\":7973:7991   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":6013:6086  require(_amount <= ERC20.balanceOf(address(this)), \"Insufficient funds.\") */\n      tag_150\n        /* \"#utility.yul\":7654:7997   */\n      jump\n        /* \"contracts/Marketplace.sol\":6013:6086  require(_amount <= ERC20.balanceOf(address(this)), \"Insufficient funds.\") */\n    tag_202:\n        /* \"contracts/Marketplace.sol\":6097:6102  ERC20 */\n      sload(0x02)\n        /* \"contracts/Marketplace.sol\":6097:6133  ERC20.transfer(msg.sender , _amount) */\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":6112:6122  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":6097:6133  ERC20.transfer(msg.sender , _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":188:262   */\n      mstore\n        /* \"#utility.yul\":278:296   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":271:305   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Marketplace.sol\":6097:6102  ERC20 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace.sol\":6097:6111  ERC20.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":161:179   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":6097:6133  ERC20.transfer(msg.sender , _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_208:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_209\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_209:\n        /* \"contracts/Marketplace.sol\":5708:6141  function transferOrWithdraw (uint _amount, address _ERC20Address) public whenNotPaused nonReentrant onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":7633:7953  function getAllIdListed (ERC721 _nft, uint256 _tokenId) public view returns (uint){... */\n    tag_74:\n        /* \"contracts/Marketplace.sol\":7710:7714  uint */\n      0x00\n        /* \"contracts/Marketplace.sol\":7736:7737  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":7722:7933  for (uint i = 1; i <= numOfListing.current(); i++) {... */\n    tag_216:\n        /* \"contracts/Marketplace.sol\":7744:7756  numOfListing */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Marketplace.sol\":7739:7740  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":7739:7766  i <= numOfListing.current() */\n      gt\n        /* \"contracts/Marketplace.sol\":7722:7933  for (uint i = 1; i <= numOfListing.current(); i++) {... */\n      tag_217\n      jumpi\n        /* \"contracts/Marketplace.sol\":7784:7810  NFTListing storage listing */\n      0x00\n        /* \"contracts/Marketplace.sol\":7813:7824  listings[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":7813:7821  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":7813:7824  listings[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":7839:7850  listing.nft */\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":7839:7858  listing.nft == _nft */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n        /* \"contracts/Marketplace.sol\":7839:7850  listing.nft */\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":7839:7858  listing.nft == _nft */\n      eq\n        /* \"contracts/Marketplace.sol\":7839:7889  listing.nft == _nft && listing.tokenId == _tokenId */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":7881:7889  _tokenId */\n      dup4\n        /* \"contracts/Marketplace.sol\":7862:7869  listing */\n      dup2\n        /* \"contracts/Marketplace.sol\":7862:7877  listing.tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":7862:7889  listing.tokenId == _tokenId */\n      eq\n        /* \"contracts/Marketplace.sol\":7839:7889  listing.nft == _nft && listing.tokenId == _tokenId */\n    tag_220:\n        /* \"contracts/Marketplace.sol\":7835:7926  if (listing.nft == _nft && listing.tokenId == _tokenId) {... */\n      iszero\n      tag_221\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":7913:7914  i */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":7906:7914  return i */\n      jump(tag_215)\n        /* \"contracts/Marketplace.sol\":7835:7926  if (listing.nft == _nft && listing.tokenId == _tokenId) {... */\n    tag_221:\n      pop\n        /* \"contracts/Marketplace.sol\":7768:7771  i++ */\n      dup1\n      tag_222\n      dup2\n      tag_223\n      jump\t// in\n    tag_222:\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":7722:7933  for (uint i = 1; i <= numOfListing.current(); i++) {... */\n      jump(tag_216)\n    tag_217:\n      pop\n        /* \"contracts/Marketplace.sol\":7946:7947  0 */\n      0x00\n        /* \"contracts/Marketplace.sol\":7939:7947  return 0 */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":7633:7953  function getAllIdListed (ERC721 _nft, uint256 _tokenId) public view returns (uint){... */\n    tag_215:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":5037:5646  function updateNFT(ERC721 _nft, uint _Id, address _sender) public whenNotPaused nonReentrant onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_226\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_228\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/Marketplace.sol\":5151:5177  NFTListing storage listing */\n      0x00\n        /* \"contracts/Marketplace.sol\":5180:5193  listings[_Id] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":5180:5188  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":5180:5193  listings[_Id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":5212:5219  _Id > 0 */\n      dup3\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Marketplace.sol\":5212:5252  _Id > 0 && _Id <= numOfListing.current() */\n      tag_232\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":5230:5242  numOfListing */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Marketplace.sol\":5223:5226  _Id */\n      dup4\n        /* \"contracts/Marketplace.sol\":5223:5252  _Id <= numOfListing.current() */\n      gt\n      iszero\n        /* \"contracts/Marketplace.sol\":5212:5252  _Id > 0 && _Id <= numOfListing.current() */\n    tag_232:\n        /* \"contracts/Marketplace.sol\":5204:5275  require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5205:5207   */\n      0x20\n        /* \"contracts/Marketplace.sol\":5204:5275  require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5187:5208   */\n      mstore\n        /* \"#utility.yul\":5244:5246   */\n      0x12\n        /* \"#utility.yul\":5224:5242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5217:5247   */\n      mstore\n        /* \"#utility.yul\":5283:5303   */\n      0x6974656d20646f65736e27742065786973740000000000000000000000000000\n        /* \"#utility.yul\":5263:5281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5256:5304   */\n      mstore\n        /* \"#utility.yul\":5321:5339   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":5204:5275  require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\") */\n      tag_150\n        /* \"#utility.yul\":5003:5345   */\n      jump\n        /* \"contracts/Marketplace.sol\":5204:5275  require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\") */\n    tag_234:\n        /* \"contracts/Marketplace.sol\":5294:5309  listing.forSale */\n      0x04\n      dup2\n      add\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace.sol\":5294:5318  listing.forSale != false */\n      iszero\n      iszero\n        /* \"contracts/Marketplace.sol\":5313:5318  false */\n      0x00\n        /* \"contracts/Marketplace.sol\":5294:5318  listing.forSale != false */\n      sub\n        /* \"contracts/Marketplace.sol\":5286:5343  require(listing.forSale != false, \"item is not for sell\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"contracts/Marketplace.sol\":5286:5343  require(listing.forSale != false, \"item is not for sell\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x14\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5652   */\n      0x6974656d206973206e6f7420666f722073656c6c000000000000000000000000\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5653   */\n      mstore\n        /* \"#utility.yul\":5670:5688   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":5286:5343  require(listing.forSale != false, \"item is not for sell\") */\n      tag_150\n        /* \"#utility.yul\":5350:5694   */\n      jump\n        /* \"contracts/Marketplace.sol\":5286:5343  require(listing.forSale != false, \"item is not for sell\") */\n    tag_236:\n        /* \"contracts/Marketplace.sol\":5362:5376  listing.seller */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":5362:5387  listing.seller != _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup5\n      and\n        /* \"contracts/Marketplace.sol\":5362:5376  listing.seller */\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":5362:5387  listing.seller != _sender */\n      sub\n        /* \"contracts/Marketplace.sol\":5354:5419  require(listing.seller != _sender, \"You cannot buy your own nft\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"contracts/Marketplace.sol\":5354:5419  require(listing.seller != _sender, \"You cannot buy your own nft\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5883:5904   */\n      mstore\n        /* \"#utility.yul\":5940:5942   */\n      0x1b\n        /* \"#utility.yul\":5920:5938   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5913:5943   */\n      mstore\n        /* \"#utility.yul\":5979:6008   */\n      0x596f752063616e6e6f742062757920796f7572206f776e206e66740000000000\n        /* \"#utility.yul\":5959:5977   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5952:6009   */\n      mstore\n        /* \"#utility.yul\":6026:6044   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":5354:5419  require(listing.seller != _sender, \"You cannot buy your own nft\") */\n      tag_150\n        /* \"#utility.yul\":5699:6050   */\n      jump\n        /* \"contracts/Marketplace.sol\":5354:5419  require(listing.seller != _sender, \"You cannot buy your own nft\") */\n    tag_238:\n        /* \"contracts/Marketplace.sol\":5438:5449  listing.nft */\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":5438:5457  listing.nft == _nft */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      dup2\n      and\n        /* \"contracts/Marketplace.sol\":5438:5449  listing.nft */\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":5438:5457  listing.nft == _nft */\n      eq\n        /* \"contracts/Marketplace.sol\":5430:5499  require(listing.nft == _nft, \"item is not the same contract address\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8593:8595   */\n      0x20\n        /* \"contracts/Marketplace.sol\":5430:5499  require(listing.nft == _nft, \"item is not the same contract address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8575:8596   */\n      mstore\n        /* \"#utility.yul\":8632:8634   */\n      0x25\n        /* \"#utility.yul\":8612:8630   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8605:8635   */\n      mstore\n        /* \"#utility.yul\":8671:8705   */\n      0x6974656d206973206e6f74207468652073616d6520636f6e7472616374206164\n        /* \"#utility.yul\":8651:8669   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8644:8706   */\n      mstore\n        /* \"#utility.yul\":8742:8749   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8722:8740   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8715:8750   */\n      mstore\n        /* \"#utility.yul\":8767:8786   */\n      0x84\n      add\n        /* \"contracts/Marketplace.sol\":5430:5499  require(listing.nft == _nft, \"item is not the same contract address\") */\n      tag_150\n        /* \"#utility.yul\":8391:8792   */\n      jump\n        /* \"contracts/Marketplace.sol\":5430:5499  require(listing.nft == _nft, \"item is not the same contract address\") */\n    tag_240:\n        /* \"contracts/Marketplace.sol\":5510:5524  listing.seller */\n      0x04\n      dup2\n      add\n        /* \"contracts/Marketplace.sol\":5510:5534  listing.seller = _sender */\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":5545:5568  listing.forSale = false */\n      0xffffffffffffffffffffff000000000000000000000000000000000000000000\n      and\n        /* \"contracts/Marketplace.sol\":5510:5534  listing.seller = _sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"contracts/Marketplace.sol\":5545:5568  listing.forSale = false */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x01\n        /* \"contracts/Marketplace.sol\":5607:5622  listing.tokenId */\n      dup3\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":5624:5637  listing.price */\n      0x02\n      dup4\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":5584:5638  updateToBuyer(_sender, listing.tokenId, listing.price) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6539:6613   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      dup5\n      add\n        /* \"#utility.yul\":6622:6656   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6672:6690   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6665:6699   */\n      mstore\n        /* \"contracts/Marketplace.sol\":5584:5638  updateToBuyer(_sender, listing.tokenId, listing.price) */\n      0xfc2e01ec8c4c53e02ee1fa8816c1692687966e0daef195be5b64c88d8e58e3ee\n      swap1\n        /* \"#utility.yul\":6527:6529   */\n      0x60\n        /* \"#utility.yul\":6512:6530   */\n      add\n        /* \"contracts/Marketplace.sol\":5584:5638  updateToBuyer(_sender, listing.tokenId, listing.price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Marketplace.sol\":5140:5646  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_244\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_244:\n        /* \"contracts/Marketplace.sol\":5037:5646  function updateNFT(ERC721 _nft, uint _Id, address _sender) public whenNotPaused nonReentrant onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":2594:2970  function cancel(ERC721 _nft, uint _Id) public payable onlyNftOwner(_nft, _Id) {... */\n    tag_88:\n        /* \"contracts/Marketplace.sol\":1507:1520  listings[_Id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":1507:1515  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":1507:1520  listings[_Id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":1507:1527  listings[_Id].seller */\n      0x04\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":2661:2665  _nft */\n      dup3\n      swap1\n        /* \"contracts/Marketplace.sol\":1507:1520  listings[_Id] */\n      dup3\n      swap1\n        /* \"contracts/Marketplace.sol\":1507:1527  listings[_Id].seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":1493:1503  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":1493:1527  msg.sender == listings[_Id].seller */\n      eq\n        /* \"contracts/Marketplace.sol\":1485:1528  require(msg.sender == listings[_Id].seller) */\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n        /* \"contracts/Marketplace.sol\":1555:1568  listings[_Id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":1555:1563  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":1555:1568  listings[_Id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":1555:1572  listings[_Id].nft */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Marketplace.sol\":1547:1572  _nft == listings[_Id].nft */\n      dup4\n      dup2\n      and\n        /* \"contracts/Marketplace.sol\":1555:1572  listings[_Id].nft */\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":1547:1572  _nft == listings[_Id].nft */\n      eq\n        /* \"contracts/Marketplace.sol\":1539:1573  require(_nft == listings[_Id].nft) */\n      tag_247\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_247:\n        /* \"contracts/Marketplace.sol\":2683:2709  NFTListing storage listing */\n      0x00\n        /* \"contracts/Marketplace.sol\":2712:2725  listings[_Id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":2712:2720  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":2712:2725  listings[_Id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":2744:2758  listing.seller */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":2744:2772  listing.seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Marketplace.sol\":2744:2758  listing.seller */\n      and\n        /* \"contracts/Marketplace.sol\":2762:2772  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":2744:2772  listing.seller == msg.sender */\n      eq\n        /* \"contracts/Marketplace.sol\":2736:2794  require(listing.seller == msg.sender, \"is not the seller\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8999:9001   */\n      0x20\n        /* \"contracts/Marketplace.sol\":2736:2794  require(listing.seller == msg.sender, \"is not the seller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8981:9002   */\n      mstore\n        /* \"#utility.yul\":9038:9040   */\n      0x11\n        /* \"#utility.yul\":9018:9036   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9011:9041   */\n      mstore\n        /* \"#utility.yul\":9077:9096   */\n      0x6973206e6f74207468652073656c6c6572000000000000000000000000000000\n        /* \"#utility.yul\":9057:9075   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9050:9097   */\n      mstore\n        /* \"#utility.yul\":9114:9132   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":2736:2794  require(listing.seller == msg.sender, \"is not the seller\") */\n      tag_150\n        /* \"#utility.yul\":8797:9138   */\n      jump\n        /* \"contracts/Marketplace.sol\":2736:2794  require(listing.seller == msg.sender, \"is not the seller\") */\n    tag_249:\n        /* \"contracts/Marketplace.sol\":2813:2828  listing.forSale */\n      0x04\n      dup2\n      add\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace.sol\":2813:2836  listing.forSale == true */\n      iszero\n      iszero\n        /* \"contracts/Marketplace.sol\":2832:2836  true */\n      0x01\n        /* \"contracts/Marketplace.sol\":2813:2836  listing.forSale == true */\n      eq\n        /* \"contracts/Marketplace.sol\":2805:2856  require(listing.forSale == true, \"is not listened\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9345:9347   */\n      0x20\n        /* \"contracts/Marketplace.sol\":2805:2856  require(listing.forSale == true, \"is not listened\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9327:9348   */\n      mstore\n        /* \"#utility.yul\":9384:9386   */\n      0x0f\n        /* \"#utility.yul\":9364:9382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9357:9387   */\n      mstore\n        /* \"#utility.yul\":9423:9440   */\n      0x6973206e6f74206c697374656e65640000000000000000000000000000000000\n        /* \"#utility.yul\":9403:9421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9396:9441   */\n      mstore\n        /* \"#utility.yul\":9458:9476   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":2805:2856  require(listing.forSale == true, \"is not listened\") */\n      tag_150\n        /* \"#utility.yul\":9143:9482   */\n      jump\n        /* \"contracts/Marketplace.sol\":2805:2856  require(listing.forSale == true, \"is not listened\") */\n    tag_252:\n        /* \"contracts/Marketplace.sol\":2912:2927  listing.tokenId */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":2867:2928  _nft.transferFrom(address(this), msg.sender, listing.tokenId) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":2893:2897  this */\n      address\n        /* \"contracts/Marketplace.sol\":2867:2928  _nft.transferFrom(address(this), msg.sender, listing.tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9750:9784   */\n      mstore\n        /* \"contracts/Marketplace.sol\":2900:2910  msg.sender */\n      caller\n        /* \"#utility.yul\":9800:9818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9793:9836   */\n      mstore\n        /* \"#utility.yul\":9852:9870   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9845:9879   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Marketplace.sol\":2867:2884  _nft.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9662:9680   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":2867:2928  _nft.transferFrom(address(this), msg.sender, listing.tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_257:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_259:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":2939:2954  listing.forSale */\n      0x04\n      add\n        /* \"contracts/Marketplace.sol\":2939:2962  listing.forSale = false */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":2594:2970  function cancel(ERC721 _nft, uint _Id) public payable onlyNftOwner(_nft, _Id) {... */\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":6181:6294  function updateComissionPercentage(uint256 _value) public onlyOwner{... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/Marketplace.sol\":6259:6279  commissionPercentage */\n      0x05\n        /* \"contracts/Marketplace.sol\":6259:6288  commissionPercentage = _value */\n      sstore\n        /* \"contracts/Marketplace.sol\":6181:6294  function updateComissionPercentage(uint256 _value) public onlyOwner{... */\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":3044:4065  function buyNFT(ERC721 _nft, uint _Id) public payable whenNotPaused nonReentrant {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_264\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_266\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/Marketplace.sol\":3136:3162  NFTListing storage listing */\n      0x00\n        /* \"contracts/Marketplace.sol\":3165:3178  listings[_Id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":3165:3173  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":3165:3178  listings[_Id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":3197:3204  _Id > 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Marketplace.sol\":3197:3237  _Id > 0 && _Id <= numOfListing.current() */\n      tag_268\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":3215:3227  numOfListing */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Marketplace.sol\":3208:3211  _Id */\n      dup3\n        /* \"contracts/Marketplace.sol\":3208:3237  _Id <= numOfListing.current() */\n      gt\n      iszero\n        /* \"contracts/Marketplace.sol\":3197:3237  _Id > 0 && _Id <= numOfListing.current() */\n    tag_268:\n        /* \"contracts/Marketplace.sol\":3189:3260  require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5205:5207   */\n      0x20\n        /* \"contracts/Marketplace.sol\":3189:3260  require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5187:5208   */\n      mstore\n        /* \"#utility.yul\":5244:5246   */\n      0x12\n        /* \"#utility.yul\":5224:5242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5217:5247   */\n      mstore\n        /* \"#utility.yul\":5283:5303   */\n      0x6974656d20646f65736e27742065786973740000000000000000000000000000\n        /* \"#utility.yul\":5263:5281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5256:5304   */\n      mstore\n        /* \"#utility.yul\":5321:5339   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":3189:3260  require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\") */\n      tag_150\n        /* \"#utility.yul\":5003:5345   */\n      jump\n        /* \"contracts/Marketplace.sol\":3189:3260  require(_Id > 0 && _Id <= numOfListing.current(), \"item doesn't exist\") */\n    tag_270:\n        /* \"contracts/Marketplace.sol\":3279:3294  listing.forSale */\n      0x04\n      dup2\n      add\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace.sol\":3279:3303  listing.forSale != false */\n      iszero\n      iszero\n        /* \"contracts/Marketplace.sol\":3298:3303  false */\n      0x00\n        /* \"contracts/Marketplace.sol\":3279:3303  listing.forSale != false */\n      sub\n        /* \"contracts/Marketplace.sol\":3271:3328  require(listing.forSale != false, \"item is not for sell\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"contracts/Marketplace.sol\":3271:3328  require(listing.forSale != false, \"item is not for sell\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x14\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5652   */\n      0x6974656d206973206e6f7420666f722073656c6c000000000000000000000000\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5653   */\n      mstore\n        /* \"#utility.yul\":5670:5688   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":3271:3328  require(listing.forSale != false, \"item is not for sell\") */\n      tag_150\n        /* \"#utility.yul\":5350:5694   */\n      jump\n        /* \"contracts/Marketplace.sol\":3271:3328  require(listing.forSale != false, \"item is not for sell\") */\n    tag_272:\n        /* \"contracts/Marketplace.sol\":3347:3361  listing.seller */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":3365:3375  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":3347:3375  listing.seller != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Marketplace.sol\":3347:3361  listing.seller */\n      swap1\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":3347:3375  listing.seller != msg.sender */\n      sub\n        /* \"contracts/Marketplace.sol\":3339:3407  require(listing.seller != msg.sender, \"You cannot buy your own nft\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"contracts/Marketplace.sol\":3339:3407  require(listing.seller != msg.sender, \"You cannot buy your own nft\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5883:5904   */\n      mstore\n        /* \"#utility.yul\":5940:5942   */\n      0x1b\n        /* \"#utility.yul\":5920:5938   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5913:5943   */\n      mstore\n        /* \"#utility.yul\":5979:6008   */\n      0x596f752063616e6e6f742062757920796f7572206f776e206e66740000000000\n        /* \"#utility.yul\":5959:5977   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5952:6009   */\n      mstore\n        /* \"#utility.yul\":6026:6044   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":3339:3407  require(listing.seller != msg.sender, \"You cannot buy your own nft\") */\n      tag_150\n        /* \"#utility.yul\":5699:6050   */\n      jump\n        /* \"contracts/Marketplace.sol\":3339:3407  require(listing.seller != msg.sender, \"You cannot buy your own nft\") */\n    tag_274:\n        /* \"contracts/Marketplace.sol\":3426:3437  listing.nft */\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":3426:3445  listing.nft == _nft */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      dup2\n      and\n        /* \"contracts/Marketplace.sol\":3426:3437  listing.nft */\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":3426:3445  listing.nft == _nft */\n      eq\n        /* \"contracts/Marketplace.sol\":3418:3487  require(listing.nft == _nft, \"item is not the same contract address\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8593:8595   */\n      0x20\n        /* \"contracts/Marketplace.sol\":3418:3487  require(listing.nft == _nft, \"item is not the same contract address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8575:8596   */\n      mstore\n        /* \"#utility.yul\":8632:8634   */\n      0x25\n        /* \"#utility.yul\":8612:8630   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8605:8635   */\n      mstore\n        /* \"#utility.yul\":8671:8705   */\n      0x6974656d206973206e6f74207468652073616d6520636f6e7472616374206164\n        /* \"#utility.yul\":8651:8669   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8644:8706   */\n      mstore\n        /* \"#utility.yul\":8742:8749   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8722:8740   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8715:8750   */\n      mstore\n        /* \"#utility.yul\":8767:8786   */\n      0x84\n      add\n        /* \"contracts/Marketplace.sol\":3418:3487  require(listing.nft == _nft, \"item is not the same contract address\") */\n      tag_150\n        /* \"#utility.yul\":8391:8792   */\n      jump\n        /* \"contracts/Marketplace.sol\":3418:3487  require(listing.nft == _nft, \"item is not the same contract address\") */\n    tag_276:\n        /* \"contracts/Marketplace.sol\":3519:3526  listing */\n      dup1\n        /* \"contracts/Marketplace.sol\":3519:3532  listing.price */\n      0x02\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":3506:3515  msg.value */\n      callvalue\n        /* \"contracts/Marketplace.sol\":3506:3532  msg.value >= listing.price */\n      lt\n      iszero\n        /* \"contracts/Marketplace.sol\":3498:3576  require(msg.value >= listing.price, \"not enough balance for this transaction\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10092:10094   */\n      0x20\n        /* \"contracts/Marketplace.sol\":3498:3576  require(msg.value >= listing.price, \"not enough balance for this transaction\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10074:10095   */\n      mstore\n        /* \"#utility.yul\":10131:10133   */\n      0x27\n        /* \"#utility.yul\":10111:10129   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10104:10134   */\n      mstore\n        /* \"#utility.yul\":10170:10204   */\n      0x6e6f7420656e6f7567682062616c616e636520666f722074686973207472616e\n        /* \"#utility.yul\":10150:10168   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10143:10205   */\n      mstore\n        /* \"#utility.yul\":10241:10250   */\n      0x73616374696f6e00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10221:10239   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10214:10251   */\n      mstore\n        /* \"#utility.yul\":10268:10287   */\n      0x84\n      add\n        /* \"contracts/Marketplace.sol\":3498:3576  require(msg.value >= listing.price, \"not enough balance for this transaction\") */\n      tag_150\n        /* \"#utility.yul\":9890:10293   */\n      jump\n        /* \"contracts/Marketplace.sol\":3498:3576  require(msg.value >= listing.price, \"not enough balance for this transaction\") */\n    tag_278:\n        /* \"contracts/Marketplace.sol\":3602:3615  listing.price */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":3587:3599  amountListed */\n      0x08\n        /* \"contracts/Marketplace.sol\":3587:3615  amountListed = listing.price */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":3661:3681  commissionPercentage */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":3644:3693  amountListed.mul(commissionPercentage).div(10000) */\n      tag_281\n      swap2\n        /* \"contracts/Marketplace.sol\":3687:3692  10000 */\n      0x2710\n      swap2\n        /* \"contracts/Marketplace.sol\":3644:3682  amountListed.mul(commissionPercentage) */\n      tag_159\n      swap2\n        /* \"contracts/Marketplace.sol\":3602:3615  listing.price */\n      swap1\n        /* \"contracts/Marketplace.sol\":3644:3660  amountListed.mul */\n      tag_160\n        /* \"contracts/Marketplace.sol\":3644:3682  amountListed.mul(commissionPercentage) */\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":3644:3693  amountListed.mul(commissionPercentage).div(10000) */\n    tag_281:\n        /* \"contracts/Marketplace.sol\":3626:3641  comissionAmount */\n      0x06\n        /* \"contracts/Marketplace.sol\":3626:3693  comissionAmount = amountListed.mul(commissionPercentage).div(10000) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":3719:3731  amountListed */\n      sload(0x08)\n        /* \"contracts/Marketplace.sol\":3719:3752  amountListed.sub(comissionAmount) */\n      tag_283\n      swap2\n        /* \"contracts/Marketplace.sol\":3719:3735  amountListed.sub */\n      tag_163\n        /* \"contracts/Marketplace.sol\":3719:3752  amountListed.sub(comissionAmount) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/Marketplace.sol\":3704:3716  sellerAmount */\n      0x07\n        /* \"contracts/Marketplace.sol\":3704:3752  sellerAmount = amountListed.sub(comissionAmount) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":3778:3790  listing.coin */\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":3763:3768  ERC20 */\n      0x02\n        /* \"contracts/Marketplace.sol\":3763:3791  ERC20 = IERC20(listing.coin) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n        /* \"contracts/Marketplace.sol\":3778:3790  listing.coin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      dup4\n      and\n        /* \"contracts/Marketplace.sol\":3763:3791  ERC20 = IERC20(listing.coin) */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Marketplace.sol\":3817:3831  listing.seller */\n      0x04\n      dup1\n      dup6\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":3802:3846  ERC20.transfer(listing.seller, sellerAmount) */\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":3817:3831  listing.seller */\n      swap4\n      and\n        /* \"contracts/Marketplace.sol\":3802:3846  ERC20.transfer(listing.seller, sellerAmount) */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":188:262   */\n      mstore\n        /* \"#utility.yul\":278:296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":271:305   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Marketplace.sol\":3802:3816  ERC20.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":161:179   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":3802:3846  ERC20.transfer(listing.seller, sellerAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_287:\n      pop\n        /* \"contracts/Marketplace.sol\":3904:3919  listing.tokenId */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":3859:3920  _nft.transferFrom(address(this), msg.sender, listing.tokenId) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":3885:3889  this */\n      address\n        /* \"contracts/Marketplace.sol\":3859:3920  _nft.transferFrom(address(this), msg.sender, listing.tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9750:9784   */\n      mstore\n        /* \"contracts/Marketplace.sol\":3892:3902  msg.sender */\n      caller\n        /* \"#utility.yul\":9800:9818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9793:9836   */\n      mstore\n        /* \"#utility.yul\":9852:9870   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9845:9879   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Marketplace.sol\":3859:3876  _nft.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9662:9680   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":3859:3920  _nft.transferFrom(address(this), msg.sender, listing.tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_289\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_289:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_291\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_291:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3931:3945  listing.seller */\n      0x04\n      dup2\n      add\n        /* \"contracts/Marketplace.sol\":3931:3958  listing.seller = msg.sender */\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":3969:3992  listing.forSale = false */\n      0xffffffffffffffffffffff000000000000000000000000000000000000000000\n      and\n        /* \"contracts/Marketplace.sol\":3948:3958  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":3969:3992  listing.forSale = false */\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n      0x01\n        /* \"contracts/Marketplace.sol\":4027:4042  listing.tokenId */\n      dup3\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":4044:4056  sellerAmount */\n      sload(0x07)\n        /* \"contracts/Marketplace.sol\":4008:4057  NftBuy(msg.sender, listing.tokenId, sellerAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6539:6613   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      dup5\n      add\n        /* \"#utility.yul\":6622:6656   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6672:6690   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6665:6699   */\n      mstore\n        /* \"contracts/Marketplace.sol\":4008:4057  NftBuy(msg.sender, listing.tokenId, sellerAmount) */\n      0xc0790eb4899023169be51dd7074a99a15959464f9a0e6b19767d8d61539b8726\n      swap1\n        /* \"#utility.yul\":6527:6529   */\n      0x60\n        /* \"#utility.yul\":6512:6530   */\n      add\n        /* \"contracts/Marketplace.sol\":4008:4057  NftBuy(msg.sender, listing.tokenId, sellerAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Marketplace.sol\":3125:4065  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_209\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contracts/Marketplace.sol\":6605:6708  function getListinglength() public view returns (uint) {... */\n    tag_98:\n        /* \"contracts/Marketplace.sol\":6654:6658  uint */\n      0x00\n        /* \"contracts/Marketplace.sol\":6678:6700  numOfListing.current() */\n      tag_295\n        /* \"contracts/Marketplace.sol\":6678:6690  numOfListing */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":6678:6700  numOfListing.current() */\n    tag_295:\n        /* \"contracts/Marketplace.sol\":6671:6700  return numOfListing.current() */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":6605:6708  function getListinglength() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":6896:7594  function getIdListed(ERC721 _nft, uint256 _tokenId) public view returns (uint256) {... */\n    tag_108:\n        /* \"contracts/Marketplace.sol\":6969:6976  uint256 */\n      0x00\n      dup1\n        /* \"contracts/Marketplace.sol\":7139:7140  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":7130:7403  for (i = 1; i <= numOfListing.current(); i++) {... */\n    tag_297:\n        /* \"contracts/Marketplace.sol\":7147:7159  numOfListing */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Marketplace.sol\":7142:7143  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":7142:7169  i <= numOfListing.current() */\n      gt\n        /* \"contracts/Marketplace.sol\":7130:7403  for (i = 1; i <= numOfListing.current(); i++) {... */\n      tag_298\n      jumpi\n        /* \"contracts/Marketplace.sol\":7191:7202  listings[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":7191:7199  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":7191:7202  listings[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":7191:7206  listings[i].nft */\n      sload\n        /* \"contracts/Marketplace.sol\":7191:7214  listings[i].nft == _nft */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n        /* \"contracts/Marketplace.sol\":7191:7206  listings[i].nft */\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":7191:7214  listings[i].nft == _nft */\n      eq\n        /* \"contracts/Marketplace.sol\":7191:7249  listings[i].nft == _nft && listings[i].tokenId == _tokenId */\n      dup1\n      iszero\n      tag_301\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":7218:7229  listings[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":7218:7226  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":7218:7229  listings[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":7218:7237  listings[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":7218:7249  listings[i].tokenId == _tokenId */\n      dup5\n      eq\n        /* \"contracts/Marketplace.sol\":7191:7249  listings[i].nft == _nft && listings[i].tokenId == _tokenId */\n    tag_301:\n        /* \"contracts/Marketplace.sol\":7191:7272  listings[i].nft == _nft && listings[i].tokenId == _tokenId && listings[i].forSale */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":7253:7264  listings[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":7253:7261  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":7253:7264  listings[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":7253:7272  listings[i].forSale */\n      0x04\n      add\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace.sol\":7191:7272  listings[i].nft == _nft && listings[i].tokenId == _tokenId && listings[i].forSale */\n    tag_302:\n        /* \"contracts/Marketplace.sol\":7187:7396  if (listings[i].nft == _nft && listings[i].tokenId == _tokenId && listings[i].forSale) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"contracts/Marketplace.sol\":7297:7301  true */\n      0x01\n        /* \"contracts/Marketplace.sol\":7289:7301  found = true */\n      swap2\n      pop\n        /* \"contracts/Marketplace.sol\":7361:7366  break */\n      jump(tag_298)\n        /* \"contracts/Marketplace.sol\":7187:7396  if (listings[i].nft == _nft && listings[i].tokenId == _tokenId && listings[i].forSale) {... */\n    tag_303:\n        /* \"contracts/Marketplace.sol\":7171:7174  i++ */\n      dup1\n      tag_304\n      dup2\n      tag_223\n      jump\t// in\n    tag_304:\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":7130:7403  for (i = 1; i <= numOfListing.current(); i++) {... */\n      jump(tag_297)\n    tag_298:\n        /* \"contracts/Marketplace.sol\":7500:7505  found */\n      dup2\n        /* \"contracts/Marketplace.sol\":7495:7534  if (!found) {... */\n      tag_305\n      jumpi\n        /* \"contracts/Marketplace.sol\":7525:7526  0 */\n      0x00\n        /* \"contracts/Marketplace.sol\":7518:7526  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_215)\n        /* \"contracts/Marketplace.sol\":7495:7534  if (!found) {... */\n    tag_305:\n        /* \"contracts/Marketplace.sol\":7549:7550  i */\n      swap5\n        /* \"contracts/Marketplace.sol\":6896:7594  function getIdListed(ERC721 _nft, uint256 _tokenId) public view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":1765:2432  function listNFT(ERC721 _nft, uint256 _tokenId, uint _price, address _coin) public payable {... */\n    tag_113:\n        /* \"contracts/Marketplace.sol\":1871:1893  _nft.ownerOf(_tokenId) */\n      mload(0x40)\n      0x6352211e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1504:1529   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Marketplace.sol\":1897:1907  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Marketplace.sol\":1871:1907  _nft.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Marketplace.sol\":1871:1883  _nft.ownerOf */\n      dup7\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":1477:1495   */\n      0x24\n      add\n        /* \"contracts/Marketplace.sol\":1871:1893  _nft.ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_309\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_309:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_310\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"contracts/Marketplace.sol\":1871:1907  _nft.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Marketplace.sol\":1863:1933  require(_nft.ownerOf(_tokenId) == msg.sender, \"You are not the owner\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10756:10758   */\n      0x20\n        /* \"contracts/Marketplace.sol\":1863:1933  require(_nft.ownerOf(_tokenId) == msg.sender, \"You are not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10738:10759   */\n      mstore\n        /* \"#utility.yul\":10795:10797   */\n      0x15\n        /* \"#utility.yul\":10775:10793   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10768:10798   */\n      mstore\n        /* \"#utility.yul\":10834:10857   */\n      0x596f7520617265206e6f7420746865206f776e65720000000000000000000000\n        /* \"#utility.yul\":10814:10832   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10807:10858   */\n      mstore\n        /* \"#utility.yul\":10875:10893   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":1863:1933  require(_nft.ownerOf(_tokenId) == msg.sender, \"You are not the owner\") */\n      tag_150\n        /* \"#utility.yul\":10554:10899   */\n      jump\n        /* \"contracts/Marketplace.sol\":1863:1933  require(_nft.ownerOf(_tokenId) == msg.sender, \"You are not the owner\") */\n    tag_312:\n        /* \"contracts/Marketplace.sol\":1957:1958  0 */\n      0x00\n        /* \"contracts/Marketplace.sol\":1948:1954  _price */\n      dup3\n        /* \"contracts/Marketplace.sol\":1948:1958  _price > 0 */\n      gt\n        /* \"contracts/Marketplace.sol\":1940:2002  require(_price > 0, \"NFTMarket: price must be greater than 0\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11106:11108   */\n      0x20\n        /* \"contracts/Marketplace.sol\":1940:2002  require(_price > 0, \"NFTMarket: price must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11088:11109   */\n      mstore\n        /* \"#utility.yul\":11145:11147   */\n      0x27\n        /* \"#utility.yul\":11125:11143   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11118:11148   */\n      mstore\n        /* \"#utility.yul\":11184:11218   */\n      0x4e46544d61726b65743a207072696365206d7573742062652067726561746572\n        /* \"#utility.yul\":11164:11182   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11157:11219   */\n      mstore\n        /* \"#utility.yul\":11255:11264   */\n      0x207468616e203000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11235:11253   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11228:11265   */\n      mstore\n        /* \"#utility.yul\":11282:11301   */\n      0x84\n      add\n        /* \"contracts/Marketplace.sol\":1940:2002  require(_price > 0, \"NFTMarket: price must be greater than 0\") */\n      tag_150\n        /* \"#utility.yul\":10904:11307   */\n      jump\n        /* \"contracts/Marketplace.sol\":1940:2002  require(_price > 0, \"NFTMarket: price must be greater than 0\") */\n    tag_315:\n        /* \"contracts/Marketplace.sol\":2009:2033  numOfListing.increment() */\n      tag_318\n        /* \"contracts/Marketplace.sol\":2009:2021  numOfListing */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Marketplace.sol\":2009:2033  numOfListing.increment() */\n    tag_318:\n        /* \"contracts/Marketplace.sol\":2075:2205  NFTListing(... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Marketplace.sol\":2096:2100  _nft */\n      dup6\n        /* \"contracts/Marketplace.sol\":2075:2205  NFTListing(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":2111:2119  _tokenId */\n      dup5\n        /* \"contracts/Marketplace.sol\":2075:2205  NFTListing(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":2130:2136  _price */\n      dup4\n        /* \"contracts/Marketplace.sol\":2075:2205  NFTListing(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":2147:2152  _coin */\n      dup3\n        /* \"contracts/Marketplace.sol\":2075:2205  NFTListing(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":2171:2181  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":2075:2205  NFTListing(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":2193:2198  false */\n      0x00\n        /* \"contracts/Marketplace.sol\":2075:2205  NFTListing(... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Marketplace.sol\":2040:2048  listings */\n      0x09\n        /* \"contracts/Marketplace.sol\":2040:2072  listings[numOfListing.current()] */\n      0x00\n        /* \"contracts/Marketplace.sol\":2049:2071  numOfListing.current() */\n      tag_320\n        /* \"contracts/Marketplace.sol\":2049:2061  numOfListing */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":2049:2071  numOfListing.current() */\n    tag_320:\n        /* \"contracts/Marketplace.sol\":2040:2072  listings[numOfListing.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Marketplace.sol\":2040:2205  listings[numOfListing.current()] = NFTListing(... */\n      dup5\n      mload\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap2\n      dup3\n      and\n      or\n      dup4\n      sstore\n      swap5\n      dup7\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      swap3\n      dup6\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      dup6\n      add\n      mload\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      swap2\n      dup6\n      and\n      swap2\n      swap1\n      swap6\n      and\n      or\n      swap1\n      swap4\n      sstore\n      0x80\n      dup5\n      add\n      mload\n      0x04\n      swap4\n      dup5\n      add\n      dup1\n      sload\n      0xa0\n      swap1\n      swap7\n      add\n      mload\n      iszero\n      iszero\n      0x010000000000000000000000000000000000000000\n      mul\n      0xffffffffffffffffffffff000000000000000000000000000000000000000000\n      swap1\n      swap7\n      and\n      swap2\n      swap1\n      swap4\n      and\n      or\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":2241:2249  listings */\n      0x09\n      swap1\n      dup3\n      swap1\n        /* \"contracts/Marketplace.sol\":2250:2272  numOfListing.current() */\n      tag_321\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":2250:2272  numOfListing.current() */\n    tag_321:\n        /* \"contracts/Marketplace.sol\":2241:2273  listings[numOfListing.current()] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":2280:2334  _nft.transferFrom(msg.sender, address(this), _tokenId) */\n      swap1\n      mload\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":2298:2308  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":2280:2334  _nft.transferFrom(msg.sender, address(this), _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9750:9784   */\n      mstore\n        /* \"contracts/Marketplace.sol\":2318:2322  this */\n      address\n        /* \"#utility.yul\":9800:9818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9793:9836   */\n      mstore\n        /* \"#utility.yul\":9852:9870   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9845:9879   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/Marketplace.sol\":2241:2273  listings[numOfListing.current()] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Marketplace.sol\":2280:2297  _nft.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9662:9680   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":2280:2334  _nft.transferFrom(msg.sender, address(this), _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_323\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_323:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_325\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_325:\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":2341:2356  listing.forSale */\n      0x04\n      dup1\n      dup4\n      add\n        /* \"contracts/Marketplace.sol\":2341:2363  listing.forSale = true */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      0x010000000000000000000000000000000000000000\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":2375:2428  NftList(msg.sender, _tokenId, numOfListing.current()) */\n      0x21149a5778ddc1afca837b00fd70c0fc0a6d1d25d1bd15bff4a84bab1eeb9a92\n      swap2\n      pop\n        /* \"contracts/Marketplace.sol\":2383:2393  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Marketplace.sol\":2395:2403  _tokenId */\n      dup7\n      swap1\n        /* \"contracts/Marketplace.sol\":2405:2427  numOfListing.current() */\n      tag_326\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":2405:2427  numOfListing.current() */\n    tag_326:\n        /* \"contracts/Marketplace.sol\":2375:2428  NftList(msg.sender, _tokenId, numOfListing.current()) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6569:6611   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6557:6612   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":6539:6613   */\n      dup5\n      mstore\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      dup5\n      add\n        /* \"#utility.yul\":6622:6656   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6672:6690   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6665:6699   */\n      mstore\n        /* \"#utility.yul\":6527:6529   */\n      0x60\n        /* \"#utility.yul\":6512:6530   */\n      add\n        /* \"contracts/Marketplace.sol\":2375:2428  NftList(msg.sender, _tokenId, numOfListing.current()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Marketplace.sol\":1856:2432  {... */\n      pop\n        /* \"contracts/Marketplace.sol\":1765:2432  function listNFT(ERC721 _nft, uint256 _tokenId, uint _price, address _coin) public payable {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_329\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2500:2574   */\n      mstore\n        /* \"#utility.yul\":2473:2491   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_150\n        /* \"#utility.yul\":2354:2580   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2500:2574   */\n      mstore\n        /* \"#utility.yul\":2473:2491   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_150\n        /* \"#utility.yul\":2354:2580   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_342\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_343\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_345:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n        /* \"#utility.yul\":2530:2572   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2518:2573   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2500:2574   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2488:2490   */\n      0x20\n        /* \"#utility.yul\":2473:2491   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11514:11516   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11496:11517   */\n      mstore\n        /* \"#utility.yul\":11553:11555   */\n      0x10\n        /* \"#utility.yul\":11533:11551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11526:11556   */\n      mstore\n        /* \"#utility.yul\":11592:11610   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":11572:11590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11565:11611   */\n      mstore\n        /* \"#utility.yul\":11628:11646   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_150\n        /* \"#utility.yul\":11312:11652   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11859:11861   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11841:11862   */\n      mstore\n        /* \"#utility.yul\":11898:11900   */\n      0x1f\n        /* \"#utility.yul\":11878:11896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11871:11901   */\n      mstore\n        /* \"#utility.yul\":11937:11970   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11917:11935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11910:11971   */\n      mstore\n        /* \"#utility.yul\":11988:12006   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_150\n        /* \"#utility.yul\":11657:12012   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_353:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_358\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_359\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_358\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_362\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_358\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_365\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_368\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      0x010000000000000000000000000000000000000000\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_345\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12804:12806   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12786:12807   */\n      mstore\n        /* \"#utility.yul\":12843:12845   */\n      0x14\n        /* \"#utility.yul\":12823:12841   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12816:12846   */\n      mstore\n        /* \"#utility.yul\":12882:12904   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":12862:12880   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12855:12905   */\n      mstore\n        /* \"#utility.yul\":12922:12940   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_150\n        /* \"#utility.yul\":12602:12946   */\n      jump\n        /* \"#utility.yul\":316:496   */\n    tag_38:\n        /* \"#utility.yul\":375:381   */\n      0x00\n        /* \"#utility.yul\":428:430   */\n      0x20\n        /* \"#utility.yul\":416:425   */\n      dup3\n        /* \"#utility.yul\":407:414   */\n      dup5\n        /* \"#utility.yul\":403:426   */\n      sub\n        /* \"#utility.yul\":399:431   */\n      slt\n        /* \"#utility.yul\":396:448   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":444:445   */\n      0x00\n        /* \"#utility.yul\":441:442   */\n      dup1\n        /* \"#utility.yul\":434:446   */\n      revert\n        /* \"#utility.yul\":396:448   */\n    tag_385:\n      pop\n        /* \"#utility.yul\":467:490   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":316:496   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1540:1694   */\n    tag_380:\n        /* \"#utility.yul\":1626:1668   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1619:1624   */\n      dup2\n        /* \"#utility.yul\":1615:1669   */\n      and\n        /* \"#utility.yul\":1608:1613   */\n      dup2\n        /* \"#utility.yul\":1605:1670   */\n      eq\n        /* \"#utility.yul\":1595:1688   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":1684:1685   */\n      0x00\n        /* \"#utility.yul\":1681:1682   */\n      dup1\n        /* \"#utility.yul\":1674:1686   */\n      revert\n        /* \"#utility.yul\":1699:2014   */\n    tag_65:\n        /* \"#utility.yul\":1767:1773   */\n      0x00\n        /* \"#utility.yul\":1775:1781   */\n      dup1\n        /* \"#utility.yul\":1828:1830   */\n      0x40\n        /* \"#utility.yul\":1816:1825   */\n      dup4\n        /* \"#utility.yul\":1807:1814   */\n      dup6\n        /* \"#utility.yul\":1803:1826   */\n      sub\n        /* \"#utility.yul\":1799:1831   */\n      slt\n        /* \"#utility.yul\":1796:1848   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":1844:1845   */\n      0x00\n        /* \"#utility.yul\":1841:1842   */\n      dup1\n        /* \"#utility.yul\":1834:1846   */\n      revert\n        /* \"#utility.yul\":1796:1848   */\n    tag_392:\n        /* \"#utility.yul\":1880:1889   */\n      dup3\n        /* \"#utility.yul\":1867:1890   */\n      calldataload\n        /* \"#utility.yul\":1857:1890   */\n      swap2\n      pop\n        /* \"#utility.yul\":1940:1942   */\n      0x20\n        /* \"#utility.yul\":1929:1938   */\n      dup4\n        /* \"#utility.yul\":1925:1943   */\n      add\n        /* \"#utility.yul\":1912:1944   */\n      calldataload\n        /* \"#utility.yul\":1953:1984   */\n      tag_393\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1953:1984   */\n      tag_380\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2003:2008   */\n      dup1\n        /* \"#utility.yul\":1993:2008   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1699:2014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2349   */\n    tag_73:\n        /* \"#utility.yul\":2102:2108   */\n      0x00\n        /* \"#utility.yul\":2110:2116   */\n      dup1\n        /* \"#utility.yul\":2163:2165   */\n      0x40\n        /* \"#utility.yul\":2151:2160   */\n      dup4\n        /* \"#utility.yul\":2142:2149   */\n      dup6\n        /* \"#utility.yul\":2138:2161   */\n      sub\n        /* \"#utility.yul\":2134:2166   */\n      slt\n        /* \"#utility.yul\":2131:2183   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":2179:2180   */\n      0x00\n        /* \"#utility.yul\":2176:2177   */\n      dup1\n        /* \"#utility.yul\":2169:2181   */\n      revert\n        /* \"#utility.yul\":2131:2183   */\n    tag_395:\n        /* \"#utility.yul\":2218:2227   */\n      dup3\n        /* \"#utility.yul\":2205:2228   */\n      calldataload\n        /* \"#utility.yul\":2237:2268   */\n      tag_396\n        /* \"#utility.yul\":2262:2267   */\n      dup2\n        /* \"#utility.yul\":2237:2268   */\n      tag_380\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2287:2292   */\n      swap5\n        /* \"#utility.yul\":2339:2341   */\n      0x20\n        /* \"#utility.yul\":2324:2342   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2311:2343   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2019:2349   */\n      jump\t// out\n        /* \"#utility.yul\":2585:3056   */\n    tag_84:\n        /* \"#utility.yul\":2677:2683   */\n      0x00\n        /* \"#utility.yul\":2685:2691   */\n      dup1\n        /* \"#utility.yul\":2693:2699   */\n      0x00\n        /* \"#utility.yul\":2746:2748   */\n      0x60\n        /* \"#utility.yul\":2734:2743   */\n      dup5\n        /* \"#utility.yul\":2725:2732   */\n      dup7\n        /* \"#utility.yul\":2721:2744   */\n      sub\n        /* \"#utility.yul\":2717:2749   */\n      slt\n        /* \"#utility.yul\":2714:2766   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2762:2763   */\n      0x00\n        /* \"#utility.yul\":2759:2760   */\n      dup1\n        /* \"#utility.yul\":2752:2764   */\n      revert\n        /* \"#utility.yul\":2714:2766   */\n    tag_399:\n        /* \"#utility.yul\":2801:2810   */\n      dup4\n        /* \"#utility.yul\":2788:2811   */\n      calldataload\n        /* \"#utility.yul\":2820:2851   */\n      tag_400\n        /* \"#utility.yul\":2845:2850   */\n      dup2\n        /* \"#utility.yul\":2820:2851   */\n      tag_380\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2870:2875   */\n      swap3\n      pop\n        /* \"#utility.yul\":2922:2924   */\n      0x20\n        /* \"#utility.yul\":2907:2925   */\n      dup5\n      add\n        /* \"#utility.yul\":2894:2926   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2978:2980   */\n      0x40\n        /* \"#utility.yul\":2963:2981   */\n      dup5\n      add\n        /* \"#utility.yul\":2950:2982   */\n      calldataload\n        /* \"#utility.yul\":2991:3024   */\n      tag_401\n        /* \"#utility.yul\":2950:2982   */\n      dup2\n        /* \"#utility.yul\":2991:3024   */\n      tag_380\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3043:3050   */\n      dup1\n        /* \"#utility.yul\":3033:3050   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2585:3056   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3306:3846   */\n    tag_112:\n        /* \"#utility.yul\":3407:3413   */\n      0x00\n        /* \"#utility.yul\":3415:3421   */\n      dup1\n        /* \"#utility.yul\":3423:3429   */\n      0x00\n        /* \"#utility.yul\":3431:3437   */\n      dup1\n        /* \"#utility.yul\":3484:3487   */\n      0x80\n        /* \"#utility.yul\":3472:3481   */\n      dup6\n        /* \"#utility.yul\":3463:3470   */\n      dup8\n        /* \"#utility.yul\":3459:3482   */\n      sub\n        /* \"#utility.yul\":3455:3488   */\n      slt\n        /* \"#utility.yul\":3452:3505   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":3501:3502   */\n      0x00\n        /* \"#utility.yul\":3498:3499   */\n      dup1\n        /* \"#utility.yul\":3491:3503   */\n      revert\n        /* \"#utility.yul\":3452:3505   */\n    tag_404:\n        /* \"#utility.yul\":3540:3549   */\n      dup5\n        /* \"#utility.yul\":3527:3550   */\n      calldataload\n        /* \"#utility.yul\":3559:3590   */\n      tag_405\n        /* \"#utility.yul\":3584:3589   */\n      dup2\n        /* \"#utility.yul\":3559:3590   */\n      tag_380\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3609:3614   */\n      swap4\n      pop\n        /* \"#utility.yul\":3661:3663   */\n      0x20\n        /* \"#utility.yul\":3646:3664   */\n      dup6\n      add\n        /* \"#utility.yul\":3633:3665   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3712:3714   */\n      0x40\n        /* \"#utility.yul\":3697:3715   */\n      dup6\n      add\n        /* \"#utility.yul\":3684:3716   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3753:3771   */\n      dup6\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3781:3814   */\n      tag_406\n        /* \"#utility.yul\":3740:3772   */\n      dup2\n        /* \"#utility.yul\":3781:3814   */\n      tag_380\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3306:3846   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4751:4998   */\n    tag_128:\n        /* \"#utility.yul\":4810:4816   */\n      0x00\n        /* \"#utility.yul\":4863:4865   */\n      0x20\n        /* \"#utility.yul\":4851:4860   */\n      dup3\n        /* \"#utility.yul\":4842:4849   */\n      dup5\n        /* \"#utility.yul\":4838:4861   */\n      sub\n        /* \"#utility.yul\":4834:4866   */\n      slt\n        /* \"#utility.yul\":4831:4883   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":4879:4880   */\n      0x00\n        /* \"#utility.yul\":4876:4877   */\n      dup1\n        /* \"#utility.yul\":4869:4881   */\n      revert\n        /* \"#utility.yul\":4831:4883   */\n    tag_410:\n        /* \"#utility.yul\":4918:4927   */\n      dup2\n        /* \"#utility.yul\":4905:4928   */\n      calldataload\n        /* \"#utility.yul\":4937:4968   */\n      tag_358\n        /* \"#utility.yul\":4962:4967   */\n      dup2\n        /* \"#utility.yul\":4937:4968   */\n      tag_380\n      jump\t// in\n        /* \"#utility.yul\":6055:6332   */\n    tag_168:\n        /* \"#utility.yul\":6122:6128   */\n      0x00\n        /* \"#utility.yul\":6175:6177   */\n      0x20\n        /* \"#utility.yul\":6163:6172   */\n      dup3\n        /* \"#utility.yul\":6154:6161   */\n      dup5\n        /* \"#utility.yul\":6150:6173   */\n      sub\n        /* \"#utility.yul\":6146:6178   */\n      slt\n        /* \"#utility.yul\":6143:6195   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":6191:6192   */\n      0x00\n        /* \"#utility.yul\":6188:6189   */\n      dup1\n        /* \"#utility.yul\":6181:6193   */\n      revert\n        /* \"#utility.yul\":6143:6195   */\n    tag_416:\n        /* \"#utility.yul\":6223:6232   */\n      dup2\n        /* \"#utility.yul\":6217:6233   */\n      mload\n        /* \"#utility.yul\":6276:6281   */\n      dup1\n        /* \"#utility.yul\":6269:6282   */\n      iszero\n        /* \"#utility.yul\":6262:6283   */\n      iszero\n        /* \"#utility.yul\":6255:6260   */\n      dup2\n        /* \"#utility.yul\":6252:6284   */\n      eq\n        /* \"#utility.yul\":6242:6302   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":6298:6299   */\n      0x00\n        /* \"#utility.yul\":6295:6296   */\n      dup1\n        /* \"#utility.yul\":6288:6300   */\n      revert\n        /* \"#utility.yul\":7465:7649   */\n    tag_201:\n        /* \"#utility.yul\":7535:7541   */\n      0x00\n        /* \"#utility.yul\":7588:7590   */\n      0x20\n        /* \"#utility.yul\":7576:7585   */\n      dup3\n        /* \"#utility.yul\":7567:7574   */\n      dup5\n        /* \"#utility.yul\":7563:7586   */\n      sub\n        /* \"#utility.yul\":7559:7591   */\n      slt\n        /* \"#utility.yul\":7556:7608   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":7604:7605   */\n      0x00\n        /* \"#utility.yul\":7601:7602   */\n      dup1\n        /* \"#utility.yul\":7594:7606   */\n      revert\n        /* \"#utility.yul\":7556:7608   */\n    tag_422:\n      pop\n        /* \"#utility.yul\":7627:7643   */\n      mload\n      swap2\n        /* \"#utility.yul\":7465:7649   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8002:8186   */\n    tag_381:\n        /* \"#utility.yul\":8054:8131   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8051:8052   */\n      0x00\n        /* \"#utility.yul\":8044:8132   */\n      mstore\n        /* \"#utility.yul\":8151:8155   */\n      0x11\n        /* \"#utility.yul\":8148:8149   */\n      0x04\n        /* \"#utility.yul\":8141:8156   */\n      mstore\n        /* \"#utility.yul\":8175:8179   */\n      0x24\n        /* \"#utility.yul\":8172:8173   */\n      0x00\n        /* \"#utility.yul\":8165:8180   */\n      revert\n        /* \"#utility.yul\":8191:8386   */\n    tag_223:\n        /* \"#utility.yul\":8230:8233   */\n      0x00\n        /* \"#utility.yul\":8261:8327   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8254:8259   */\n      dup3\n        /* \"#utility.yul\":8251:8328   */\n      sub\n        /* \"#utility.yul\":8248:8351   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":8331:8349   */\n      tag_427\n      tag_381\n      jump\t// in\n    tag_427:\n      pop\n        /* \"#utility.yul\":8378:8379   */\n      0x01\n        /* \"#utility.yul\":8367:8380   */\n      add\n      swap1\n        /* \"#utility.yul\":8191:8386   */\n      jump\t// out\n        /* \"#utility.yul\":10298:10549   */\n    tag_311:\n        /* \"#utility.yul\":10368:10374   */\n      0x00\n        /* \"#utility.yul\":10421:10423   */\n      0x20\n        /* \"#utility.yul\":10409:10418   */\n      dup3\n        /* \"#utility.yul\":10400:10407   */\n      dup5\n        /* \"#utility.yul\":10396:10419   */\n      sub\n        /* \"#utility.yul\":10392:10424   */\n      slt\n        /* \"#utility.yul\":10389:10441   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":10437:10438   */\n      0x00\n        /* \"#utility.yul\":10434:10435   */\n      dup1\n        /* \"#utility.yul\":10427:10439   */\n      revert\n        /* \"#utility.yul\":10389:10441   */\n    tag_434:\n        /* \"#utility.yul\":10469:10478   */\n      dup2\n        /* \"#utility.yul\":10463:10479   */\n      mload\n        /* \"#utility.yul\":10488:10519   */\n      tag_358\n        /* \"#utility.yul\":10513:10518   */\n      dup2\n        /* \"#utility.yul\":10488:10519   */\n      tag_380\n      jump\t// in\n        /* \"#utility.yul\":12017:12185   */\n    tag_359:\n        /* \"#utility.yul\":12090:12099   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12121:12130   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12138:12153   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12132:12154   */\n      dup5\n      eq\n        /* \"#utility.yul\":12118:12155   */\n      or\n        /* \"#utility.yul\":12108:12179   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":12159:12177   */\n      tag_215\n      tag_381\n      jump\t// in\n        /* \"#utility.yul\":12190:12464   */\n    tag_362:\n        /* \"#utility.yul\":12230:12231   */\n      0x00\n        /* \"#utility.yul\":12256:12257   */\n      dup3\n        /* \"#utility.yul\":12246:12435   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":12291:12368   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12288:12289   */\n      0x00\n        /* \"#utility.yul\":12281:12369   */\n      mstore\n        /* \"#utility.yul\":12392:12396   */\n      0x12\n        /* \"#utility.yul\":12389:12390   */\n      0x04\n        /* \"#utility.yul\":12382:12397   */\n      mstore\n        /* \"#utility.yul\":12420:12424   */\n      0x24\n        /* \"#utility.yul\":12417:12418   */\n      0x00\n        /* \"#utility.yul\":12410:12425   */\n      revert\n        /* \"#utility.yul\":12246:12435   */\n    tag_444:\n      pop\n        /* \"#utility.yul\":12449:12458   */\n      div\n      swap1\n        /* \"#utility.yul\":12190:12464   */\n      jump\t// out\n        /* \"#utility.yul\":12469:12597   */\n    tag_365:\n        /* \"#utility.yul\":12536:12545   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12557:12568   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12554:12591   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":12571:12589   */\n      tag_215\n      tag_381\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220f88f35f3154eae5d966207d5a92c99548d02ec4a8c05676b45199a3953dfa35f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_4250": {
									"entryPoint": null,
									"id": 4250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 139,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:21",
										"nodeType": "YulBlock",
										"src": "0:514:21",
										"statements": [
											{
												"nativeSrc": "6:3:21",
												"nodeType": "YulBlock",
												"src": "6:3:21",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:21",
													"nodeType": "YulBlock",
													"src": "95:209:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:21",
																"nodeType": "YulBlock",
																"src": "141:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:21",
																					"nodeType": "YulLiteral",
																					"src": "150:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:21",
																					"nodeType": "YulLiteral",
																					"src": "153:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:21"
																			},
																			"nativeSrc": "143:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:21"
																		},
																		"nativeSrc": "143:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:21"
																		},
																		"nativeSrc": "112:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:21",
																		"nodeType": "YulLiteral",
																		"src": "137:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:21"
																},
																"nativeSrc": "108:32:21",
																"nodeType": "YulFunctionCall",
																"src": "108:32:21"
															},
															"nativeSrc": "105:52:21",
															"nodeType": "YulIf",
															"src": "105:52:21"
														},
														{
															"nativeSrc": "166:29:21",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:21"
																},
																"nativeSrc": "179:16:21",
																"nodeType": "YulFunctionCall",
																"src": "179:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:21",
																	"nodeType": "YulTypedName",
																	"src": "170:5:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:21",
																"nodeType": "YulBlock",
																"src": "258:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:21",
																					"nodeType": "YulLiteral",
																					"src": "267:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:21",
																					"nodeType": "YulLiteral",
																					"src": "270:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:21"
																			},
																			"nativeSrc": "260:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:21"
																		},
																		"nativeSrc": "260:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:21"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:21",
																										"nodeType": "YulLiteral",
																										"src": "243:3:21",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:21",
																										"nodeType": "YulLiteral",
																										"src": "248:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:21"
																								},
																								"nativeSrc": "239:11:21",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:21"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:21",
																								"nodeType": "YulLiteral",
																								"src": "252:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:21"
																						},
																						"nativeSrc": "235:19:21",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:21"
																				},
																				"nativeSrc": "224:31:21",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:21"
																		},
																		"nativeSrc": "214:42:21",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:21"
																},
																"nativeSrc": "207:50:21",
																"nodeType": "YulFunctionCall",
																"src": "207:50:21"
															},
															"nativeSrc": "204:70:21",
															"nodeType": "YulIf",
															"src": "204:70:21"
														},
														{
															"nativeSrc": "283:15:21",
															"nodeType": "YulAssignment",
															"src": "283:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:21",
																"nodeType": "YulIdentifier",
																"src": "293:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:21",
														"nodeType": "YulTypedName",
														"src": "61:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:21",
														"nodeType": "YulTypedName",
														"src": "72:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:21",
														"nodeType": "YulTypedName",
														"src": "84:6:21",
														"type": ""
													}
												],
												"src": "14:290:21"
											},
											{
												"body": {
													"nativeSrc": "410:102:21",
													"nodeType": "YulBlock",
													"src": "410:102:21",
													"statements": [
														{
															"nativeSrc": "420:26:21",
															"nodeType": "YulAssignment",
															"src": "420:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:21",
																		"nodeType": "YulLiteral",
																		"src": "443:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:21"
																},
																"nativeSrc": "428:18:21",
																"nodeType": "YulFunctionCall",
																"src": "428:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:21",
																								"nodeType": "YulLiteral",
																								"src": "493:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:21",
																								"nodeType": "YulLiteral",
																								"src": "498:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:21"
																						},
																						"nativeSrc": "489:11:21",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:21",
																						"nodeType": "YulLiteral",
																						"src": "502:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:21"
																				},
																				"nativeSrc": "485:19:21",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:21"
																		},
																		"nativeSrc": "473:32:21",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:21"
																},
																"nativeSrc": "455:51:21",
																"nodeType": "YulFunctionCall",
																"src": "455:51:21"
															},
															"nativeSrc": "455:51:21",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:21",
														"nodeType": "YulTypedName",
														"src": "379:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:21",
														"nodeType": "YulTypedName",
														"src": "390:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:21",
														"nodeType": "YulTypedName",
														"src": "401:4:21",
														"type": ""
													}
												],
												"src": "309:203:21"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x15E PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2426 CODESIZE SUB DUP1 PUSH3 0x2426 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x39 SWAP2 PUSH3 0xDA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x73 DUP2 PUSH3 0x8B JUMP JUMPDEST POP POP PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH3 0x109 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x102 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x230F DUP1 PUSH3 0x117 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x165 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x925A9953 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xCC4AA204 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDE74E57B GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xDF706CBC EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCC4AA204 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xCF02976F EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xD68CDC52 EQ PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CEFE029 GT PUSH2 0xAC JUMPI DUP1 PUSH4 0x9CEFE029 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xC85D5262 EQ PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x925A9953 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x98590EF9 EQ PUSH2 0x44B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65A19C20 GT PUSH2 0x11B JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x8699FDF4 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65A19C20 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x6EE4C120 EQ PUSH2 0x390 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x249E10C5 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x249E10C5 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x3EC62279 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEA59C4B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x21F67FBB EQ PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1A4 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 ADD SLOAD SWAP1 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x618 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x9F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0xCEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x12AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x17C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x407 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2160 JUMP JUMPDEST PUSH2 0x188D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x581 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP8 DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x407 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x1CDF JUMP JUMPDEST PUSH2 0x620 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x628 PUSH2 0x1D91 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x632 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x63A PUSH2 0x1E91 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x658 JUMPI POP PUSH1 0x4 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D20646F65736E27742065786973740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH0 SUB PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F7420666F722073656C6C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SUB PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742062757920796F7572206F776E206E66740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x7F7 SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH2 0x808 SWAP2 PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP4 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x952 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x976 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xC0790EB4899023169BE51DD7074A99A15959464F9A0E6B19767D8D61539B8726 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x9F2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FD PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x628 PUSH2 0x1F2C JUMP JUMPDEST PUSH2 0xA0D PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0xA15 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0xA1D PUSH2 0x1D3F JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742063616E6E6F74206265207A65726F0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243323020616464726573732063616E6E6F74206265207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH2 0xCEA PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x628 PUSH0 PUSH2 0x1F9A JUMP JUMPDEST PUSH0 PUSH1 0x1 JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0xD65 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xD45 JUMPI POP DUP4 DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xD52 JUMPI POP SWAP1 POP PUSH2 0xD6A JUMP JUMPDEST POP DUP1 PUSH2 0xD5D DUP2 PUSH2 0x2225 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD03 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD78 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0xD80 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0xD88 PUSH2 0x1D3F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xDA6 JUMPI POP PUSH1 0x4 SLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D20646F65736E27742065786973740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH0 SUB PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F7420666F722073656C6C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND SUB PUSH2 0xF1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742062757920796F7572206F776E206E66740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0xFC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F74207468652073616D6520636F6E7472616374206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH32 0xFC2E01EC8C4C53E02EE1FA8816C1692687966E0DAEF195BE5B64C88D8E58E3EE SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x105E PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1098 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x10C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6973206E6F74207468652073656C6C6572000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6973206E6F74206C697374656E65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x12A8 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x12BD PUSH2 0x1E91 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x12DB JUMPI POP PUSH1 0x4 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D20646F65736E27742065786973740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH0 SUB PUSH2 0x13CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F7420666F722073656C6C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SUB PUSH2 0x1450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742062757920796F7572206F776E206E66740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F74207468652073616D6520636F6E7472616374206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682062616C616E636520666F722074686973207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73616374696F6E00000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x15AC SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH2 0x15BD SWAP2 PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP4 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x166A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168E SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1706 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1718 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH32 0xC0790EB4899023169BE51DD7074A99A15959464F9A0E6B19767D8D61539B8726 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xCEA PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x17CB PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0x1876 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1822 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 EQ JUMPDEST DUP1 ISZERO PUSH2 0x1856 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1864 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x1876 JUMP JUMPDEST DUP1 PUSH2 0x186E DUP2 PUSH2 0x2225 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17D5 JUMP JUMPDEST DUP2 PUSH2 0x1885 JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0xD6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191C SWAP2 SWAP1 PUSH2 0x225C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x1A28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E46544D61726B65743A207072696365206D7573742062652067726561746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468616E203000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1A36 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH0 PUSH2 0x1AB3 PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP4 SSTORE SWAP5 DUP7 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP3 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0xA0 SWAP1 SWAP7 ADD MLOAD ISZERO ISZERO PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 SWAP1 SWAP7 AND SWAP2 SWAP1 SWAP4 AND OR SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x9 SWAP1 DUP3 SWAP1 PUSH2 0x1B99 SWAP1 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 SWAP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C2F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH32 0x21149A5778DDC1AFCA837B00FD70C0FC0A6D1D25D1BD15BFF4A84BAB1EEB9A92 SWAP2 POP CALLER SWAP1 DUP7 SWAP1 PUSH2 0x1CA3 SWAP1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CE7 PUSH2 0x1D3F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x9F2 DUP2 PUSH2 0x1F9A JUMP JUMPDEST PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1D99 PUSH2 0x200E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1EFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 DUP5 PUSH2 0x2277 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 DUP5 PUSH2 0x228E JUMP JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 DUP5 PUSH2 0x22C6 JUMP JUMPDEST PUSH2 0x1F34 PUSH2 0x1E0D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1DE3 CALLER SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20EC DUP2 PUSH2 0x20A8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2108 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2113 DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2133 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x213E DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2155 DUP2 PUSH2 0x20A8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2173 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x217E DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x219C DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F0F DUP2 PUSH2 0x20A8 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F0F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2255 JUMPI PUSH2 0x2255 PUSH2 0x21F8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1F0F DUP2 PUSH2 0x20A8 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD6A JUMPI PUSH2 0xD6A PUSH2 0x21F8 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x22C1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD6A PUSH2 0x21F8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 DUP16 CALLDATALOAD RETURN ISZERO 0x4E 0xAE 0x5D SWAP7 PUSH3 0x7D5A9 0x2C SWAP10 SLOAD DUP14 MUL 0xEC 0x4A DUP13 SDIV PUSH8 0x6B45199A3953DFA3 PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "478:7478:20:-:0;;;759:3;730:32;;1356:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1404:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:21;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;1006:5:2;996:15;;-1:-1:-1;;;;996:15:2;;;;1821:22:3;;478:7478:20;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;309:203::-;478:7478:20;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ERC20_4162": {
									"entryPoint": null,
									"id": 4162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ERCNFT_4165": {
									"entryPoint": null,
									"id": 4165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_4849": {
									"entryPoint": null,
									"id": 4849,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 7487,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2298": {
									"entryPoint": null,
									"id": 2298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_445": {
									"entryPoint": null,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_437": {
									"entryPoint": 7825,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_375": {
									"entryPoint": 7980,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 7693,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 8206,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 8090,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 7569,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyNFT_4581": {
									"entryPoint": 4781,
									"id": 4581,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cancel_4443": {
									"entryPoint": 4195,
									"id": 4443,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@current_2326": {
									"entryPoint": null,
									"id": 2326,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_3948": {
									"entryPoint": 7958,
									"id": 3948,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAllIdListed_4992": {
									"entryPoint": 3327,
									"id": 4992,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getComissionPercentage_4880": {
									"entryPoint": null,
									"id": 4880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getIdListed_4945": {
									"entryPoint": 6096,
									"id": 4945,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getListinglength_4872": {
									"entryPoint": 6081,
									"id": 4872,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNFTListing_4862": {
									"entryPoint": null,
									"id": 4862,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_2340": {
									"entryPoint": null,
									"id": 2340,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@listNFT_4387": {
									"entryPoint": 6285,
									"id": 4387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@listings_4241": {
									"entryPoint": null,
									"id": 4241,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_3933": {
									"entryPoint": 7940,
									"id": 3933,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pauseMarketplace_4287": {
									"entryPoint": 2549,
									"id": 4287,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3310,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_3918": {
									"entryPoint": 7969,
									"id": 3918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferNFT_4687": {
									"entryPoint": 1578,
									"id": 4687,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOrWithdraw_4826": {
									"entryPoint": 2565,
									"id": 4826,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 7391,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpauseMarketplace_4296": {
									"entryPoint": 1560,
									"id": 4296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateComissionPercentage_4838": {
									"entryPoint": 4768,
									"id": 4838,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateNFT_4768": {
									"entryPoint": 3440,
									"id": 4768,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC721_$1870t_uint256": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_ERC721_$1870t_uint256t_address": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_ERC721_$1870t_uint256t_uint256t_address": {
									"entryPoint": 8544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC721_$1870_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$535__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1987__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a23279b622caed07dd1bb467a739f2ca284330500cb944389f4b28a24305693__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15c9433dc1aea6b0d2ffba7c5d53bda6fe19decfc18282b615817a04fc48463b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f661ee60be2fa877a71593716195b5df43b1e45b4642968f0a03f55a279dc0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b930ef51d284c351242ccbfbfde4879a3afde537d75aab61455bfbc07a7188d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c28bacdabf75d90e0006b1780430df6a1d2cb3fed04d6313bd12cd36d634787c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6735dbf95389d47f014480904848604325f9aa811cb2b07128151f0b6707d7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_NFTListing_$4198_memory_ptr__to_t_struct$_NFTListing_$4198_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8696,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12948:21",
										"nodeType": "YulBlock",
										"src": "0:12948:21",
										"statements": [
											{
												"nativeSrc": "6:3:21",
												"nodeType": "YulBlock",
												"src": "6:3:21",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "143:168:21",
													"nodeType": "YulBlock",
													"src": "143:168:21",
													"statements": [
														{
															"nativeSrc": "153:26:21",
															"nodeType": "YulAssignment",
															"src": "153:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:2:21",
																		"nodeType": "YulLiteral",
																		"src": "176:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "161:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "161:3:21"
																},
																"nativeSrc": "161:18:21",
																"nodeType": "YulFunctionCall",
																"src": "161:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "153:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "153:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "195:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "210:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "210:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "218:42:21",
																				"nodeType": "YulLiteral",
																				"src": "218:42:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "206:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "206:3:21"
																		},
																		"nativeSrc": "206:55:21",
																		"nodeType": "YulFunctionCall",
																		"src": "206:55:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "188:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "188:6:21"
																},
																"nativeSrc": "188:74:21",
																"nodeType": "YulFunctionCall",
																"src": "188:74:21"
															},
															"nativeSrc": "188:74:21",
															"nodeType": "YulExpressionStatement",
															"src": "188:74:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "282:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "282:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "293:2:21",
																				"nodeType": "YulLiteral",
																				"src": "293:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "278:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "278:3:21"
																		},
																		"nativeSrc": "278:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "278:18:21"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "298:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "298:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "271:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:21"
																},
																"nativeSrc": "271:34:21",
																"nodeType": "YulFunctionCall",
																"src": "271:34:21"
															},
															"nativeSrc": "271:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "271:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14:297:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:21",
														"nodeType": "YulTypedName",
														"src": "104:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "115:6:21",
														"nodeType": "YulTypedName",
														"src": "115:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "123:6:21",
														"nodeType": "YulTypedName",
														"src": "123:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "134:4:21",
														"nodeType": "YulTypedName",
														"src": "134:4:21",
														"type": ""
													}
												],
												"src": "14:297:21"
											},
											{
												"body": {
													"nativeSrc": "386:110:21",
													"nodeType": "YulBlock",
													"src": "386:110:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "432:16:21",
																"nodeType": "YulBlock",
																"src": "432:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "441:1:21",
																					"nodeType": "YulLiteral",
																					"src": "441:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "444:1:21",
																					"nodeType": "YulLiteral",
																					"src": "444:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "434:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "434:6:21"
																			},
																			"nativeSrc": "434:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "434:12:21"
																		},
																		"nativeSrc": "434:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "434:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "407:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "407:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "416:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "416:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "403:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:21"
																		},
																		"nativeSrc": "403:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "403:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "428:2:21",
																		"nodeType": "YulLiteral",
																		"src": "428:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "399:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:21"
																},
																"nativeSrc": "399:32:21",
																"nodeType": "YulFunctionCall",
																"src": "399:32:21"
															},
															"nativeSrc": "396:52:21",
															"nodeType": "YulIf",
															"src": "396:52:21"
														},
														{
															"nativeSrc": "457:33:21",
															"nodeType": "YulAssignment",
															"src": "457:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "480:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "480:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "467:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "467:12:21"
																},
																"nativeSrc": "467:23:21",
																"nodeType": "YulFunctionCall",
																"src": "467:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "457:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "316:180:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "352:9:21",
														"nodeType": "YulTypedName",
														"src": "352:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "363:7:21",
														"nodeType": "YulTypedName",
														"src": "363:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "375:6:21",
														"nodeType": "YulTypedName",
														"src": "375:6:21",
														"type": ""
													}
												],
												"src": "316:180:21"
											},
											{
												"body": {
													"nativeSrc": "658:503:21",
													"nodeType": "YulBlock",
													"src": "658:503:21",
													"statements": [
														{
															"nativeSrc": "668:27:21",
															"nodeType": "YulAssignment",
															"src": "668:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "680:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "680:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "691:3:21",
																		"nodeType": "YulLiteral",
																		"src": "691:3:21",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "676:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "676:3:21"
																},
																"nativeSrc": "676:19:21",
																"nodeType": "YulFunctionCall",
																"src": "676:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "668:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "668:4:21"
																}
															]
														},
														{
															"nativeSrc": "704:52:21",
															"nodeType": "YulVariableDeclaration",
															"src": "704:52:21",
															"value": {
																"kind": "number",
																"nativeSrc": "714:42:21",
																"nodeType": "YulLiteral",
																"src": "714:42:21",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "708:2:21",
																	"nodeType": "YulTypedName",
																	"src": "708:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "772:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "772:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "793:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "793:6:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "787:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "787:5:21"
																				},
																				"nativeSrc": "787:13:21",
																				"nodeType": "YulFunctionCall",
																				"src": "787:13:21"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "802:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "802:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "783:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:21"
																		},
																		"nativeSrc": "783:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "783:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "765:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "765:6:21"
																},
																"nativeSrc": "765:41:21",
																"nodeType": "YulFunctionCall",
																"src": "765:41:21"
															},
															"nativeSrc": "765:41:21",
															"nodeType": "YulExpressionStatement",
															"src": "765:41:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "826:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:21",
																				"nodeType": "YulLiteral",
																				"src": "837:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "822:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "822:3:21"
																		},
																		"nativeSrc": "822:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "822:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "854:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "854:6:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "862:4:21",
																						"nodeType": "YulLiteral",
																						"src": "862:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "850:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "850:3:21"
																				},
																				"nativeSrc": "850:17:21",
																				"nodeType": "YulFunctionCall",
																				"src": "850:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "844:5:21",
																			"nodeType": "YulIdentifier",
																			"src": "844:5:21"
																		},
																		"nativeSrc": "844:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "844:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "815:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "815:6:21"
																},
																"nativeSrc": "815:54:21",
																"nodeType": "YulFunctionCall",
																"src": "815:54:21"
															},
															"nativeSrc": "815:54:21",
															"nodeType": "YulExpressionStatement",
															"src": "815:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "889:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "889:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "900:4:21",
																				"nodeType": "YulLiteral",
																				"src": "900:4:21",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "885:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "885:3:21"
																		},
																		"nativeSrc": "885:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "885:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "917:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "917:6:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "925:4:21",
																						"nodeType": "YulLiteral",
																						"src": "925:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "913:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:21"
																				},
																				"nativeSrc": "913:17:21",
																				"nodeType": "YulFunctionCall",
																				"src": "913:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "907:5:21",
																			"nodeType": "YulIdentifier",
																			"src": "907:5:21"
																		},
																		"nativeSrc": "907:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "907:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "878:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "878:6:21"
																},
																"nativeSrc": "878:54:21",
																"nodeType": "YulFunctionCall",
																"src": "878:54:21"
															},
															"nativeSrc": "878:54:21",
															"nodeType": "YulExpressionStatement",
															"src": "878:54:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "963:4:21",
																				"nodeType": "YulLiteral",
																				"src": "963:4:21",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "948:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:21"
																		},
																		"nativeSrc": "948:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "948:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "984:6:21",
																								"nodeType": "YulIdentifier",
																								"src": "984:6:21"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "992:4:21",
																								"nodeType": "YulLiteral",
																								"src": "992:4:21",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "980:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "980:3:21"
																						},
																						"nativeSrc": "980:17:21",
																						"nodeType": "YulFunctionCall",
																						"src": "980:17:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "974:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "974:5:21"
																				},
																				"nativeSrc": "974:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "974:24:21"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1000:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "1000:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "970:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "970:3:21"
																		},
																		"nativeSrc": "970:33:21",
																		"nodeType": "YulFunctionCall",
																		"src": "970:33:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "941:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "941:6:21"
																},
																"nativeSrc": "941:63:21",
																"nodeType": "YulFunctionCall",
																"src": "941:63:21"
															},
															"nativeSrc": "941:63:21",
															"nodeType": "YulExpressionStatement",
															"src": "941:63:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1024:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1024:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1035:4:21",
																				"nodeType": "YulLiteral",
																				"src": "1035:4:21",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1020:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1020:3:21"
																		},
																		"nativeSrc": "1020:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1020:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "1056:6:21",
																								"nodeType": "YulIdentifier",
																								"src": "1056:6:21"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1064:4:21",
																								"nodeType": "YulLiteral",
																								"src": "1064:4:21",
																								"type": "",
																								"value": "0x80"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1052:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "1052:3:21"
																						},
																						"nativeSrc": "1052:17:21",
																						"nodeType": "YulFunctionCall",
																						"src": "1052:17:21"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "1046:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "1046:5:21"
																				},
																				"nativeSrc": "1046:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1046:24:21"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1072:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "1072:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1042:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:21"
																		},
																		"nativeSrc": "1042:33:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1042:33:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1013:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:21"
																},
																"nativeSrc": "1013:63:21",
																"nodeType": "YulFunctionCall",
																"src": "1013:63:21"
															},
															"nativeSrc": "1013:63:21",
															"nodeType": "YulExpressionStatement",
															"src": "1013:63:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1096:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1096:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1107:4:21",
																				"nodeType": "YulLiteral",
																				"src": "1107:4:21",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1092:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1092:3:21"
																		},
																		"nativeSrc": "1092:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1092:20:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nativeSrc": "1138:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "1138:6:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1146:4:21",
																										"nodeType": "YulLiteral",
																										"src": "1146:4:21",
																										"type": "",
																										"value": "0xa0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1134:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "1134:3:21"
																								},
																								"nativeSrc": "1134:17:21",
																								"nodeType": "YulFunctionCall",
																								"src": "1134:17:21"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "1128:5:21",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:21"
																						},
																						"nativeSrc": "1128:24:21",
																						"nodeType": "YulFunctionCall",
																						"src": "1128:24:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1121:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "1121:6:21"
																				},
																				"nativeSrc": "1121:32:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:32:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1114:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "1114:6:21"
																		},
																		"nativeSrc": "1114:40:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1114:40:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1085:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:21"
																},
																"nativeSrc": "1085:70:21",
																"nodeType": "YulFunctionCall",
																"src": "1085:70:21"
															},
															"nativeSrc": "1085:70:21",
															"nodeType": "YulExpressionStatement",
															"src": "1085:70:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_NFTListing_$4198_memory_ptr__to_t_struct$_NFTListing_$4198_memory_ptr__fromStack_reversed",
												"nativeSrc": "501:660:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "627:9:21",
														"nodeType": "YulTypedName",
														"src": "627:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "638:6:21",
														"nodeType": "YulTypedName",
														"src": "638:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "649:4:21",
														"nodeType": "YulTypedName",
														"src": "649:4:21",
														"type": ""
													}
												],
												"src": "501:660:21"
											},
											{
												"body": {
													"nativeSrc": "1261:92:21",
													"nodeType": "YulBlock",
													"src": "1261:92:21",
													"statements": [
														{
															"nativeSrc": "1271:26:21",
															"nodeType": "YulAssignment",
															"src": "1271:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1283:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1283:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1294:2:21",
																		"nodeType": "YulLiteral",
																		"src": "1294:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1279:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:21"
																},
																"nativeSrc": "1279:18:21",
																"nodeType": "YulFunctionCall",
																"src": "1279:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1271:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "1271:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1313:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1313:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1338:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "1338:6:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1331:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "1331:6:21"
																				},
																				"nativeSrc": "1331:14:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1331:14:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1324:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "1324:6:21"
																		},
																		"nativeSrc": "1324:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1324:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1306:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1306:6:21"
																},
																"nativeSrc": "1306:41:21",
																"nodeType": "YulFunctionCall",
																"src": "1306:41:21"
															},
															"nativeSrc": "1306:41:21",
															"nodeType": "YulExpressionStatement",
															"src": "1306:41:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1166:187:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1230:9:21",
														"nodeType": "YulTypedName",
														"src": "1230:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1241:6:21",
														"nodeType": "YulTypedName",
														"src": "1241:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1252:4:21",
														"nodeType": "YulTypedName",
														"src": "1252:4:21",
														"type": ""
													}
												],
												"src": "1166:187:21"
											},
											{
												"body": {
													"nativeSrc": "1459:76:21",
													"nodeType": "YulBlock",
													"src": "1459:76:21",
													"statements": [
														{
															"nativeSrc": "1469:26:21",
															"nodeType": "YulAssignment",
															"src": "1469:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1481:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1481:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1492:2:21",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1477:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1477:3:21"
																},
																"nativeSrc": "1477:18:21",
																"nodeType": "YulFunctionCall",
																"src": "1477:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1469:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "1469:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1511:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1511:9:21"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1522:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1522:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1504:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1504:6:21"
																},
																"nativeSrc": "1504:25:21",
																"nodeType": "YulFunctionCall",
																"src": "1504:25:21"
															},
															"nativeSrc": "1504:25:21",
															"nodeType": "YulExpressionStatement",
															"src": "1504:25:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1358:177:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1428:9:21",
														"nodeType": "YulTypedName",
														"src": "1428:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1439:6:21",
														"nodeType": "YulTypedName",
														"src": "1439:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1450:4:21",
														"nodeType": "YulTypedName",
														"src": "1450:4:21",
														"type": ""
													}
												],
												"src": "1358:177:21"
											},
											{
												"body": {
													"nativeSrc": "1585:109:21",
													"nodeType": "YulBlock",
													"src": "1585:109:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "1672:16:21",
																"nodeType": "YulBlock",
																"src": "1672:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1681:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1681:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1684:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1684:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1674:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1674:6:21"
																			},
																			"nativeSrc": "1674:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1674:12:21"
																		},
																		"nativeSrc": "1674:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1674:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1608:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1608:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1619:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "1619:5:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1626:42:21",
																						"nodeType": "YulLiteral",
																						"src": "1626:42:21",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1615:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "1615:3:21"
																				},
																				"nativeSrc": "1615:54:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1615:54:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1605:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "1605:2:21"
																		},
																		"nativeSrc": "1605:65:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:65:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1598:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:21"
																},
																"nativeSrc": "1598:73:21",
																"nodeType": "YulFunctionCall",
																"src": "1598:73:21"
															},
															"nativeSrc": "1595:93:21",
															"nodeType": "YulIf",
															"src": "1595:93:21"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "1540:154:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1574:5:21",
														"nodeType": "YulTypedName",
														"src": "1574:5:21",
														"type": ""
													}
												],
												"src": "1540:154:21"
											},
											{
												"body": {
													"nativeSrc": "1786:228:21",
													"nodeType": "YulBlock",
													"src": "1786:228:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "1832:16:21",
																"nodeType": "YulBlock",
																"src": "1832:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1841:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1841:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1844:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1844:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1834:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1834:6:21"
																			},
																			"nativeSrc": "1834:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1834:12:21"
																		},
																		"nativeSrc": "1834:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1834:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1807:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "1807:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1816:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1816:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1803:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1803:3:21"
																		},
																		"nativeSrc": "1803:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1803:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1828:2:21",
																		"nodeType": "YulLiteral",
																		"src": "1828:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1799:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:21"
																},
																"nativeSrc": "1799:32:21",
																"nodeType": "YulFunctionCall",
																"src": "1799:32:21"
															},
															"nativeSrc": "1796:52:21",
															"nodeType": "YulIf",
															"src": "1796:52:21"
														},
														{
															"nativeSrc": "1857:33:21",
															"nodeType": "YulAssignment",
															"src": "1857:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1880:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1880:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1867:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "1867:12:21"
																},
																"nativeSrc": "1867:23:21",
																"nodeType": "YulFunctionCall",
																"src": "1867:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1857:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:21"
																}
															]
														},
														{
															"nativeSrc": "1899:45:21",
															"nodeType": "YulVariableDeclaration",
															"src": "1899:45:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1929:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1929:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1940:2:21",
																				"nodeType": "YulLiteral",
																				"src": "1940:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1925:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1925:3:21"
																		},
																		"nativeSrc": "1925:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1925:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1912:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "1912:12:21"
																},
																"nativeSrc": "1912:32:21",
																"nodeType": "YulFunctionCall",
																"src": "1912:32:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1903:5:21",
																	"nodeType": "YulTypedName",
																	"src": "1903:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1978:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1978:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1953:24:21",
																	"nodeType": "YulIdentifier",
																	"src": "1953:24:21"
																},
																"nativeSrc": "1953:31:21",
																"nodeType": "YulFunctionCall",
																"src": "1953:31:21"
															},
															"nativeSrc": "1953:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "1953:31:21"
														},
														{
															"nativeSrc": "1993:15:21",
															"nodeType": "YulAssignment",
															"src": "1993:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "2003:5:21",
																"nodeType": "YulIdentifier",
																"src": "2003:5:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1993:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1699:315:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1744:9:21",
														"nodeType": "YulTypedName",
														"src": "1744:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1755:7:21",
														"nodeType": "YulTypedName",
														"src": "1755:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1767:6:21",
														"nodeType": "YulTypedName",
														"src": "1767:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1775:6:21",
														"nodeType": "YulTypedName",
														"src": "1775:6:21",
														"type": ""
													}
												],
												"src": "1699:315:21"
											},
											{
												"body": {
													"nativeSrc": "2121:228:21",
													"nodeType": "YulBlock",
													"src": "2121:228:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "2167:16:21",
																"nodeType": "YulBlock",
																"src": "2167:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2176:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2176:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2179:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2179:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2169:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:21"
																			},
																			"nativeSrc": "2169:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2169:12:21"
																		},
																		"nativeSrc": "2169:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2142:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "2142:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2151:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2151:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2138:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:21"
																		},
																		"nativeSrc": "2138:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2163:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2134:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:21"
																},
																"nativeSrc": "2134:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2134:32:21"
															},
															"nativeSrc": "2131:52:21",
															"nodeType": "YulIf",
															"src": "2131:52:21"
														},
														{
															"nativeSrc": "2192:36:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2192:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2218:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2218:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2205:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2205:12:21"
																},
																"nativeSrc": "2205:23:21",
																"nodeType": "YulFunctionCall",
																"src": "2205:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2196:5:21",
																	"nodeType": "YulTypedName",
																	"src": "2196:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2262:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2262:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2237:24:21",
																	"nodeType": "YulIdentifier",
																	"src": "2237:24:21"
																},
																"nativeSrc": "2237:31:21",
																"nodeType": "YulFunctionCall",
																"src": "2237:31:21"
															},
															"nativeSrc": "2237:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "2237:31:21"
														},
														{
															"nativeSrc": "2277:15:21",
															"nodeType": "YulAssignment",
															"src": "2277:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "2287:5:21",
																"nodeType": "YulIdentifier",
																"src": "2287:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2277:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:21"
																}
															]
														},
														{
															"nativeSrc": "2301:42:21",
															"nodeType": "YulAssignment",
															"src": "2301:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2328:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2328:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2339:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2339:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2324:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:21"
																		},
																		"nativeSrc": "2324:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2324:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2311:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2311:12:21"
																},
																"nativeSrc": "2311:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2311:32:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2301:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2301:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC721_$1870t_uint256",
												"nativeSrc": "2019:330:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2079:9:21",
														"nodeType": "YulTypedName",
														"src": "2079:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2090:7:21",
														"nodeType": "YulTypedName",
														"src": "2090:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2102:6:21",
														"nodeType": "YulTypedName",
														"src": "2102:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2110:6:21",
														"nodeType": "YulTypedName",
														"src": "2110:6:21",
														"type": ""
													}
												],
												"src": "2019:330:21"
											},
											{
												"body": {
													"nativeSrc": "2455:125:21",
													"nodeType": "YulBlock",
													"src": "2455:125:21",
													"statements": [
														{
															"nativeSrc": "2465:26:21",
															"nodeType": "YulAssignment",
															"src": "2465:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2477:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2477:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2488:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2473:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:21"
																},
																"nativeSrc": "2473:18:21",
																"nodeType": "YulFunctionCall",
																"src": "2473:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2465:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "2465:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2507:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2507:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2522:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2522:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2530:42:21",
																				"nodeType": "YulLiteral",
																				"src": "2530:42:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2518:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2518:3:21"
																		},
																		"nativeSrc": "2518:55:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2518:55:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2500:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2500:6:21"
																},
																"nativeSrc": "2500:74:21",
																"nodeType": "YulFunctionCall",
																"src": "2500:74:21"
															},
															"nativeSrc": "2500:74:21",
															"nodeType": "YulExpressionStatement",
															"src": "2500:74:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2354:226:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2424:9:21",
														"nodeType": "YulTypedName",
														"src": "2424:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2435:6:21",
														"nodeType": "YulTypedName",
														"src": "2435:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2446:4:21",
														"nodeType": "YulTypedName",
														"src": "2446:4:21",
														"type": ""
													}
												],
												"src": "2354:226:21"
											},
											{
												"body": {
													"nativeSrc": "2704:352:21",
													"nodeType": "YulBlock",
													"src": "2704:352:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "2750:16:21",
																"nodeType": "YulBlock",
																"src": "2750:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2759:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2759:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2752:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2752:6:21"
																			},
																			"nativeSrc": "2752:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2752:12:21"
																		},
																		"nativeSrc": "2752:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2752:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2725:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "2725:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2734:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2734:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2721:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:21"
																		},
																		"nativeSrc": "2721:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2721:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2746:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2746:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2717:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2717:3:21"
																},
																"nativeSrc": "2717:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2717:32:21"
															},
															"nativeSrc": "2714:52:21",
															"nodeType": "YulIf",
															"src": "2714:52:21"
														},
														{
															"nativeSrc": "2775:36:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2775:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2801:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2801:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2788:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2788:12:21"
																},
																"nativeSrc": "2788:23:21",
																"nodeType": "YulFunctionCall",
																"src": "2788:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2779:5:21",
																	"nodeType": "YulTypedName",
																	"src": "2779:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2845:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2820:24:21",
																	"nodeType": "YulIdentifier",
																	"src": "2820:24:21"
																},
																"nativeSrc": "2820:31:21",
																"nodeType": "YulFunctionCall",
																"src": "2820:31:21"
															},
															"nativeSrc": "2820:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "2820:31:21"
														},
														{
															"nativeSrc": "2860:15:21",
															"nodeType": "YulAssignment",
															"src": "2860:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "2870:5:21",
																"nodeType": "YulIdentifier",
																"src": "2870:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2860:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:21"
																}
															]
														},
														{
															"nativeSrc": "2884:42:21",
															"nodeType": "YulAssignment",
															"src": "2884:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2911:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2911:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2922:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2922:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2907:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2907:3:21"
																		},
																		"nativeSrc": "2907:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2907:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2894:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2894:12:21"
																},
																"nativeSrc": "2894:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2894:32:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2884:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2884:6:21"
																}
															]
														},
														{
															"nativeSrc": "2935:47:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2935:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2967:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2967:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2978:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2978:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2963:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2963:3:21"
																		},
																		"nativeSrc": "2963:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2950:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2950:12:21"
																},
																"nativeSrc": "2950:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2950:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2939:7:21",
																	"nodeType": "YulTypedName",
																	"src": "2939:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3016:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "3016:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2991:24:21",
																	"nodeType": "YulIdentifier",
																	"src": "2991:24:21"
																},
																"nativeSrc": "2991:33:21",
																"nodeType": "YulFunctionCall",
																"src": "2991:33:21"
															},
															"nativeSrc": "2991:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "2991:33:21"
														},
														{
															"nativeSrc": "3033:17:21",
															"nodeType": "YulAssignment",
															"src": "3033:17:21",
															"value": {
																"name": "value_1",
																"nativeSrc": "3043:7:21",
																"nodeType": "YulIdentifier",
																"src": "3043:7:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3033:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC721_$1870t_uint256t_address",
												"nativeSrc": "2585:471:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2654:9:21",
														"nodeType": "YulTypedName",
														"src": "2654:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2665:7:21",
														"nodeType": "YulTypedName",
														"src": "2665:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2677:6:21",
														"nodeType": "YulTypedName",
														"src": "2677:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2685:6:21",
														"nodeType": "YulTypedName",
														"src": "2685:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2693:6:21",
														"nodeType": "YulTypedName",
														"src": "2693:6:21",
														"type": ""
													}
												],
												"src": "2585:471:21"
											},
											{
												"body": {
													"nativeSrc": "3176:125:21",
													"nodeType": "YulBlock",
													"src": "3176:125:21",
													"statements": [
														{
															"nativeSrc": "3186:26:21",
															"nodeType": "YulAssignment",
															"src": "3186:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3198:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "3198:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:2:21",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3194:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3194:3:21"
																},
																"nativeSrc": "3194:18:21",
																"nodeType": "YulFunctionCall",
																"src": "3194:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3186:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "3186:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3228:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "3228:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3243:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3243:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3251:42:21",
																				"nodeType": "YulLiteral",
																				"src": "3251:42:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3239:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3239:3:21"
																		},
																		"nativeSrc": "3239:55:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3239:55:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:21"
																},
																"nativeSrc": "3221:74:21",
																"nodeType": "YulFunctionCall",
																"src": "3221:74:21"
															},
															"nativeSrc": "3221:74:21",
															"nodeType": "YulExpressionStatement",
															"src": "3221:74:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$535__to_t_address__fromStack_reversed",
												"nativeSrc": "3061:240:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:21",
														"nodeType": "YulTypedName",
														"src": "3145:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3156:6:21",
														"nodeType": "YulTypedName",
														"src": "3156:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3167:4:21",
														"nodeType": "YulTypedName",
														"src": "3167:4:21",
														"type": ""
													}
												],
												"src": "3061:240:21"
											},
											{
												"body": {
													"nativeSrc": "3442:404:21",
													"nodeType": "YulBlock",
													"src": "3442:404:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "3489:16:21",
																"nodeType": "YulBlock",
																"src": "3489:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3498:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3498:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3501:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3501:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3491:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3491:6:21"
																			},
																			"nativeSrc": "3491:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3491:12:21"
																		},
																		"nativeSrc": "3491:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "3491:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3463:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "3463:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3472:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3472:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3459:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:21"
																		},
																		"nativeSrc": "3459:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3459:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3484:3:21",
																		"nodeType": "YulLiteral",
																		"src": "3484:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3455:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3455:3:21"
																},
																"nativeSrc": "3455:33:21",
																"nodeType": "YulFunctionCall",
																"src": "3455:33:21"
															},
															"nativeSrc": "3452:53:21",
															"nodeType": "YulIf",
															"src": "3452:53:21"
														},
														{
															"nativeSrc": "3514:36:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3514:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3540:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "3540:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3527:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3527:12:21"
																},
																"nativeSrc": "3527:23:21",
																"nodeType": "YulFunctionCall",
																"src": "3527:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3518:5:21",
																	"nodeType": "YulTypedName",
																	"src": "3518:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3584:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "3584:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3559:24:21",
																	"nodeType": "YulIdentifier",
																	"src": "3559:24:21"
																},
																"nativeSrc": "3559:31:21",
																"nodeType": "YulFunctionCall",
																"src": "3559:31:21"
															},
															"nativeSrc": "3559:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "3559:31:21"
														},
														{
															"nativeSrc": "3599:15:21",
															"nodeType": "YulAssignment",
															"src": "3599:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "3609:5:21",
																"nodeType": "YulIdentifier",
																"src": "3609:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3599:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:21"
																}
															]
														},
														{
															"nativeSrc": "3623:42:21",
															"nodeType": "YulAssignment",
															"src": "3623:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3650:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3650:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3661:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3661:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3646:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3646:3:21"
																		},
																		"nativeSrc": "3646:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3646:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3633:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3633:12:21"
																},
																"nativeSrc": "3633:32:21",
																"nodeType": "YulFunctionCall",
																"src": "3633:32:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3623:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:21"
																}
															]
														},
														{
															"nativeSrc": "3674:42:21",
															"nodeType": "YulAssignment",
															"src": "3674:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3701:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3701:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3712:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3712:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3697:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:21"
																		},
																		"nativeSrc": "3697:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3684:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3684:12:21"
																},
																"nativeSrc": "3684:32:21",
																"nodeType": "YulFunctionCall",
																"src": "3684:32:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3674:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3674:6:21"
																}
															]
														},
														{
															"nativeSrc": "3725:47:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3725:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3757:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3768:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3753:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:21"
																		},
																		"nativeSrc": "3753:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3740:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:21"
																},
																"nativeSrc": "3740:32:21",
																"nodeType": "YulFunctionCall",
																"src": "3740:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3729:7:21",
																	"nodeType": "YulTypedName",
																	"src": "3729:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3806:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "3806:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3781:24:21",
																	"nodeType": "YulIdentifier",
																	"src": "3781:24:21"
																},
																"nativeSrc": "3781:33:21",
																"nodeType": "YulFunctionCall",
																"src": "3781:33:21"
															},
															"nativeSrc": "3781:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "3781:33:21"
														},
														{
															"nativeSrc": "3823:17:21",
															"nodeType": "YulAssignment",
															"src": "3823:17:21",
															"value": {
																"name": "value_1",
																"nativeSrc": "3833:7:21",
																"nodeType": "YulIdentifier",
																"src": "3833:7:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3823:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC721_$1870t_uint256t_uint256t_address",
												"nativeSrc": "3306:540:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3384:9:21",
														"nodeType": "YulTypedName",
														"src": "3384:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3395:7:21",
														"nodeType": "YulTypedName",
														"src": "3395:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3407:6:21",
														"nodeType": "YulTypedName",
														"src": "3407:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3415:6:21",
														"nodeType": "YulTypedName",
														"src": "3415:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3423:6:21",
														"nodeType": "YulTypedName",
														"src": "3423:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3431:6:21",
														"nodeType": "YulTypedName",
														"src": "3431:6:21",
														"type": ""
													}
												],
												"src": "3306:540:21"
											},
											{
												"body": {
													"nativeSrc": "4101:398:21",
													"nodeType": "YulBlock",
													"src": "4101:398:21",
													"statements": [
														{
															"nativeSrc": "4111:27:21",
															"nodeType": "YulAssignment",
															"src": "4111:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4123:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4123:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4134:3:21",
																		"nodeType": "YulLiteral",
																		"src": "4134:3:21",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4119:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4119:3:21"
																},
																"nativeSrc": "4119:19:21",
																"nodeType": "YulFunctionCall",
																"src": "4119:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4111:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "4111:4:21"
																}
															]
														},
														{
															"nativeSrc": "4147:52:21",
															"nodeType": "YulVariableDeclaration",
															"src": "4147:52:21",
															"value": {
																"kind": "number",
																"nativeSrc": "4157:42:21",
																"nodeType": "YulLiteral",
																"src": "4157:42:21",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4151:2:21",
																	"nodeType": "YulTypedName",
																	"src": "4151:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4215:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4215:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4230:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4230:6:21"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4238:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "4238:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4226:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4226:3:21"
																		},
																		"nativeSrc": "4226:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4226:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4208:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:21"
																},
																"nativeSrc": "4208:34:21",
																"nodeType": "YulFunctionCall",
																"src": "4208:34:21"
															},
															"nativeSrc": "4208:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "4208:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4262:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4273:2:21",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4258:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:21"
																		},
																		"nativeSrc": "4258:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4258:18:21"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4278:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4278:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4251:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4251:6:21"
																},
																"nativeSrc": "4251:34:21",
																"nodeType": "YulFunctionCall",
																"src": "4251:34:21"
															},
															"nativeSrc": "4251:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "4251:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4305:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4305:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4316:2:21",
																				"nodeType": "YulLiteral",
																				"src": "4316:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4301:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4301:3:21"
																		},
																		"nativeSrc": "4301:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4301:18:21"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4321:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4321:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4294:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4294:6:21"
																},
																"nativeSrc": "4294:34:21",
																"nodeType": "YulFunctionCall",
																"src": "4294:34:21"
															},
															"nativeSrc": "4294:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "4294:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4348:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4348:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4359:2:21",
																				"nodeType": "YulLiteral",
																				"src": "4359:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4344:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:21"
																		},
																		"nativeSrc": "4344:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4344:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "4368:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4368:6:21"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4376:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "4376:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4364:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4364:3:21"
																		},
																		"nativeSrc": "4364:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4364:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4337:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:21"
																},
																"nativeSrc": "4337:43:21",
																"nodeType": "YulFunctionCall",
																"src": "4337:43:21"
															},
															"nativeSrc": "4337:43:21",
															"nodeType": "YulExpressionStatement",
															"src": "4337:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4400:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4400:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4411:3:21",
																				"nodeType": "YulLiteral",
																				"src": "4411:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4396:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4396:3:21"
																		},
																		"nativeSrc": "4396:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4396:19:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "4421:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4421:6:21"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4429:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "4429:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4417:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:21"
																		},
																		"nativeSrc": "4417:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4389:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4389:6:21"
																},
																"nativeSrc": "4389:44:21",
																"nodeType": "YulFunctionCall",
																"src": "4389:44:21"
															},
															"nativeSrc": "4389:44:21",
															"nodeType": "YulExpressionStatement",
															"src": "4389:44:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4453:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4453:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4464:3:21",
																				"nodeType": "YulLiteral",
																				"src": "4464:3:21",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4449:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4449:3:21"
																		},
																		"nativeSrc": "4449:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4449:19:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "4484:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "4484:6:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4477:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "4477:6:21"
																				},
																				"nativeSrc": "4477:14:21",
																				"nodeType": "YulFunctionCall",
																				"src": "4477:14:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4470:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "4470:6:21"
																		},
																		"nativeSrc": "4470:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4470:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4442:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:21"
																},
																"nativeSrc": "4442:51:21",
																"nodeType": "YulFunctionCall",
																"src": "4442:51:21"
															},
															"nativeSrc": "4442:51:21",
															"nodeType": "YulExpressionStatement",
															"src": "4442:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC721_$1870_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "3851:648:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4030:9:21",
														"nodeType": "YulTypedName",
														"src": "4030:9:21",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4041:6:21",
														"nodeType": "YulTypedName",
														"src": "4041:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4049:6:21",
														"nodeType": "YulTypedName",
														"src": "4049:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4057:6:21",
														"nodeType": "YulTypedName",
														"src": "4057:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4065:6:21",
														"nodeType": "YulTypedName",
														"src": "4065:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4073:6:21",
														"nodeType": "YulTypedName",
														"src": "4073:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4081:6:21",
														"nodeType": "YulTypedName",
														"src": "4081:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4092:4:21",
														"nodeType": "YulTypedName",
														"src": "4092:4:21",
														"type": ""
													}
												],
												"src": "3851:648:21"
											},
											{
												"body": {
													"nativeSrc": "4621:125:21",
													"nodeType": "YulBlock",
													"src": "4621:125:21",
													"statements": [
														{
															"nativeSrc": "4631:26:21",
															"nodeType": "YulAssignment",
															"src": "4631:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4643:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4643:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4654:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4654:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4639:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4639:3:21"
																},
																"nativeSrc": "4639:18:21",
																"nodeType": "YulFunctionCall",
																"src": "4639:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4631:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "4631:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4673:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4688:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4688:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4696:42:21",
																				"nodeType": "YulLiteral",
																				"src": "4696:42:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4684:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:21"
																		},
																		"nativeSrc": "4684:55:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4684:55:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4666:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4666:6:21"
																},
																"nativeSrc": "4666:74:21",
																"nodeType": "YulFunctionCall",
																"src": "4666:74:21"
															},
															"nativeSrc": "4666:74:21",
															"nodeType": "YulExpressionStatement",
															"src": "4666:74:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1987__to_t_address__fromStack_reversed",
												"nativeSrc": "4504:242:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4590:9:21",
														"nodeType": "YulTypedName",
														"src": "4590:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4601:6:21",
														"nodeType": "YulTypedName",
														"src": "4601:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4612:4:21",
														"nodeType": "YulTypedName",
														"src": "4612:4:21",
														"type": ""
													}
												],
												"src": "4504:242:21"
											},
											{
												"body": {
													"nativeSrc": "4821:177:21",
													"nodeType": "YulBlock",
													"src": "4821:177:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "4867:16:21",
																"nodeType": "YulBlock",
																"src": "4867:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4876:1:21",
																					"nodeType": "YulLiteral",
																					"src": "4876:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4879:1:21",
																					"nodeType": "YulLiteral",
																					"src": "4879:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4869:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4869:6:21"
																			},
																			"nativeSrc": "4869:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4869:12:21"
																		},
																		"nativeSrc": "4869:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4869:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4842:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4842:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4851:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4851:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4838:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:21"
																		},
																		"nativeSrc": "4838:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4838:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4863:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4863:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4834:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4834:3:21"
																},
																"nativeSrc": "4834:32:21",
																"nodeType": "YulFunctionCall",
																"src": "4834:32:21"
															},
															"nativeSrc": "4831:52:21",
															"nodeType": "YulIf",
															"src": "4831:52:21"
														},
														{
															"nativeSrc": "4892:36:21",
															"nodeType": "YulVariableDeclaration",
															"src": "4892:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4918:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4918:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4905:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "4905:12:21"
																},
																"nativeSrc": "4905:23:21",
																"nodeType": "YulFunctionCall",
																"src": "4905:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4896:5:21",
																	"nodeType": "YulTypedName",
																	"src": "4896:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4962:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "4962:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4937:24:21",
																	"nodeType": "YulIdentifier",
																	"src": "4937:24:21"
																},
																"nativeSrc": "4937:31:21",
																"nodeType": "YulFunctionCall",
																"src": "4937:31:21"
															},
															"nativeSrc": "4937:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "4937:31:21"
														},
														{
															"nativeSrc": "4977:15:21",
															"nodeType": "YulAssignment",
															"src": "4977:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "4987:5:21",
																"nodeType": "YulIdentifier",
																"src": "4987:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4977:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4977:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4751:247:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4787:9:21",
														"nodeType": "YulTypedName",
														"src": "4787:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4798:7:21",
														"nodeType": "YulTypedName",
														"src": "4798:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4810:6:21",
														"nodeType": "YulTypedName",
														"src": "4810:6:21",
														"type": ""
													}
												],
												"src": "4751:247:21"
											},
											{
												"body": {
													"nativeSrc": "5177:168:21",
													"nodeType": "YulBlock",
													"src": "5177:168:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5187:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:21"
																},
																"nativeSrc": "5187:21:21",
																"nodeType": "YulFunctionCall",
																"src": "5187:21:21"
															},
															"nativeSrc": "5187:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "5187:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5228:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5228:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5239:2:21",
																				"nodeType": "YulLiteral",
																				"src": "5239:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5224:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:21"
																		},
																		"nativeSrc": "5224:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5224:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5244:2:21",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5217:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:21"
																},
																"nativeSrc": "5217:30:21",
																"nodeType": "YulFunctionCall",
																"src": "5217:30:21"
															},
															"nativeSrc": "5217:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "5217:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5267:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5267:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5278:2:21",
																				"nodeType": "YulLiteral",
																				"src": "5278:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5263:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5263:3:21"
																		},
																		"nativeSrc": "5263:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5263:18:21"
																	},
																	{
																		"hexValue": "6974656d20646f65736e2774206578697374",
																		"kind": "string",
																		"nativeSrc": "5283:20:21",
																		"nodeType": "YulLiteral",
																		"src": "5283:20:21",
																		"type": "",
																		"value": "item doesn't exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5256:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5256:6:21"
																},
																"nativeSrc": "5256:48:21",
																"nodeType": "YulFunctionCall",
																"src": "5256:48:21"
															},
															"nativeSrc": "5256:48:21",
															"nodeType": "YulExpressionStatement",
															"src": "5256:48:21"
														},
														{
															"nativeSrc": "5313:26:21",
															"nodeType": "YulAssignment",
															"src": "5313:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:21"
																},
																"nativeSrc": "5321:18:21",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5003:342:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5154:9:21",
														"nodeType": "YulTypedName",
														"src": "5154:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5168:4:21",
														"nodeType": "YulTypedName",
														"src": "5168:4:21",
														"type": ""
													}
												],
												"src": "5003:342:21"
											},
											{
												"body": {
													"nativeSrc": "5524:170:21",
													"nodeType": "YulBlock",
													"src": "5524:170:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5541:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5534:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:21"
																},
																"nativeSrc": "5534:21:21",
																"nodeType": "YulFunctionCall",
																"src": "5534:21:21"
															},
															"nativeSrc": "5534:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5575:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5586:2:21",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5571:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:21"
																		},
																		"nativeSrc": "5571:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5591:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:21"
																},
																"nativeSrc": "5564:30:21",
																"nodeType": "YulFunctionCall",
																"src": "5564:30:21"
															},
															"nativeSrc": "5564:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5614:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5625:2:21",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5610:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:21"
																		},
																		"nativeSrc": "5610:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:21"
																	},
																	{
																		"hexValue": "6974656d206973206e6f7420666f722073656c6c",
																		"kind": "string",
																		"nativeSrc": "5630:22:21",
																		"nodeType": "YulLiteral",
																		"src": "5630:22:21",
																		"type": "",
																		"value": "item is not for sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5603:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:21"
																},
																"nativeSrc": "5603:50:21",
																"nodeType": "YulFunctionCall",
																"src": "5603:50:21"
															},
															"nativeSrc": "5603:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "5603:50:21"
														},
														{
															"nativeSrc": "5662:26:21",
															"nodeType": "YulAssignment",
															"src": "5662:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5674:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "5674:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5685:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5670:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5670:3:21"
																},
																"nativeSrc": "5670:18:21",
																"nodeType": "YulFunctionCall",
																"src": "5670:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5662:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "5662:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5350:344:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5501:9:21",
														"nodeType": "YulTypedName",
														"src": "5501:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5515:4:21",
														"nodeType": "YulTypedName",
														"src": "5515:4:21",
														"type": ""
													}
												],
												"src": "5350:344:21"
											},
											{
												"body": {
													"nativeSrc": "5873:177:21",
													"nodeType": "YulBlock",
													"src": "5873:177:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5890:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "5890:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5901:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5883:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5883:6:21"
																},
																"nativeSrc": "5883:21:21",
																"nodeType": "YulFunctionCall",
																"src": "5883:21:21"
															},
															"nativeSrc": "5883:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "5883:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5924:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5924:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5935:2:21",
																				"nodeType": "YulLiteral",
																				"src": "5935:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5920:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5920:3:21"
																		},
																		"nativeSrc": "5920:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5920:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5940:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5940:2:21",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5913:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5913:6:21"
																},
																"nativeSrc": "5913:30:21",
																"nodeType": "YulFunctionCall",
																"src": "5913:30:21"
															},
															"nativeSrc": "5913:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "5913:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5963:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5974:2:21",
																				"nodeType": "YulLiteral",
																				"src": "5974:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5959:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:21"
																		},
																		"nativeSrc": "5959:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5959:18:21"
																	},
																	{
																		"hexValue": "596f752063616e6e6f742062757920796f7572206f776e206e6674",
																		"kind": "string",
																		"nativeSrc": "5979:29:21",
																		"nodeType": "YulLiteral",
																		"src": "5979:29:21",
																		"type": "",
																		"value": "You cannot buy your own nft"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5952:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5952:6:21"
																},
																"nativeSrc": "5952:57:21",
																"nodeType": "YulFunctionCall",
																"src": "5952:57:21"
															},
															"nativeSrc": "5952:57:21",
															"nodeType": "YulExpressionStatement",
															"src": "5952:57:21"
														},
														{
															"nativeSrc": "6018:26:21",
															"nodeType": "YulAssignment",
															"src": "6018:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6030:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6030:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6041:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6041:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6026:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:21"
																},
																"nativeSrc": "6026:18:21",
																"nodeType": "YulFunctionCall",
																"src": "6026:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6018:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "6018:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5699:351:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5850:9:21",
														"nodeType": "YulTypedName",
														"src": "5850:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5864:4:21",
														"nodeType": "YulTypedName",
														"src": "5864:4:21",
														"type": ""
													}
												],
												"src": "5699:351:21"
											},
											{
												"body": {
													"nativeSrc": "6133:199:21",
													"nodeType": "YulBlock",
													"src": "6133:199:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "6179:16:21",
																"nodeType": "YulBlock",
																"src": "6179:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6188:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6188:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6191:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6191:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6181:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6181:6:21"
																			},
																			"nativeSrc": "6181:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6181:12:21"
																		},
																		"nativeSrc": "6181:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6181:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6154:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6154:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6163:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6163:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6150:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6150:3:21"
																		},
																		"nativeSrc": "6150:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6150:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6175:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6146:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6146:3:21"
																},
																"nativeSrc": "6146:32:21",
																"nodeType": "YulFunctionCall",
																"src": "6146:32:21"
															},
															"nativeSrc": "6143:52:21",
															"nodeType": "YulIf",
															"src": "6143:52:21"
														},
														{
															"nativeSrc": "6204:29:21",
															"nodeType": "YulVariableDeclaration",
															"src": "6204:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6223:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6223:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6217:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "6217:5:21"
																},
																"nativeSrc": "6217:16:21",
																"nodeType": "YulFunctionCall",
																"src": "6217:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6208:5:21",
																	"nodeType": "YulTypedName",
																	"src": "6208:5:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6286:16:21",
																"nodeType": "YulBlock",
																"src": "6286:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6295:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6295:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6298:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6298:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6288:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6288:6:21"
																			},
																			"nativeSrc": "6288:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:12:21"
																		},
																		"nativeSrc": "6288:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6288:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6255:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "6255:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6276:5:21",
																								"nodeType": "YulIdentifier",
																								"src": "6276:5:21"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6269:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "6269:6:21"
																						},
																						"nativeSrc": "6269:13:21",
																						"nodeType": "YulFunctionCall",
																						"src": "6269:13:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6262:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "6262:6:21"
																				},
																				"nativeSrc": "6262:21:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6262:21:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6252:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "6252:2:21"
																		},
																		"nativeSrc": "6252:32:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:32:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6245:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6245:6:21"
																},
																"nativeSrc": "6245:40:21",
																"nodeType": "YulFunctionCall",
																"src": "6245:40:21"
															},
															"nativeSrc": "6242:60:21",
															"nodeType": "YulIf",
															"src": "6242:60:21"
														},
														{
															"nativeSrc": "6311:15:21",
															"nodeType": "YulAssignment",
															"src": "6311:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "6321:5:21",
																"nodeType": "YulIdentifier",
																"src": "6321:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6311:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6311:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6055:277:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6099:9:21",
														"nodeType": "YulTypedName",
														"src": "6099:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6110:7:21",
														"nodeType": "YulTypedName",
														"src": "6110:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6122:6:21",
														"nodeType": "YulTypedName",
														"src": "6122:6:21",
														"type": ""
													}
												],
												"src": "6055:277:21"
											},
											{
												"body": {
													"nativeSrc": "6494:211:21",
													"nodeType": "YulBlock",
													"src": "6494:211:21",
													"statements": [
														{
															"nativeSrc": "6504:26:21",
															"nodeType": "YulAssignment",
															"src": "6504:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6516:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6516:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6512:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6512:3:21"
																},
																"nativeSrc": "6512:18:21",
																"nodeType": "YulFunctionCall",
																"src": "6512:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6504:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "6504:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6546:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6546:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6561:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6561:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6569:42:21",
																				"nodeType": "YulLiteral",
																				"src": "6569:42:21",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6557:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:21"
																		},
																		"nativeSrc": "6557:55:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6557:55:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6539:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6539:6:21"
																},
																"nativeSrc": "6539:74:21",
																"nodeType": "YulFunctionCall",
																"src": "6539:74:21"
															},
															"nativeSrc": "6539:74:21",
															"nodeType": "YulExpressionStatement",
															"src": "6539:74:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6633:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6633:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6644:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6644:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6629:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:21"
																		},
																		"nativeSrc": "6629:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:18:21"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6649:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6649:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6622:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6622:6:21"
																},
																"nativeSrc": "6622:34:21",
																"nodeType": "YulFunctionCall",
																"src": "6622:34:21"
															},
															"nativeSrc": "6622:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "6622:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6676:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6676:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6687:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6687:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6672:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6672:3:21"
																		},
																		"nativeSrc": "6672:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:18:21"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6692:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6692:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6665:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6665:6:21"
																},
																"nativeSrc": "6665:34:21",
																"nodeType": "YulFunctionCall",
																"src": "6665:34:21"
															},
															"nativeSrc": "6665:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "6665:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6337:368:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6447:9:21",
														"nodeType": "YulTypedName",
														"src": "6447:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6458:6:21",
														"nodeType": "YulTypedName",
														"src": "6458:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6466:6:21",
														"nodeType": "YulTypedName",
														"src": "6466:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6474:6:21",
														"nodeType": "YulTypedName",
														"src": "6474:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6485:4:21",
														"nodeType": "YulTypedName",
														"src": "6485:4:21",
														"type": ""
													}
												],
												"src": "6337:368:21"
											},
											{
												"body": {
													"nativeSrc": "6884:171:21",
													"nodeType": "YulBlock",
													"src": "6884:171:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6901:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6901:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6912:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6912:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6894:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6894:6:21"
																},
																"nativeSrc": "6894:21:21",
																"nodeType": "YulFunctionCall",
																"src": "6894:21:21"
															},
															"nativeSrc": "6894:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "6894:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6935:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6935:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6946:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6946:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6931:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6931:3:21"
																		},
																		"nativeSrc": "6931:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6931:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6951:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6951:2:21",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6924:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6924:6:21"
																},
																"nativeSrc": "6924:30:21",
																"nodeType": "YulFunctionCall",
																"src": "6924:30:21"
															},
															"nativeSrc": "6924:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "6924:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6974:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6974:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6985:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6985:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6970:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6970:3:21"
																		},
																		"nativeSrc": "6970:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6970:18:21"
																	},
																	{
																		"hexValue": "416d6f756e742063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "6990:23:21",
																		"nodeType": "YulLiteral",
																		"src": "6990:23:21",
																		"type": "",
																		"value": "Amount cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6963:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6963:6:21"
																},
																"nativeSrc": "6963:51:21",
																"nodeType": "YulFunctionCall",
																"src": "6963:51:21"
															},
															"nativeSrc": "6963:51:21",
															"nodeType": "YulExpressionStatement",
															"src": "6963:51:21"
														},
														{
															"nativeSrc": "7023:26:21",
															"nodeType": "YulAssignment",
															"src": "7023:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7035:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7035:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7046:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7031:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7031:3:21"
																},
																"nativeSrc": "7031:18:21",
																"nodeType": "YulFunctionCall",
																"src": "7031:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7023:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7023:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6710:345:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6861:9:21",
														"nodeType": "YulTypedName",
														"src": "6861:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6875:4:21",
														"nodeType": "YulTypedName",
														"src": "6875:4:21",
														"type": ""
													}
												],
												"src": "6710:345:21"
											},
											{
												"body": {
													"nativeSrc": "7234:226:21",
													"nodeType": "YulBlock",
													"src": "7234:226:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7251:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7251:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7262:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7244:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7244:6:21"
																},
																"nativeSrc": "7244:21:21",
																"nodeType": "YulFunctionCall",
																"src": "7244:21:21"
															},
															"nativeSrc": "7244:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "7244:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7285:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7285:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7296:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7296:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7281:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7281:3:21"
																		},
																		"nativeSrc": "7281:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7281:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7301:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7301:2:21",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7274:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:21"
																},
																"nativeSrc": "7274:30:21",
																"nodeType": "YulFunctionCall",
																"src": "7274:30:21"
															},
															"nativeSrc": "7274:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "7274:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7324:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7324:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7335:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7335:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7320:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:21"
																		},
																		"nativeSrc": "7320:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7320:18:21"
																	},
																	{
																		"hexValue": "455243323020616464726573732063616e6e6f74206265207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "7340:34:21",
																		"nodeType": "YulLiteral",
																		"src": "7340:34:21",
																		"type": "",
																		"value": "ERC20 address cannot be zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7313:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7313:6:21"
																},
																"nativeSrc": "7313:62:21",
																"nodeType": "YulFunctionCall",
																"src": "7313:62:21"
															},
															"nativeSrc": "7313:62:21",
															"nodeType": "YulExpressionStatement",
															"src": "7313:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7395:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7406:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7406:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7391:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7391:3:21"
																		},
																		"nativeSrc": "7391:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7391:18:21"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "7411:6:21",
																		"nodeType": "YulLiteral",
																		"src": "7411:6:21",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7384:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7384:6:21"
																},
																"nativeSrc": "7384:34:21",
																"nodeType": "YulFunctionCall",
																"src": "7384:34:21"
															},
															"nativeSrc": "7384:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "7384:34:21"
														},
														{
															"nativeSrc": "7427:27:21",
															"nodeType": "YulAssignment",
															"src": "7427:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7439:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7439:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7450:3:21",
																		"nodeType": "YulLiteral",
																		"src": "7450:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7435:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:21"
																},
																"nativeSrc": "7435:19:21",
																"nodeType": "YulFunctionCall",
																"src": "7435:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7427:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7427:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a23279b622caed07dd1bb467a739f2ca284330500cb944389f4b28a24305693__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7060:400:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7211:9:21",
														"nodeType": "YulTypedName",
														"src": "7211:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7225:4:21",
														"nodeType": "YulTypedName",
														"src": "7225:4:21",
														"type": ""
													}
												],
												"src": "7060:400:21"
											},
											{
												"body": {
													"nativeSrc": "7546:103:21",
													"nodeType": "YulBlock",
													"src": "7546:103:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "7592:16:21",
																"nodeType": "YulBlock",
																"src": "7592:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7601:1:21",
																					"nodeType": "YulLiteral",
																					"src": "7601:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7604:1:21",
																					"nodeType": "YulLiteral",
																					"src": "7604:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7594:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "7594:6:21"
																			},
																			"nativeSrc": "7594:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "7594:12:21"
																		},
																		"nativeSrc": "7594:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "7594:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7567:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "7567:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7576:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7576:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7563:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7563:3:21"
																		},
																		"nativeSrc": "7563:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7563:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7588:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7588:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7559:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7559:3:21"
																},
																"nativeSrc": "7559:32:21",
																"nodeType": "YulFunctionCall",
																"src": "7559:32:21"
															},
															"nativeSrc": "7556:52:21",
															"nodeType": "YulIf",
															"src": "7556:52:21"
														},
														{
															"nativeSrc": "7617:26:21",
															"nodeType": "YulAssignment",
															"src": "7617:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7633:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7633:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7627:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "7627:5:21"
																},
																"nativeSrc": "7627:16:21",
																"nodeType": "YulFunctionCall",
																"src": "7627:16:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7617:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7617:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7465:184:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7512:9:21",
														"nodeType": "YulTypedName",
														"src": "7512:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7523:7:21",
														"nodeType": "YulTypedName",
														"src": "7523:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7535:6:21",
														"nodeType": "YulTypedName",
														"src": "7535:6:21",
														"type": ""
													}
												],
												"src": "7465:184:21"
											},
											{
												"body": {
													"nativeSrc": "7828:169:21",
													"nodeType": "YulBlock",
													"src": "7828:169:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7845:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7845:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7856:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7838:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7838:6:21"
																},
																"nativeSrc": "7838:21:21",
																"nodeType": "YulFunctionCall",
																"src": "7838:21:21"
															},
															"nativeSrc": "7838:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "7838:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7879:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7879:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7890:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7890:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7875:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7875:3:21"
																		},
																		"nativeSrc": "7875:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7875:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7895:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7895:2:21",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7868:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:21"
																},
																"nativeSrc": "7868:30:21",
																"nodeType": "YulFunctionCall",
																"src": "7868:30:21"
															},
															"nativeSrc": "7868:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "7868:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7918:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7918:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7929:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7929:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7914:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7914:3:21"
																		},
																		"nativeSrc": "7914:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7914:18:21"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e64732e",
																		"kind": "string",
																		"nativeSrc": "7934:21:21",
																		"nodeType": "YulLiteral",
																		"src": "7934:21:21",
																		"type": "",
																		"value": "Insufficient funds."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7907:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:21"
																},
																"nativeSrc": "7907:49:21",
																"nodeType": "YulFunctionCall",
																"src": "7907:49:21"
															},
															"nativeSrc": "7907:49:21",
															"nodeType": "YulExpressionStatement",
															"src": "7907:49:21"
														},
														{
															"nativeSrc": "7965:26:21",
															"nodeType": "YulAssignment",
															"src": "7965:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7977:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7977:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7988:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7988:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7973:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:21"
																},
																"nativeSrc": "7973:18:21",
																"nodeType": "YulFunctionCall",
																"src": "7973:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7965:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7965:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7654:343:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7805:9:21",
														"nodeType": "YulTypedName",
														"src": "7805:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7819:4:21",
														"nodeType": "YulTypedName",
														"src": "7819:4:21",
														"type": ""
													}
												],
												"src": "7654:343:21"
											},
											{
												"body": {
													"nativeSrc": "8034:152:21",
													"nodeType": "YulBlock",
													"src": "8034:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8051:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8051:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8054:77:21",
																		"nodeType": "YulLiteral",
																		"src": "8054:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8044:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:21"
																},
																"nativeSrc": "8044:88:21",
																"nodeType": "YulFunctionCall",
																"src": "8044:88:21"
															},
															"nativeSrc": "8044:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "8044:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8148:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8148:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8151:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8151:4:21",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8141:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8141:6:21"
																},
																"nativeSrc": "8141:15:21",
																"nodeType": "YulFunctionCall",
																"src": "8141:15:21"
															},
															"nativeSrc": "8141:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "8141:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8172:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8172:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8175:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8175:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8165:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8165:6:21"
																},
																"nativeSrc": "8165:15:21",
																"nodeType": "YulFunctionCall",
																"src": "8165:15:21"
															},
															"nativeSrc": "8165:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "8165:15:21"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8002:184:21",
												"nodeType": "YulFunctionDefinition",
												"src": "8002:184:21"
											},
											{
												"body": {
													"nativeSrc": "8238:148:21",
													"nodeType": "YulBlock",
													"src": "8238:148:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "8329:22:21",
																"nodeType": "YulBlock",
																"src": "8329:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8331:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "8331:16:21"
																			},
																			"nativeSrc": "8331:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "8331:18:21"
																		},
																		"nativeSrc": "8331:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "8331:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8254:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "8254:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8261:66:21",
																		"nodeType": "YulLiteral",
																		"src": "8261:66:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8251:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "8251:2:21"
																},
																"nativeSrc": "8251:77:21",
																"nodeType": "YulFunctionCall",
																"src": "8251:77:21"
															},
															"nativeSrc": "8248:103:21",
															"nodeType": "YulIf",
															"src": "8248:103:21"
														},
														{
															"nativeSrc": "8360:20:21",
															"nodeType": "YulAssignment",
															"src": "8360:20:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8371:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "8371:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8378:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8378:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8367:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8367:3:21"
																},
																"nativeSrc": "8367:13:21",
																"nodeType": "YulFunctionCall",
																"src": "8367:13:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8360:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8360:3:21"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "8191:195:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8220:5:21",
														"nodeType": "YulTypedName",
														"src": "8220:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8230:3:21",
														"nodeType": "YulTypedName",
														"src": "8230:3:21",
														"type": ""
													}
												],
												"src": "8191:195:21"
											},
											{
												"body": {
													"nativeSrc": "8565:227:21",
													"nodeType": "YulBlock",
													"src": "8565:227:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8582:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8582:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8593:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8593:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8575:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8575:6:21"
																},
																"nativeSrc": "8575:21:21",
																"nodeType": "YulFunctionCall",
																"src": "8575:21:21"
															},
															"nativeSrc": "8575:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "8575:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8616:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "8616:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8627:2:21",
																				"nodeType": "YulLiteral",
																				"src": "8627:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8612:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:21"
																		},
																		"nativeSrc": "8612:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8632:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8632:2:21",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8605:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8605:6:21"
																},
																"nativeSrc": "8605:30:21",
																"nodeType": "YulFunctionCall",
																"src": "8605:30:21"
															},
															"nativeSrc": "8605:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "8605:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8655:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "8655:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8666:2:21",
																				"nodeType": "YulLiteral",
																				"src": "8666:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8651:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8651:3:21"
																		},
																		"nativeSrc": "8651:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8651:18:21"
																	},
																	{
																		"hexValue": "6974656d206973206e6f74207468652073616d6520636f6e7472616374206164",
																		"kind": "string",
																		"nativeSrc": "8671:34:21",
																		"nodeType": "YulLiteral",
																		"src": "8671:34:21",
																		"type": "",
																		"value": "item is not the same contract ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8644:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8644:6:21"
																},
																"nativeSrc": "8644:62:21",
																"nodeType": "YulFunctionCall",
																"src": "8644:62:21"
															},
															"nativeSrc": "8644:62:21",
															"nodeType": "YulExpressionStatement",
															"src": "8644:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8726:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "8726:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8737:2:21",
																				"nodeType": "YulLiteral",
																				"src": "8737:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8722:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8722:3:21"
																		},
																		"nativeSrc": "8722:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8722:18:21"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "8742:7:21",
																		"nodeType": "YulLiteral",
																		"src": "8742:7:21",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8715:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8715:6:21"
																},
																"nativeSrc": "8715:35:21",
																"nodeType": "YulFunctionCall",
																"src": "8715:35:21"
															},
															"nativeSrc": "8715:35:21",
															"nodeType": "YulExpressionStatement",
															"src": "8715:35:21"
														},
														{
															"nativeSrc": "8759:27:21",
															"nodeType": "YulAssignment",
															"src": "8759:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8771:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8771:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8782:3:21",
																		"nodeType": "YulLiteral",
																		"src": "8782:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8767:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8767:3:21"
																},
																"nativeSrc": "8767:19:21",
																"nodeType": "YulFunctionCall",
																"src": "8767:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8759:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "8759:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f661ee60be2fa877a71593716195b5df43b1e45b4642968f0a03f55a279dc0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8391:401:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8542:9:21",
														"nodeType": "YulTypedName",
														"src": "8542:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8556:4:21",
														"nodeType": "YulTypedName",
														"src": "8556:4:21",
														"type": ""
													}
												],
												"src": "8391:401:21"
											},
											{
												"body": {
													"nativeSrc": "8971:167:21",
													"nodeType": "YulBlock",
													"src": "8971:167:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8988:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8988:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8999:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8999:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8981:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8981:6:21"
																},
																"nativeSrc": "8981:21:21",
																"nodeType": "YulFunctionCall",
																"src": "8981:21:21"
															},
															"nativeSrc": "8981:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "8981:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9022:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9022:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9033:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9033:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9018:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9018:3:21"
																		},
																		"nativeSrc": "9018:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9018:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9038:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:21",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9011:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9011:6:21"
																},
																"nativeSrc": "9011:30:21",
																"nodeType": "YulFunctionCall",
																"src": "9011:30:21"
															},
															"nativeSrc": "9011:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "9011:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9061:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9072:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9057:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:21"
																		},
																		"nativeSrc": "9057:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:21"
																	},
																	{
																		"hexValue": "6973206e6f74207468652073656c6c6572",
																		"kind": "string",
																		"nativeSrc": "9077:19:21",
																		"nodeType": "YulLiteral",
																		"src": "9077:19:21",
																		"type": "",
																		"value": "is not the seller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9050:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:21"
																},
																"nativeSrc": "9050:47:21",
																"nodeType": "YulFunctionCall",
																"src": "9050:47:21"
															},
															"nativeSrc": "9050:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "9050:47:21"
														},
														{
															"nativeSrc": "9106:26:21",
															"nodeType": "YulAssignment",
															"src": "9106:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9118:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9118:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9129:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9129:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9114:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9114:3:21"
																},
																"nativeSrc": "9114:18:21",
																"nodeType": "YulFunctionCall",
																"src": "9114:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9106:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9106:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c28bacdabf75d90e0006b1780430df6a1d2cb3fed04d6313bd12cd36d634787c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8797:341:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8948:9:21",
														"nodeType": "YulTypedName",
														"src": "8948:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8962:4:21",
														"nodeType": "YulTypedName",
														"src": "8962:4:21",
														"type": ""
													}
												],
												"src": "8797:341:21"
											},
											{
												"body": {
													"nativeSrc": "9317:165:21",
													"nodeType": "YulBlock",
													"src": "9317:165:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9334:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9334:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9345:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9345:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9327:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9327:6:21"
																},
																"nativeSrc": "9327:21:21",
																"nodeType": "YulFunctionCall",
																"src": "9327:21:21"
															},
															"nativeSrc": "9327:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "9327:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9368:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9368:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9379:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9379:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9364:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9364:3:21"
																		},
																		"nativeSrc": "9364:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9364:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9384:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9384:2:21",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9357:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9357:6:21"
																},
																"nativeSrc": "9357:30:21",
																"nodeType": "YulFunctionCall",
																"src": "9357:30:21"
															},
															"nativeSrc": "9357:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "9357:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9407:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9407:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9418:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9418:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9403:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9403:3:21"
																		},
																		"nativeSrc": "9403:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9403:18:21"
																	},
																	{
																		"hexValue": "6973206e6f74206c697374656e6564",
																		"kind": "string",
																		"nativeSrc": "9423:17:21",
																		"nodeType": "YulLiteral",
																		"src": "9423:17:21",
																		"type": "",
																		"value": "is not listened"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9396:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9396:6:21"
																},
																"nativeSrc": "9396:45:21",
																"nodeType": "YulFunctionCall",
																"src": "9396:45:21"
															},
															"nativeSrc": "9396:45:21",
															"nodeType": "YulExpressionStatement",
															"src": "9396:45:21"
														},
														{
															"nativeSrc": "9450:26:21",
															"nodeType": "YulAssignment",
															"src": "9450:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9462:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9462:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9473:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9473:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9458:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9458:3:21"
																},
																"nativeSrc": "9458:18:21",
																"nodeType": "YulFunctionCall",
																"src": "9458:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9450:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9450:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6735dbf95389d47f014480904848604325f9aa811cb2b07128151f0b6707d7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9143:339:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9294:9:21",
														"nodeType": "YulTypedName",
														"src": "9294:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9308:4:21",
														"nodeType": "YulTypedName",
														"src": "9308:4:21",
														"type": ""
													}
												],
												"src": "9143:339:21"
											},
											{
												"body": {
													"nativeSrc": "9644:241:21",
													"nodeType": "YulBlock",
													"src": "9644:241:21",
													"statements": [
														{
															"nativeSrc": "9654:26:21",
															"nodeType": "YulAssignment",
															"src": "9654:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9666:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9666:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9677:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9677:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9662:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9662:3:21"
																},
																"nativeSrc": "9662:18:21",
																"nodeType": "YulFunctionCall",
																"src": "9662:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9654:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9654:4:21"
																}
															]
														},
														{
															"nativeSrc": "9689:52:21",
															"nodeType": "YulVariableDeclaration",
															"src": "9689:52:21",
															"value": {
																"kind": "number",
																"nativeSrc": "9699:42:21",
																"nodeType": "YulLiteral",
																"src": "9699:42:21",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9693:2:21",
																	"nodeType": "YulTypedName",
																	"src": "9693:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9757:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "9757:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9772:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "9772:6:21"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9780:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "9780:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9768:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9768:3:21"
																		},
																		"nativeSrc": "9768:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9750:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9750:6:21"
																},
																"nativeSrc": "9750:34:21",
																"nodeType": "YulFunctionCall",
																"src": "9750:34:21"
															},
															"nativeSrc": "9750:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "9750:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9804:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9804:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9815:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9815:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9800:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:21"
																		},
																		"nativeSrc": "9800:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9800:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9824:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "9824:6:21"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9832:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "9832:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9820:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9820:3:21"
																		},
																		"nativeSrc": "9820:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9820:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9793:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:21"
																},
																"nativeSrc": "9793:43:21",
																"nodeType": "YulFunctionCall",
																"src": "9793:43:21"
															},
															"nativeSrc": "9793:43:21",
															"nodeType": "YulExpressionStatement",
															"src": "9793:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9856:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "9856:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9867:2:21",
																				"nodeType": "YulLiteral",
																				"src": "9867:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9852:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9852:3:21"
																		},
																		"nativeSrc": "9852:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9852:18:21"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9872:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9872:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9845:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9845:6:21"
																},
																"nativeSrc": "9845:34:21",
																"nodeType": "YulFunctionCall",
																"src": "9845:34:21"
															},
															"nativeSrc": "9845:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "9845:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9487:398:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9597:9:21",
														"nodeType": "YulTypedName",
														"src": "9597:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9608:6:21",
														"nodeType": "YulTypedName",
														"src": "9608:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9616:6:21",
														"nodeType": "YulTypedName",
														"src": "9616:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9624:6:21",
														"nodeType": "YulTypedName",
														"src": "9624:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9635:4:21",
														"nodeType": "YulTypedName",
														"src": "9635:4:21",
														"type": ""
													}
												],
												"src": "9487:398:21"
											},
											{
												"body": {
													"nativeSrc": "10064:229:21",
													"nodeType": "YulBlock",
													"src": "10064:229:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10081:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10081:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10092:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10092:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10074:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10074:6:21"
																},
																"nativeSrc": "10074:21:21",
																"nodeType": "YulFunctionCall",
																"src": "10074:21:21"
															},
															"nativeSrc": "10074:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "10074:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10115:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10115:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10126:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10126:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10111:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10111:3:21"
																		},
																		"nativeSrc": "10111:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10111:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10131:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10131:2:21",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10104:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10104:6:21"
																},
																"nativeSrc": "10104:30:21",
																"nodeType": "YulFunctionCall",
																"src": "10104:30:21"
															},
															"nativeSrc": "10104:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "10104:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10154:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10154:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10165:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10165:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10150:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10150:3:21"
																		},
																		"nativeSrc": "10150:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10150:18:21"
																	},
																	{
																		"hexValue": "6e6f7420656e6f7567682062616c616e636520666f722074686973207472616e",
																		"kind": "string",
																		"nativeSrc": "10170:34:21",
																		"nodeType": "YulLiteral",
																		"src": "10170:34:21",
																		"type": "",
																		"value": "not enough balance for this tran"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10143:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10143:6:21"
																},
																"nativeSrc": "10143:62:21",
																"nodeType": "YulFunctionCall",
																"src": "10143:62:21"
															},
															"nativeSrc": "10143:62:21",
															"nodeType": "YulExpressionStatement",
															"src": "10143:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10225:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10225:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10236:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10236:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10221:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10221:3:21"
																		},
																		"nativeSrc": "10221:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10221:18:21"
																	},
																	{
																		"hexValue": "73616374696f6e",
																		"kind": "string",
																		"nativeSrc": "10241:9:21",
																		"nodeType": "YulLiteral",
																		"src": "10241:9:21",
																		"type": "",
																		"value": "saction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10214:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10214:6:21"
																},
																"nativeSrc": "10214:37:21",
																"nodeType": "YulFunctionCall",
																"src": "10214:37:21"
															},
															"nativeSrc": "10214:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "10214:37:21"
														},
														{
															"nativeSrc": "10260:27:21",
															"nodeType": "YulAssignment",
															"src": "10260:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10272:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10272:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10283:3:21",
																		"nodeType": "YulLiteral",
																		"src": "10283:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10268:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10268:3:21"
																},
																"nativeSrc": "10268:19:21",
																"nodeType": "YulFunctionCall",
																"src": "10268:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10260:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10260:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b930ef51d284c351242ccbfbfde4879a3afde537d75aab61455bfbc07a7188d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9890:403:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10041:9:21",
														"nodeType": "YulTypedName",
														"src": "10041:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10055:4:21",
														"nodeType": "YulTypedName",
														"src": "10055:4:21",
														"type": ""
													}
												],
												"src": "9890:403:21"
											},
											{
												"body": {
													"nativeSrc": "10379:170:21",
													"nodeType": "YulBlock",
													"src": "10379:170:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "10425:16:21",
																"nodeType": "YulBlock",
																"src": "10425:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10434:1:21",
																					"nodeType": "YulLiteral",
																					"src": "10434:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10437:1:21",
																					"nodeType": "YulLiteral",
																					"src": "10437:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10427:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "10427:6:21"
																			},
																			"nativeSrc": "10427:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "10427:12:21"
																		},
																		"nativeSrc": "10427:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "10427:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10400:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "10400:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10409:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10409:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10396:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10396:3:21"
																		},
																		"nativeSrc": "10396:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10396:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10421:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10421:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10392:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10392:3:21"
																},
																"nativeSrc": "10392:32:21",
																"nodeType": "YulFunctionCall",
																"src": "10392:32:21"
															},
															"nativeSrc": "10389:52:21",
															"nodeType": "YulIf",
															"src": "10389:52:21"
														},
														{
															"nativeSrc": "10450:29:21",
															"nodeType": "YulVariableDeclaration",
															"src": "10450:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10469:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10469:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10463:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "10463:5:21"
																},
																"nativeSrc": "10463:16:21",
																"nodeType": "YulFunctionCall",
																"src": "10463:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10454:5:21",
																	"nodeType": "YulTypedName",
																	"src": "10454:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10513:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "10513:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "10488:24:21",
																	"nodeType": "YulIdentifier",
																	"src": "10488:24:21"
																},
																"nativeSrc": "10488:31:21",
																"nodeType": "YulFunctionCall",
																"src": "10488:31:21"
															},
															"nativeSrc": "10488:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "10488:31:21"
														},
														{
															"nativeSrc": "10528:15:21",
															"nodeType": "YulAssignment",
															"src": "10528:15:21",
															"value": {
																"name": "value",
																"nativeSrc": "10538:5:21",
																"nodeType": "YulIdentifier",
																"src": "10538:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10528:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10528:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "10298:251:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10345:9:21",
														"nodeType": "YulTypedName",
														"src": "10345:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10356:7:21",
														"nodeType": "YulTypedName",
														"src": "10356:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10368:6:21",
														"nodeType": "YulTypedName",
														"src": "10368:6:21",
														"type": ""
													}
												],
												"src": "10298:251:21"
											},
											{
												"body": {
													"nativeSrc": "10728:171:21",
													"nodeType": "YulBlock",
													"src": "10728:171:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10745:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10745:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10756:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10756:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10738:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10738:6:21"
																},
																"nativeSrc": "10738:21:21",
																"nodeType": "YulFunctionCall",
																"src": "10738:21:21"
															},
															"nativeSrc": "10738:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "10738:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10779:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10779:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10790:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10790:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10775:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:21"
																		},
																		"nativeSrc": "10775:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10775:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10795:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10795:2:21",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10768:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10768:6:21"
																},
																"nativeSrc": "10768:30:21",
																"nodeType": "YulFunctionCall",
																"src": "10768:30:21"
															},
															"nativeSrc": "10768:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "10768:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10818:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10818:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10829:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10829:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10814:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:21"
																		},
																		"nativeSrc": "10814:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10814:18:21"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "10834:23:21",
																		"nodeType": "YulLiteral",
																		"src": "10834:23:21",
																		"type": "",
																		"value": "You are not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10807:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10807:6:21"
																},
																"nativeSrc": "10807:51:21",
																"nodeType": "YulFunctionCall",
																"src": "10807:51:21"
															},
															"nativeSrc": "10807:51:21",
															"nodeType": "YulExpressionStatement",
															"src": "10807:51:21"
														},
														{
															"nativeSrc": "10867:26:21",
															"nodeType": "YulAssignment",
															"src": "10867:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10879:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10879:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10890:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10890:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10875:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10875:3:21"
																},
																"nativeSrc": "10875:18:21",
																"nodeType": "YulFunctionCall",
																"src": "10875:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10867:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10867:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10554:345:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10705:9:21",
														"nodeType": "YulTypedName",
														"src": "10705:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10719:4:21",
														"nodeType": "YulTypedName",
														"src": "10719:4:21",
														"type": ""
													}
												],
												"src": "10554:345:21"
											},
											{
												"body": {
													"nativeSrc": "11078:229:21",
													"nodeType": "YulBlock",
													"src": "11078:229:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11095:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11095:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11106:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11106:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11088:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11088:6:21"
																},
																"nativeSrc": "11088:21:21",
																"nodeType": "YulFunctionCall",
																"src": "11088:21:21"
															},
															"nativeSrc": "11088:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "11088:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11129:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11129:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11140:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11140:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11125:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11125:3:21"
																		},
																		"nativeSrc": "11125:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11125:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11145:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11145:2:21",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11118:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11118:6:21"
																},
																"nativeSrc": "11118:30:21",
																"nodeType": "YulFunctionCall",
																"src": "11118:30:21"
															},
															"nativeSrc": "11118:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "11118:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11168:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11168:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11179:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11179:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11164:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:21"
																		},
																		"nativeSrc": "11164:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11164:18:21"
																	},
																	{
																		"hexValue": "4e46544d61726b65743a207072696365206d7573742062652067726561746572",
																		"kind": "string",
																		"nativeSrc": "11184:34:21",
																		"nodeType": "YulLiteral",
																		"src": "11184:34:21",
																		"type": "",
																		"value": "NFTMarket: price must be greater"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11157:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:21"
																},
																"nativeSrc": "11157:62:21",
																"nodeType": "YulFunctionCall",
																"src": "11157:62:21"
															},
															"nativeSrc": "11157:62:21",
															"nodeType": "YulExpressionStatement",
															"src": "11157:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11239:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11239:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11250:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11250:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11235:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11235:3:21"
																		},
																		"nativeSrc": "11235:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11235:18:21"
																	},
																	{
																		"hexValue": "207468616e2030",
																		"kind": "string",
																		"nativeSrc": "11255:9:21",
																		"nodeType": "YulLiteral",
																		"src": "11255:9:21",
																		"type": "",
																		"value": " than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11228:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11228:6:21"
																},
																"nativeSrc": "11228:37:21",
																"nodeType": "YulFunctionCall",
																"src": "11228:37:21"
															},
															"nativeSrc": "11228:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "11228:37:21"
														},
														{
															"nativeSrc": "11274:27:21",
															"nodeType": "YulAssignment",
															"src": "11274:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11286:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11286:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11297:3:21",
																		"nodeType": "YulLiteral",
																		"src": "11297:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11282:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11282:3:21"
																},
																"nativeSrc": "11282:19:21",
																"nodeType": "YulFunctionCall",
																"src": "11282:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11274:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "11274:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15c9433dc1aea6b0d2ffba7c5d53bda6fe19decfc18282b615817a04fc48463b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10904:403:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11055:9:21",
														"nodeType": "YulTypedName",
														"src": "11055:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11069:4:21",
														"nodeType": "YulTypedName",
														"src": "11069:4:21",
														"type": ""
													}
												],
												"src": "10904:403:21"
											},
											{
												"body": {
													"nativeSrc": "11486:166:21",
													"nodeType": "YulBlock",
													"src": "11486:166:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11503:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11503:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11514:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11514:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11496:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11496:6:21"
																},
																"nativeSrc": "11496:21:21",
																"nodeType": "YulFunctionCall",
																"src": "11496:21:21"
															},
															"nativeSrc": "11496:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "11496:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11537:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11537:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11548:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11548:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11533:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11533:3:21"
																		},
																		"nativeSrc": "11533:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11533:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11553:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11553:2:21",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11526:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11526:6:21"
																},
																"nativeSrc": "11526:30:21",
																"nodeType": "YulFunctionCall",
																"src": "11526:30:21"
															},
															"nativeSrc": "11526:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "11526:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11576:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11576:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11587:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11587:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11572:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11572:3:21"
																		},
																		"nativeSrc": "11572:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11572:18:21"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "11592:18:21",
																		"nodeType": "YulLiteral",
																		"src": "11592:18:21",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11565:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11565:6:21"
																},
																"nativeSrc": "11565:46:21",
																"nodeType": "YulFunctionCall",
																"src": "11565:46:21"
															},
															"nativeSrc": "11565:46:21",
															"nodeType": "YulExpressionStatement",
															"src": "11565:46:21"
														},
														{
															"nativeSrc": "11620:26:21",
															"nodeType": "YulAssignment",
															"src": "11620:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11632:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11632:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11643:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11643:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11628:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11628:3:21"
																},
																"nativeSrc": "11628:18:21",
																"nodeType": "YulFunctionCall",
																"src": "11628:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11620:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "11620:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11312:340:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11463:9:21",
														"nodeType": "YulTypedName",
														"src": "11463:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11477:4:21",
														"nodeType": "YulTypedName",
														"src": "11477:4:21",
														"type": ""
													}
												],
												"src": "11312:340:21"
											},
											{
												"body": {
													"nativeSrc": "11831:181:21",
													"nodeType": "YulBlock",
													"src": "11831:181:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11848:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11848:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11859:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11859:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11841:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11841:6:21"
																},
																"nativeSrc": "11841:21:21",
																"nodeType": "YulFunctionCall",
																"src": "11841:21:21"
															},
															"nativeSrc": "11841:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "11841:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11882:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11882:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11893:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11893:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11878:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11878:3:21"
																		},
																		"nativeSrc": "11878:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11878:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11898:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11898:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11871:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11871:6:21"
																},
																"nativeSrc": "11871:30:21",
																"nodeType": "YulFunctionCall",
																"src": "11871:30:21"
															},
															"nativeSrc": "11871:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "11871:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11921:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11921:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11932:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11932:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11917:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:21"
																		},
																		"nativeSrc": "11917:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11917:18:21"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11937:33:21",
																		"nodeType": "YulLiteral",
																		"src": "11937:33:21",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11910:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:21"
																},
																"nativeSrc": "11910:61:21",
																"nodeType": "YulFunctionCall",
																"src": "11910:61:21"
															},
															"nativeSrc": "11910:61:21",
															"nodeType": "YulExpressionStatement",
															"src": "11910:61:21"
														},
														{
															"nativeSrc": "11980:26:21",
															"nodeType": "YulAssignment",
															"src": "11980:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11992:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11992:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12003:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12003:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11988:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11988:3:21"
																},
																"nativeSrc": "11988:18:21",
																"nodeType": "YulFunctionCall",
																"src": "11988:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11980:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "11980:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11657:355:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11808:9:21",
														"nodeType": "YulTypedName",
														"src": "11808:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11822:4:21",
														"nodeType": "YulTypedName",
														"src": "11822:4:21",
														"type": ""
													}
												],
												"src": "11657:355:21"
											},
											{
												"body": {
													"nativeSrc": "12069:116:21",
													"nodeType": "YulBlock",
													"src": "12069:116:21",
													"statements": [
														{
															"nativeSrc": "12079:20:21",
															"nodeType": "YulAssignment",
															"src": "12079:20:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12094:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "12094:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12097:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "12097:1:21"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12090:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12090:3:21"
																},
																"nativeSrc": "12090:9:21",
																"nodeType": "YulFunctionCall",
																"src": "12090:9:21"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12079:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "12079:7:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12157:22:21",
																"nodeType": "YulBlock",
																"src": "12157:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12159:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "12159:16:21"
																			},
																			"nativeSrc": "12159:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12159:18:21"
																		},
																		"nativeSrc": "12159:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12159:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12128:1:21",
																						"nodeType": "YulIdentifier",
																						"src": "12128:1:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12121:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "12121:6:21"
																				},
																				"nativeSrc": "12121:9:21",
																				"nodeType": "YulFunctionCall",
																				"src": "12121:9:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12135:1:21",
																						"nodeType": "YulIdentifier",
																						"src": "12135:1:21"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12142:7:21",
																								"nodeType": "YulIdentifier",
																								"src": "12142:7:21"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12151:1:21",
																								"nodeType": "YulIdentifier",
																								"src": "12151:1:21"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12138:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "12138:3:21"
																						},
																						"nativeSrc": "12138:15:21",
																						"nodeType": "YulFunctionCall",
																						"src": "12138:15:21"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12132:2:21",
																					"nodeType": "YulIdentifier",
																					"src": "12132:2:21"
																				},
																				"nativeSrc": "12132:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "12132:22:21"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12118:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "12118:2:21"
																		},
																		"nativeSrc": "12118:37:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12118:37:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12111:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12111:6:21"
																},
																"nativeSrc": "12111:45:21",
																"nodeType": "YulFunctionCall",
																"src": "12111:45:21"
															},
															"nativeSrc": "12108:71:21",
															"nodeType": "YulIf",
															"src": "12108:71:21"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12017:168:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12048:1:21",
														"nodeType": "YulTypedName",
														"src": "12048:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12051:1:21",
														"nodeType": "YulTypedName",
														"src": "12051:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12057:7:21",
														"nodeType": "YulTypedName",
														"src": "12057:7:21",
														"type": ""
													}
												],
												"src": "12017:168:21"
											},
											{
												"body": {
													"nativeSrc": "12236:228:21",
													"nodeType": "YulBlock",
													"src": "12236:228:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "12267:168:21",
																"nodeType": "YulBlock",
																"src": "12267:168:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12288:1:21",
																					"nodeType": "YulLiteral",
																					"src": "12288:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12291:77:21",
																					"nodeType": "YulLiteral",
																					"src": "12291:77:21",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12281:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "12281:6:21"
																			},
																			"nativeSrc": "12281:88:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12281:88:21"
																		},
																		"nativeSrc": "12281:88:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12281:88:21"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12389:1:21",
																					"nodeType": "YulLiteral",
																					"src": "12389:1:21",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12392:4:21",
																					"nodeType": "YulLiteral",
																					"src": "12392:4:21",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12382:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "12382:6:21"
																			},
																			"nativeSrc": "12382:15:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12382:15:21"
																		},
																		"nativeSrc": "12382:15:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12382:15:21"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12417:1:21",
																					"nodeType": "YulLiteral",
																					"src": "12417:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12420:4:21",
																					"nodeType": "YulLiteral",
																					"src": "12420:4:21",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12410:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "12410:6:21"
																			},
																			"nativeSrc": "12410:15:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12410:15:21"
																		},
																		"nativeSrc": "12410:15:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12410:15:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12256:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "12256:1:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12249:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12249:6:21"
																},
																"nativeSrc": "12249:9:21",
																"nodeType": "YulFunctionCall",
																"src": "12249:9:21"
															},
															"nativeSrc": "12246:189:21",
															"nodeType": "YulIf",
															"src": "12246:189:21"
														},
														{
															"nativeSrc": "12444:14:21",
															"nodeType": "YulAssignment",
															"src": "12444:14:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12453:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "12453:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12456:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "12456:1:21"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12449:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12449:3:21"
																},
																"nativeSrc": "12449:9:21",
																"nodeType": "YulFunctionCall",
																"src": "12449:9:21"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12444:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "12444:1:21"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12190:274:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12221:1:21",
														"nodeType": "YulTypedName",
														"src": "12221:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12224:1:21",
														"nodeType": "YulTypedName",
														"src": "12224:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12230:1:21",
														"nodeType": "YulTypedName",
														"src": "12230:1:21",
														"type": ""
													}
												],
												"src": "12190:274:21"
											},
											{
												"body": {
													"nativeSrc": "12518:79:21",
													"nodeType": "YulBlock",
													"src": "12518:79:21",
													"statements": [
														{
															"nativeSrc": "12528:17:21",
															"nodeType": "YulAssignment",
															"src": "12528:17:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12540:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "12540:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12543:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "12543:1:21"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12536:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12536:3:21"
																},
																"nativeSrc": "12536:9:21",
																"nodeType": "YulFunctionCall",
																"src": "12536:9:21"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12528:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12528:4:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12569:22:21",
																"nodeType": "YulBlock",
																"src": "12569:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12571:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "12571:16:21"
																			},
																			"nativeSrc": "12571:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12571:18:21"
																		},
																		"nativeSrc": "12571:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12571:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12560:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "12560:4:21"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12566:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "12566:1:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12557:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "12557:2:21"
																},
																"nativeSrc": "12557:11:21",
																"nodeType": "YulFunctionCall",
																"src": "12557:11:21"
															},
															"nativeSrc": "12554:37:21",
															"nodeType": "YulIf",
															"src": "12554:37:21"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12469:128:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12500:1:21",
														"nodeType": "YulTypedName",
														"src": "12500:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12503:1:21",
														"nodeType": "YulTypedName",
														"src": "12503:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12509:4:21",
														"nodeType": "YulTypedName",
														"src": "12509:4:21",
														"type": ""
													}
												],
												"src": "12469:128:21"
											},
											{
												"body": {
													"nativeSrc": "12776:170:21",
													"nodeType": "YulBlock",
													"src": "12776:170:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12793:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12793:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12804:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12804:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12786:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12786:6:21"
																},
																"nativeSrc": "12786:21:21",
																"nodeType": "YulFunctionCall",
																"src": "12786:21:21"
															},
															"nativeSrc": "12786:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "12786:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12827:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12827:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12838:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12838:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12823:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12823:3:21"
																		},
																		"nativeSrc": "12823:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12823:18:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12843:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12843:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12816:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12816:6:21"
																},
																"nativeSrc": "12816:30:21",
																"nodeType": "YulFunctionCall",
																"src": "12816:30:21"
															},
															"nativeSrc": "12816:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "12816:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12866:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12866:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12877:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12877:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12862:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12862:3:21"
																		},
																		"nativeSrc": "12862:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12862:18:21"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "12882:22:21",
																		"nodeType": "YulLiteral",
																		"src": "12882:22:21",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12855:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12855:6:21"
																},
																"nativeSrc": "12855:50:21",
																"nodeType": "YulFunctionCall",
																"src": "12855:50:21"
															},
															"nativeSrc": "12855:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "12855:50:21"
														},
														{
															"nativeSrc": "12914:26:21",
															"nodeType": "YulAssignment",
															"src": "12914:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12926:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12926:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12937:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12937:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12922:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12922:3:21"
																},
																"nativeSrc": "12922:18:21",
																"nodeType": "YulFunctionCall",
																"src": "12922:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12914:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12914:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12602:344:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12753:9:21",
														"nodeType": "YulTypedName",
														"src": "12753:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12767:4:21",
														"nodeType": "YulTypedName",
														"src": "12767:4:21",
														"type": ""
													}
												],
												"src": "12602:344:21"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_NFTListing_$4198_memory_ptr__to_t_struct$_NFTListing_$4198_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), _1))\n        mstore(add(headStart, 0xa0), iszero(iszero(mload(add(value0, 0xa0)))))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_contract$_ERC721_$1870t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_contract$_ERC721_$1870t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$535__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_contract$_ERC721_$1870t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_contract$_ERC721_$1870_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$1987__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"item doesn't exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"item is not for sell\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"You cannot buy your own nft\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Amount cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0a23279b622caed07dd1bb467a739f2ca284330500cb944389f4b28a24305693__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20 address cannot be zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient funds.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_3f661ee60be2fa877a71593716195b5df43b1e45b4642968f0a03f55a279dc0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"item is not the same contract ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c28bacdabf75d90e0006b1780430df6a1d2cb3fed04d6313bd12cd36d634787c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"is not the seller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e6735dbf95389d47f014480904848604325f9aa811cb2b07128151f0b6707d7c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"is not listened\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_4b930ef51d284c351242ccbfbfde4879a3afde537d75aab61455bfbc07a7188d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"not enough balance for this tran\")\n        mstore(add(headStart, 96), \"saction\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"You are not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_15c9433dc1aea6b0d2ffba7c5d53bda6fe19decfc18282b615817a04fc48463b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"NFTMarket: price must be greater\")\n        mstore(add(headStart, 96), \" than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610165575f3560e01c8063925a9953116100c6578063cc4aa2041161007c578063de74e57b11610057578063de74e57b14610502578063df706cbc146105cd578063f2fde38b146105f9575f80fd5b8063cc4aa204146104a4578063cf02976f146104d0578063d68cdc52146104ef575f80fd5b80639cefe029116100ac5780639cefe0291461045e578063a82ba76f1461047d578063c85d526214610490575f80fd5b8063925a99531461042c57806398590ef91461044b575f80fd5b806365a19c201161011b578063715018a611610101578063715018a6146103af5780638699fdf4146103c35780638da5cb5b146103e2575f80fd5b806365a19c20146103725780636ee4c12014610390575f80fd5b8063249e10c51161014b578063249e10c5146103065780633ec62279146103255780635c975abb14610339575f80fd5b80630ea59c4b146101a857806321f67fbb146102f0575f80fd5b366101a457604080513381523460208201527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a1005b5f80fd5b3480156101b3575f80fd5b5061027e6101c2366004612091565b6040805160c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810191909152505f90815260096020908152604091829020825160c081018452815473ffffffffffffffffffffffffffffffffffffffff908116825260018301549382019390935260028201549381019390935260038101548216606084015260040154908116608083015274010000000000000000000000000000000000000000900460ff16151560a082015290565b6040516102e791905f60c08201905073ffffffffffffffffffffffffffffffffffffffff80845116835260208401516020840152604084015160408401528060608501511660608401528060808501511660808401525060a0830151151560a083015292915050565b60405180910390f35b3480156102fb575f80fd5b50610304610618565b005b348015610311575f80fd5b50610304610320366004612091565b61062a565b348015610330575f80fd5b506103046109f5565b348015610344575f80fd5b505f5474010000000000000000000000000000000000000000900460ff1660405190151581526020016102e7565b34801561037d575f80fd5b506005545b6040519081526020016102e7565b34801561039b575f80fd5b506103046103aa3660046120c9565b610a05565b3480156103ba575f80fd5b50610304610cee565b3480156103ce575f80fd5b506103826103dd3660046120f7565b610cff565b3480156103ed575f80fd5b505f5473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102e7565b348015610437575f80fd5b50610304610446366004612121565b610d70565b6103046104593660046120f7565b611063565b348015610469575f80fd5b50610304610478366004612091565b6112a0565b61030461048b3660046120f7565b6112ad565b34801561049b575f80fd5b506103826117c1565b3480156104af575f80fd5b506002546104079073ffffffffffffffffffffffffffffffffffffffff1681565b3480156104db575f80fd5b506103826104ea3660046120f7565b6117d0565b6103046104fd366004612160565b61188d565b34801561050d575f80fd5b5061058161051c366004612091565b60096020525f90815260409020805460018201546002830154600384015460049094015473ffffffffffffffffffffffffffffffffffffffff938416949293919282169181169074010000000000000000000000000000000000000000900460ff1686565b6040805173ffffffffffffffffffffffffffffffffffffffff978816815260208101969096528501939093529084166060840152909216608082015290151560a082015260c0016102e7565b3480156105d8575f80fd5b506003546104079073ffffffffffffffffffffffffffffffffffffffff1681565b348015610604575f80fd5b506103046106133660046121a7565b611cdf565b610620611d3f565b610628611d91565b565b610632611e0d565b61063a611e91565b5f818152600960205260409020811580159061065857506004548211155b6106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6974656d20646f65736e2774206578697374000000000000000000000000000060448201526064015b60405180910390fd5b600481015474010000000000000000000000000000000000000000900460ff1615155f0361074d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6974656d206973206e6f7420666f722073656c6c00000000000000000000000060448201526064016106ba565b60048101543373ffffffffffffffffffffffffffffffffffffffff909116036107d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f596f752063616e6e6f742062757920796f7572206f776e206e6674000000000060448201526064016106ba565b600281015460088190556005546107f791612710916107f19190611f04565b90611f16565b600681905560085461080891611f21565b60078190556003820154600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283169081179091556004808501546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152931690830152602482019290925263a9059cbb906044016020604051808303815f875af11580156108b5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108d991906121c2565b506002546007546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481019190915273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906044016020604051808303815f875af1158015610952573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097691906121c2565b506004810180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16905560018101546007546040805133815260208101939093528201527fc0790eb4899023169be51dd7074a99a15959464f9a0e6b19767d8d61539b87269060600160405180910390a1506109f260018055565b50565b6109fd611d3f565b610628611f2c565b610a0d611e0d565b610a15611e91565b610a1d611d3f565b815f03610a86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f416d6f756e742063616e6e6f74206265207a65726f000000000000000000000060448201526064016106ba565b73ffffffffffffffffffffffffffffffffffffffff8116610b28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f455243323020616464726573732063616e6e6f74206265207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106ba565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526370a0823190602401602060405180830381865afa158015610bbb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bdf91906121e1565b821115610c48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f496e73756666696369656e742066756e64732e0000000000000000000000000060448201526064016106ba565b6002546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810184905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906044016020604051808303815f875af1158015610cbc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ce091906121c2565b50610cea60018055565b5050565b610cf6611d3f565b6106285f611f9a565b5f60015b6004548111610d65575f818152600960205260409020805473ffffffffffffffffffffffffffffffffffffffff8681169116148015610d455750838160010154145b15610d5257509050610d6a565b5080610d5d81612225565b915050610d03565b505f90505b92915050565b610d78611e0d565b610d80611e91565b610d88611d3f565b5f8281526009602052604090208215801590610da657506004548311155b610e0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6974656d20646f65736e2774206578697374000000000000000000000000000060448201526064016106ba565b600481015474010000000000000000000000000000000000000000900460ff1615155f03610e96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6974656d206973206e6f7420666f722073656c6c00000000000000000000000060448201526064016106ba565b600481015473ffffffffffffffffffffffffffffffffffffffff808416911603610f1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f596f752063616e6e6f742062757920796f7572206f776e206e6674000000000060448201526064016106ba565b805473ffffffffffffffffffffffffffffffffffffffff858116911614610fc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f6974656d206973206e6f74207468652073616d6520636f6e747261637420616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106ba565b6004810180547fffffffffffffffffffffff0000000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841690811790915560018201546002830154604080519384526020840192909252908201527ffc2e01ec8c4c53e02ee1fa8816c1692687966e0daef195be5b64c88d8e58e3ee9060600160405180910390a15061105e60018055565b505050565b5f818152600960205260409020600401548290829073ffffffffffffffffffffffffffffffffffffffff163314611098575f80fd5b5f8181526009602052604090205473ffffffffffffffffffffffffffffffffffffffff8381169116146110c9575f80fd5b5f838152600960205260409020600481015473ffffffffffffffffffffffffffffffffffffffff163314611159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6973206e6f74207468652073656c6c657200000000000000000000000000000060448201526064016106ba565b600481015474010000000000000000000000000000000000000000900460ff1615156001146111e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6973206e6f74206c697374656e6564000000000000000000000000000000000060448201526064016106ba565b60018101546040517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481019190915273ffffffffffffffffffffffffffffffffffffffff8616906323b872dd906064015f604051808303815f87803b15801561125b575f80fd5b505af115801561126d573d5f803e3d5ffd5b5050505060040180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16905550505050565b6112a8611d3f565b600555565b6112b5611e0d565b6112bd611e91565b5f81815260096020526040902081158015906112db57506004548211155b611341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6974656d20646f65736e2774206578697374000000000000000000000000000060448201526064016106ba565b600481015474010000000000000000000000000000000000000000900460ff1615155f036113cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6974656d206973206e6f7420666f722073656c6c00000000000000000000000060448201526064016106ba565b60048101543373ffffffffffffffffffffffffffffffffffffffff90911603611450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f596f752063616e6e6f742062757920796f7572206f776e206e6674000000000060448201526064016106ba565b805473ffffffffffffffffffffffffffffffffffffffff8481169116146114f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f6974656d206973206e6f74207468652073616d6520636f6e747261637420616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106ba565b806002015434101561158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f6e6f7420656e6f7567682062616c616e636520666f722074686973207472616e60448201527f73616374696f6e0000000000000000000000000000000000000000000000000060648201526084016106ba565b600281015460088190556005546115ac91612710916107f19190611f04565b60068190556008546115bd91611f21565b60078190556003820154600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283169081179091556004808501546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152931690830152602482019290925263a9059cbb906044016020604051808303815f875af115801561166a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061168e91906121c2565b5060018101546040517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481019190915273ffffffffffffffffffffffffffffffffffffffff8416906323b872dd906064015f604051808303815f87803b158015611706575f80fd5b505af1158015611718573d5f803e3d5ffd5b505050506004810180547fffffffffffffffffffffff00000000000000000000000000000000000000000016337fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116919091179091556001820154600754604080519384526020840192909252908201527fc0790eb4899023169be51dd7074a99a15959464f9a0e6b19767d8d61539b87269060600160405180910390a150610cea60018055565b5f6117cb60045490565b905090565b5f8060015b6004548111611876575f8181526009602052604090205473ffffffffffffffffffffffffffffffffffffffff868116911614801561182257505f8181526009602052604090206001015484145b801561185657505f8181526009602052604090206004015474010000000000000000000000000000000000000000900460ff165b156118645760019150611876565b8061186e81612225565b9150506117d5565b81611885575f92505050610d6a565b949350505050565b6040517f6352211e00000000000000000000000000000000000000000000000000000000815260048101849052339073ffffffffffffffffffffffffffffffffffffffff861690636352211e90602401602060405180830381865afa1580156118f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061191c919061225c565b73ffffffffffffffffffffffffffffffffffffffff1614611999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f596f7520617265206e6f7420746865206f776e6572000000000000000000000060448201526064016106ba565b5f8211611a28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e46544d61726b65743a207072696365206d757374206265206772656174657260448201527f207468616e20300000000000000000000000000000000000000000000000000060648201526084016106ba565b611a36600480546001019055565b6040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020015f151581525060095f611ab360045490565b815260208082019290925260409081015f9081208451815473ffffffffffffffffffffffffffffffffffffffff9182167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161783559486015160018301559285015160028201556060850151600382018054918516919095161790935560808401516004938401805460a090960151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090961691909316179390931790556009908290611b99905490565b8152602081019190915260409081015f2090517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905290915073ffffffffffffffffffffffffffffffffffffffff8616906323b872dd906064015f604051808303815f87803b158015611c1d575f80fd5b505af1158015611c2f573d5f803e3d5ffd5b505050600480830180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f21149a5778ddc1afca837b00fd70c0fc0a6d1d25d1bd15bff4a84bab1eeb9a92915033908690611ca3905490565b6040805173ffffffffffffffffffffffffffffffffffffffff909416845260208401929092529082015260600160405180910390a15050505050565b611ce7611d3f565b73ffffffffffffffffffffffffffffffffffffffff8116611d36576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024016106ba565b6109f281611f9a565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610628576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016106ba565b611d9961200e565b5f80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b5f5474010000000000000000000000000000000000000000900460ff1615610628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016106ba565b600260015403611efd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106ba565b6002600155565b5f611f0f8284612277565b9392505050565b5f611f0f828461228e565b5f611f0f82846122c6565b611f34611e0d565b5f80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611de33390565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5474010000000000000000000000000000000000000000900460ff16610628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016106ba565b5f602082840312156120a1575f80fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146109f2575f80fd5b5f80604083850312156120da575f80fd5b8235915060208301356120ec816120a8565b809150509250929050565b5f8060408385031215612108575f80fd5b8235612113816120a8565b946020939093013593505050565b5f805f60608486031215612133575f80fd5b833561213e816120a8565b9250602084013591506040840135612155816120a8565b809150509250925092565b5f805f8060808587031215612173575f80fd5b843561217e816120a8565b93506020850135925060408501359150606085013561219c816120a8565b939692955090935050565b5f602082840312156121b7575f80fd5b8135611f0f816120a8565b5f602082840312156121d2575f80fd5b81518015158114611f0f575f80fd5b5f602082840312156121f1575f80fd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612255576122556121f8565b5060010190565b5f6020828403121561226c575f80fd5b8151611f0f816120a8565b8082028115828204841417610d6a57610d6a6121f8565b5f826122c1577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b81810381811115610d6a57610d6a6121f856fea2646970667358221220f88f35f3154eae5d966207d5a92c99548d02ec4a8c05676b45199a3953dfa35f64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x165 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x925A9953 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xCC4AA204 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDE74E57B GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xDF706CBC EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCC4AA204 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xCF02976F EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xD68CDC52 EQ PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CEFE029 GT PUSH2 0xAC JUMPI DUP1 PUSH4 0x9CEFE029 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xA82BA76F EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xC85D5262 EQ PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x925A9953 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x98590EF9 EQ PUSH2 0x44B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65A19C20 GT PUSH2 0x11B JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x8699FDF4 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65A19C20 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x6EE4C120 EQ PUSH2 0x390 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x249E10C5 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x249E10C5 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x3EC62279 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEA59C4B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x21F67FBB EQ PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1A4 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 ADD SLOAD SWAP1 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x618 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x9F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0xCEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x12AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x17C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x407 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2160 JUMP JUMPDEST PUSH2 0x188D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x581 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP8 DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x407 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x1CDF JUMP JUMPDEST PUSH2 0x620 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x628 PUSH2 0x1D91 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x632 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x63A PUSH2 0x1E91 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x658 JUMPI POP PUSH1 0x4 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D20646F65736E27742065786973740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH0 SUB PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F7420666F722073656C6C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SUB PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742062757920796F7572206F776E206E66740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x7F7 SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH2 0x808 SWAP2 PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP4 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x952 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x976 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xC0790EB4899023169BE51DD7074A99A15959464F9A0E6B19767D8D61539B8726 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x9F2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FD PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x628 PUSH2 0x1F2C JUMP JUMPDEST PUSH2 0xA0D PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0xA15 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0xA1D PUSH2 0x1D3F JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742063616E6E6F74206265207A65726F0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243323020616464726573732063616E6E6F74206265207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH2 0xCEA PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x628 PUSH0 PUSH2 0x1F9A JUMP JUMPDEST PUSH0 PUSH1 0x1 JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0xD65 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xD45 JUMPI POP DUP4 DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xD52 JUMPI POP SWAP1 POP PUSH2 0xD6A JUMP JUMPDEST POP DUP1 PUSH2 0xD5D DUP2 PUSH2 0x2225 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD03 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD78 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0xD80 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0xD88 PUSH2 0x1D3F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xDA6 JUMPI POP PUSH1 0x4 SLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D20646F65736E27742065786973740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH0 SUB PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F7420666F722073656C6C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND SUB PUSH2 0xF1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742062757920796F7572206F776E206E66740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0xFC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F74207468652073616D6520636F6E7472616374206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH32 0xFC2E01EC8C4C53E02EE1FA8816C1692687966E0DAEF195BE5B64C88D8E58E3EE SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x105E PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1098 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x10C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6973206E6F74207468652073656C6C6572000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6973206E6F74206C697374656E65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x12A8 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x12BD PUSH2 0x1E91 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x12DB JUMPI POP PUSH1 0x4 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D20646F65736E27742065786973740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH0 SUB PUSH2 0x13CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F7420666F722073656C6C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SUB PUSH2 0x1450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742062757920796F7572206F776E206E66740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D206973206E6F74207468652073616D6520636F6E7472616374206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682062616C616E636520666F722074686973207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73616374696F6E00000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x15AC SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH2 0x15BD SWAP2 PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP4 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x166A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168E SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1706 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1718 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH32 0xC0790EB4899023169BE51DD7074A99A15959464F9A0E6B19767D8D61539B8726 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xCEA PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x17CB PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0x1876 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1822 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 EQ JUMPDEST DUP1 ISZERO PUSH2 0x1856 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1864 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x1876 JUMP JUMPDEST DUP1 PUSH2 0x186E DUP2 PUSH2 0x2225 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17D5 JUMP JUMPDEST DUP2 PUSH2 0x1885 JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0xD6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191C SWAP2 SWAP1 PUSH2 0x225C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x1A28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E46544D61726B65743A207072696365206D7573742062652067726561746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468616E203000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1A36 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH0 PUSH2 0x1AB3 PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP4 SSTORE SWAP5 DUP7 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP3 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0xA0 SWAP1 SWAP7 ADD MLOAD ISZERO ISZERO PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 SWAP1 SWAP7 AND SWAP2 SWAP1 SWAP4 AND OR SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x9 SWAP1 DUP3 SWAP1 PUSH2 0x1B99 SWAP1 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 SWAP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C2F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH32 0x21149A5778DDC1AFCA837B00FD70C0FC0A6D1D25D1BD15BFF4A84BAB1EEB9A92 SWAP2 POP CALLER SWAP1 DUP7 SWAP1 PUSH2 0x1CA3 SWAP1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CE7 PUSH2 0x1D3F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x9F2 DUP2 PUSH2 0x1F9A JUMP JUMPDEST PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1D99 PUSH2 0x200E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1EFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 DUP5 PUSH2 0x2277 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 DUP5 PUSH2 0x228E JUMP JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 DUP5 PUSH2 0x22C6 JUMP JUMPDEST PUSH2 0x1F34 PUSH2 0x1E0D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1DE3 CALLER SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20EC DUP2 PUSH2 0x20A8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2108 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2113 DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2133 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x213E DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2155 DUP2 PUSH2 0x20A8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2173 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x217E DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x219C DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F0F DUP2 PUSH2 0x20A8 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F0F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2255 JUMPI PUSH2 0x2255 PUSH2 0x21F8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1F0F DUP2 PUSH2 0x20A8 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD6A JUMPI PUSH2 0xD6A PUSH2 0x21F8 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x22C1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD6A PUSH2 0x21F8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 DUP16 CALLDATALOAD RETURN ISZERO 0x4E 0xAE 0x5D SWAP7 PUSH3 0x7D5A9 0x2C SWAP10 SLOAD DUP14 MUL 0xEC 0x4A DUP13 SDIV PUSH8 0x6B45199A3953DFA3 PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "478:7478:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6345:30;;;6353:10;188:74:21;;6365:9:20;293:2:21;278:18;;271:34;6345:30:20;;161:18:21;6345:30:20;;;;;;;478:7478;;;;;6453:112;;;;;;;;;;-1:-1:-1;6453:112:20;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6544:13:20;;;;:8;:13;;;;;;;;;6537:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6453:112;;;;;;;649:4:21;691:3;680:9;676:19;668:27;;714:42;802:2;793:6;787:13;783:22;772:9;765:41;862:4;854:6;850:17;844:24;837:4;826:9;822:20;815:54;925:4;917:6;913:17;907:24;900:4;889:9;885:20;878:54;1000:2;992:4;984:6;980:17;974:24;970:33;963:4;952:9;948:20;941:63;1072:2;1064:4;1056:6;1052:17;1046:24;1042:33;1035:4;1024:9;1020:20;1013:63;;1146:4;1138:6;1134:17;1128:24;1121:32;1114:40;1107:4;1096:9;1092:20;1085:70;501:660;;;;;6453:112:20;;;;;;;;1683:76;;;;;;;;;;;;;:::i;:::-;;4132:836;;;;;;;;;;-1:-1:-1;4132:836:20;;;;;:::i;:::-;;:::i;1603:72::-;;;;;;;;;;;;;:::i;1615:84:2:-;;;;;;;;;;-1:-1:-1;1662:4:2;1685:7;;;;;;1615:84;;1331:14:21;;1324:22;1306:41;;1294:2;1279:18;1615:84:2;1166:187:21;6752:107:20;;;;;;;;;;-1:-1:-1;6831:20:20;;6752:107;;;1504:25:21;;;1492:2;1477:18;6752:107:20;1358:177:21;5708:433:20;;;;;;;;;;-1:-1:-1;5708:433:20;;;;;:::i;:::-;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;7633:320:20:-;;;;;;;;;;-1:-1:-1;7633:320:20;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;;;1638:85;;;2530:42:21;2518:55;;;2500:74;;2488:2;2473:18;1638:85:0;2354:226:21;5037:609:20;;;;;;;;;;-1:-1:-1;5037:609:20;;;;;:::i;:::-;;:::i;2594:376::-;;;;;;:::i;:::-;;:::i;6181:113::-;;;;;;;;;;-1:-1:-1;6181:113:20;;;;;:::i;:::-;;:::i;3044:1021::-;;;;;;:::i;:::-;;:::i;6605:103::-;;;;;;;;;;;;;:::i;548:19::-;;;;;;;;;;-1:-1:-1;548:19:20;;;;;;;;6896:698;;;;;;;;;;-1:-1:-1;6896:698:20;;;;;:::i;:::-;;:::i;1765:667::-;;;;;;:::i;:::-;;:::i;1303:46::-;;;;;;;;;;-1:-1:-1;1303:46:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4157:42:21;4226:15;;;4208:34;;4273:2;4258:18;;4251:34;;;;4301:18;;4294:34;;;;4364:15;;;4359:2;4344:18;;4337:43;4417:15;;;4411:3;4396:19;;4389:44;4477:14;;4470:22;4464:3;4449:19;;4442:51;4134:3;4119:19;1303:46:20;3851:648:21;574:21:20;;;;;;;;;;-1:-1:-1;574:21:20;;;;;;;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1683:76:20:-;1531:13:0;:11;:13::i;:::-;1741:10:20::1;:8;:10::i;:::-;1683:76::o:0;4132:836::-;1239:19:2;:17;:19::i;:::-;2261:21:3::1;:19;:21::i;:::-;4218:26:20::2;4247:20:::0;;;:8:::2;:20;::::0;;;;4286:14;;;;;:54:::2;;-1:-1:-1::0;4318:12:20::2;918:14:13::0;4304:10:20::2;:36;;4286:54;4278:85;;;::::0;::::2;::::0;;5205:2:21;4278:85:20::2;::::0;::::2;5187:21:21::0;5244:2;5224:18;;;5217:30;5283:20;5263:18;;;5256:48;5321:18;;4278:85:20::2;;;;;;;;;4382:15;::::0;::::2;::::0;;;::::2;;;:24;;4401:5;4382:24:::0;4374:57:::2;;;::::0;::::2;::::0;;5552:2:21;4374:57:20::2;::::0;::::2;5534:21:21::0;5591:2;5571:18;;;5564:30;5630:22;5610:18;;;5603:50;5670:18;;4374:57:20::2;5350:344:21::0;4374:57:20::2;4450:14;::::0;::::2;::::0;4468:10:::2;4450:28;:14:::0;;::::2;:28:::0;4442:68:::2;;;::::0;::::2;::::0;;5901:2:21;4442:68:20::2;::::0;::::2;5883:21:21::0;5940:2;5920:18;;;5913:30;5979:29;5959:18;;;5952:57;6026:18;;4442:68:20::2;5699:351:21::0;4442:68:20::2;4538:13;::::0;::::2;::::0;4523:12:::2;:28:::0;;;4597:20:::2;::::0;4580:49:::2;::::0;4623:5:::2;::::0;4580:38:::2;::::0;4538:13;4580:16:::2;:38::i;:::-;:42:::0;::::2;:49::i;:::-;4562:15;:67:::0;;;4655:12:::2;::::0;:33:::2;::::0;:16:::2;:33::i;:::-;4640:12;:48:::0;;;4716:12:::2;::::0;::::2;::::0;4701:5:::2;:28:::0;;;::::2;4716:12;::::0;;::::2;4701:28:::0;;::::2;::::0;;;4755:14:::2;::::0;;::::2;::::0;4740:44:::2;::::0;;;;4755:14;::::2;4740:44:::0;;::::2;188:74:21::0;278:18;;;271:34;;;;4740:14:20::2;::::0;161:18:21;;4740:44:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4795:5:20::2;::::0;4822:12:::2;::::0;4795:40:::2;::::0;;;;4810:10:::2;4795:40;::::0;::::2;188:74:21::0;278:18;;;271:34;;;;4795:5:20::2;::::0;;::::2;::::0;:14:::2;::::0;161:18:21;;4795:40:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4872:15:20::2;::::0;::::2;:23:::0;;;::::2;::::0;;-1:-1:-1;4930:15:20;::::2;::::0;4947:12:::2;::::0;4911:49:::2;::::0;;4918:10:::2;6539:74:21::0;;6644:2;6629:18;;6622:34;;;;6672:18;;6665:34;4911:49:20::2;::::0;6527:2:21;6512:18;4911:49:20::2;;;;;;;4207:761;2303:20:3::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;4132:836:20::0;:::o;1603:72::-;1531:13:0;:11;:13::i;:::-;1659:8:20::1;:6;:8::i;5708:433::-:0;1239:19:2;:17;:19::i;:::-;2261:21:3::1;:19;:21::i;:::-;1531:13:0::2;:11;:13::i;:::-;5837:7:20::3;5848:1;5837:12:::0;5829:46:::3;;;::::0;::::3;::::0;;6912:2:21;5829:46:20::3;::::0;::::3;6894:21:21::0;6951:2;6931:18;;;6924:30;6990:23;6970:18;;;6963:51;7031:18;;5829:46:20::3;6710:345:21::0;5829:46:20::3;5894:27;::::0;::::3;5886:76;;;::::0;::::3;::::0;;7262:2:21;5886:76:20::3;::::0;::::3;7244:21:21::0;7301:2;7281:18;;;7274:30;7340:34;7320:18;;;7313:62;7411:6;7391:18;;;7384:34;7435:19;;5886:76:20::3;7060:400:21::0;5886:76:20::3;5973:5;:29:::0;;;::::3;;::::0;::::3;::::0;;::::3;::::0;;;6032:30:::3;::::0;;;;6056:4:::3;6032:30;::::0;::::3;2500:74:21::0;6032:15:20::3;::::0;2473:18:21;;6032:30:20::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6021:7;:41;;6013:73;;;::::0;::::3;::::0;;7856:2:21;6013:73:20::3;::::0;::::3;7838:21:21::0;7895:2;7875:18;;;7868:30;7934:21;7914:18;;;7907:49;7973:18;;6013:73:20::3;7654:343:21::0;6013:73:20::3;6097:5;::::0;:36:::3;::::0;;;;6112:10:::3;6097:36;::::0;::::3;188:74:21::0;278:18;;;271:34;;;6097:5:20::3;::::0;;::::3;::::0;:14:::3;::::0;161:18:21;;6097:36:20::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2303:20:3::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;5708:433:20::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;7633:320:20:-:0;7710:4;7736:1;7722:211;7744:12;918:14:13;7739:1:20;:27;7722:211;;7784:26;7813:11;;;:8;:11;;;;;7839;;:19;;;;:11;;:19;:50;;;;;7881:8;7862:7;:15;;;:27;7839:50;7835:91;;;-1:-1:-1;7913:1:20;-1:-1:-1;7906:8:20;;7835:91;-1:-1:-1;7768:3:20;;;;:::i;:::-;;;;7722:211;;;;7946:1;7939:8;;7633:320;;;;;:::o;5037:609::-;1239:19:2;:17;:19::i;:::-;2261:21:3::1;:19;:21::i;:::-;1531:13:0::2;:11;:13::i;:::-;5151:26:20::3;5180:13:::0;;;:8:::3;:13;::::0;;;;5212:7;;;;;:40:::3;;-1:-1:-1::0;5230:12:20::3;918:14:13::0;5223:3:20::3;:29;;5212:40;5204:71;;;::::0;::::3;::::0;;5205:2:21;5204:71:20::3;::::0;::::3;5187:21:21::0;5244:2;5224:18;;;5217:30;5283:20;5263:18;;;5256:48;5321:18;;5204:71:20::3;5003:342:21::0;5204:71:20::3;5294:15;::::0;::::3;::::0;;;::::3;;;:24;;5313:5;5294:24:::0;5286:57:::3;;;::::0;::::3;::::0;;5552:2:21;5286:57:20::3;::::0;::::3;5534:21:21::0;5591:2;5571:18;;;5564:30;5630:22;5610:18;;;5603:50;5670:18;;5286:57:20::3;5350:344:21::0;5286:57:20::3;5362:14;::::0;::::3;::::0;:25:::3;::::0;;::::3;:14:::0;::::3;:25:::0;5354:65:::3;;;::::0;::::3;::::0;;5901:2:21;5354:65:20::3;::::0;::::3;5883:21:21::0;5940:2;5920:18;;;5913:30;5979:29;5959:18;;;5952:57;6026:18;;5354:65:20::3;5699:351:21::0;5354:65:20::3;5438:11:::0;;:19:::3;::::0;;::::3;:11:::0;::::3;:19;5430:69;;;::::0;::::3;::::0;;8593:2:21;5430:69:20::3;::::0;::::3;8575:21:21::0;8632:2;8612:18;;;8605:30;8671:34;8651:18;;;8644:62;8742:7;8722:18;;;8715:35;8767:19;;5430:69:20::3;8391:401:21::0;5430:69:20::3;5510:14;::::0;::::3;:24:::0;;5545:23;;5510:24:::3;::::0;::::3;5545:23:::0;;;;;;-1:-1:-1;5607:15:20;::::3;::::0;5624:13:::3;::::0;::::3;::::0;5584:54:::3;::::0;;6539:74:21;;;6644:2;6629:18;;6622:34;;;;6672:18;;;6665:34;5584:54:20::3;::::0;6527:2:21;6512:18;5584:54:20::3;;;;;;;5140:506;2303:20:3::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;5037:609:20::0;;;:::o;2594:376::-;1507:13;;;;:8;:13;;;;;:20;;;2661:4;;1507:13;;:20;;1493:10;:34;1485:43;;;;;;1555:13;;;;:8;:13;;;;;:17;;1547:25;;;1555:17;;1547:25;1539:34;;;;;;2683:26:::1;2712:13:::0;;;:8:::1;:13;::::0;;;;2744:14:::1;::::0;::::1;::::0;:28:::1;:14;2762:10;2744:28;2736:58;;;::::0;::::1;::::0;;8999:2:21;2736:58:20::1;::::0;::::1;8981:21:21::0;9038:2;9018:18;;;9011:30;9077:19;9057:18;;;9050:47;9114:18;;2736:58:20::1;8797:341:21::0;2736:58:20::1;2813:15;::::0;::::1;::::0;;;::::1;;;:23;;2832:4;2813:23;2805:51;;;::::0;::::1;::::0;;9345:2:21;2805:51:20::1;::::0;::::1;9327:21:21::0;9384:2;9364:18;;;9357:30;9423:17;9403:18;;;9396:45;9458:18;;2805:51:20::1;9143:339:21::0;2805:51:20::1;2912:15;::::0;::::1;::::0;2867:61:::1;::::0;;;;2893:4:::1;2867:61;::::0;::::1;9750:34:21::0;2900:10:20::1;9800:18:21::0;;;9793:43;9852:18;;;9845:34;;;;2867:17:20::1;::::0;::::1;::::0;::::1;::::0;9662:18:21;;2867:61:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;2939:15:20::1;;:23:::0;;;::::1;::::0;;-1:-1:-1;;;;2594:376:20:o;6181:113::-;1531:13:0;:11;:13::i;:::-;6259:20:20::1;:29:::0;6181:113::o;3044:1021::-;1239:19:2;:17;:19::i;:::-;2261:21:3::1;:19;:21::i;:::-;3136:26:20::2;3165:13:::0;;;:8:::2;:13;::::0;;;;3197:7;;;;;:40:::2;;-1:-1:-1::0;3215:12:20::2;918:14:13::0;3208:3:20::2;:29;;3197:40;3189:71;;;::::0;::::2;::::0;;5205:2:21;3189:71:20::2;::::0;::::2;5187:21:21::0;5244:2;5224:18;;;5217:30;5283:20;5263:18;;;5256:48;5321:18;;3189:71:20::2;5003:342:21::0;3189:71:20::2;3279:15;::::0;::::2;::::0;;;::::2;;;:24;;3298:5;3279:24:::0;3271:57:::2;;;::::0;::::2;::::0;;5552:2:21;3271:57:20::2;::::0;::::2;5534:21:21::0;5591:2;5571:18;;;5564:30;5630:22;5610:18;;;5603:50;5670:18;;3271:57:20::2;5350:344:21::0;3271:57:20::2;3347:14;::::0;::::2;::::0;3365:10:::2;3347:28;:14:::0;;::::2;:28:::0;3339:68:::2;;;::::0;::::2;::::0;;5901:2:21;3339:68:20::2;::::0;::::2;5883:21:21::0;5940:2;5920:18;;;5913:30;5979:29;5959:18;;;5952:57;6026:18;;3339:68:20::2;5699:351:21::0;3339:68:20::2;3426:11:::0;;:19:::2;::::0;;::::2;:11:::0;::::2;:19;3418:69;;;::::0;::::2;::::0;;8593:2:21;3418:69:20::2;::::0;::::2;8575:21:21::0;8632:2;8612:18;;;8605:30;8671:34;8651:18;;;8644:62;8742:7;8722:18;;;8715:35;8767:19;;3418:69:20::2;8391:401:21::0;3418:69:20::2;3519:7;:13;;;3506:9;:26;;3498:78;;;::::0;::::2;::::0;;10092:2:21;3498:78:20::2;::::0;::::2;10074:21:21::0;10131:2;10111:18;;;10104:30;10170:34;10150:18;;;10143:62;10241:9;10221:18;;;10214:37;10268:19;;3498:78:20::2;9890:403:21::0;3498:78:20::2;3602:13;::::0;::::2;::::0;3587:12:::2;:28:::0;;;3661:20:::2;::::0;3644:49:::2;::::0;3687:5:::2;::::0;3644:38:::2;::::0;3602:13;3644:16:::2;:38::i;:49::-;3626:15;:67:::0;;;3719:12:::2;::::0;:33:::2;::::0;:16:::2;:33::i;:::-;3704:12;:48:::0;;;3778:12:::2;::::0;::::2;::::0;3763:5:::2;:28:::0;;;::::2;3778:12;::::0;;::::2;3763:28:::0;;::::2;::::0;;;3817:14:::2;::::0;;::::2;::::0;3802:44:::2;::::0;;;;3817:14;::::2;3802:44:::0;;::::2;188:74:21::0;278:18;;;271:34;;;;3802:14:20::2;::::0;161:18:21;;3802:44:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3904:15:20::2;::::0;::::2;::::0;3859:61:::2;::::0;;;;3885:4:::2;3859:61;::::0;::::2;9750:34:21::0;3892:10:20::2;9800:18:21::0;;;9793:43;9852:18;;;9845:34;;;;3859:17:20::2;::::0;::::2;::::0;::::2;::::0;9662:18:21;;3859:61:20::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;3931:14:20::2;::::0;::::2;:27:::0;;3969:23;;3948:10:::2;3969:23:::0;;;;;;;;;;-1:-1:-1;4027:15:20;::::2;::::0;4044:12:::2;::::0;4008:49:::2;::::0;;6539:74:21;;;6644:2;6629:18;;6622:34;;;;6672:18;;;6665:34;4008:49:20::2;::::0;6527:2:21;6512:18;4008:49:20::2;;;;;;;3125:940;2303:20:3::1;1716:1:::0;2809:22;;2629:209;6605:103:20;6654:4;6678:22;:12;918:14:13;;827:112;6678:22:20;6671:29;;6605:103;:::o;6896:698::-;6969:7;;7139:1;7130:273;7147:12;918:14:13;7142:1:20;:27;7130:273;;7191:11;;;;:8;:11;;;;;:15;:23;;;;:15;;:23;:58;;;;-1:-1:-1;7218:11:20;;;;:8;:11;;;;;:19;;;:31;;7191:58;:81;;;;-1:-1:-1;7253:11:20;;;;:8;:11;;;;;:19;;;;;;;;7191:81;7187:209;;;7297:4;7289:12;;7361:5;;7187:209;7171:3;;;;:::i;:::-;;;;7130:273;;;7500:5;7495:39;;7525:1;7518:8;;;;;;7495:39;7549:1;6896:698;-1:-1:-1;;;;6896:698:20:o;1765:667::-;1871:22;;;;;;;;1504:25:21;;;1897:10:20;;1871:36;:12;;;;;1477:18:21;;1871:22:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;1863:70;;;;;;;10756:2:21;1863:70:20;;;10738:21:21;10795:2;10775:18;;;10768:30;10834:23;10814:18;;;10807:51;10875:18;;1863:70:20;10554:345:21;1863:70:20;1957:1;1948:6;:10;1940:62;;;;;;;11106:2:21;1940:62:20;;;11088:21:21;11145:2;11125:18;;;11118:30;11184:34;11164:18;;;11157:62;11255:9;11235:18;;;11228:37;11282:19;;1940:62:20;10904:403:21;1940:62:20;2009:24;:12;1032:19:13;;1050:1;1032:19;;;945:123;2009:24:20;2075:130;;;;;;;;2096:4;2075:130;;;;;;2111:8;2075:130;;;;2130:6;2075:130;;;;2147:5;2075:130;;;;;;2171:10;2075:130;;;;;;2193:5;2075:130;;;;;2040:8;:32;2049:22;:12;918:14:13;;827:112;2049:22:20;2040:32;;;;;;;;;;;;;;-1:-1:-1;2040:32:20;;;:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:8;;-1:-1:-1;;2250:22:20;;918:14:13;;827:112;2250:22:20;2241:32;;;;;;;;;;;;;-1:-1:-1;2241:32:20;2280:54;;;;;2298:10;2280:54;;;9750:34:21;2318:4:20;9800:18:21;;;9793:43;9852:18;;;9845:34;;;2241:32:20;;-1:-1:-1;2280:17:20;;;;;;9662:18:21;;2280:54:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2341:15:20;;;;:22;;;;;;;;2375:53;;-1:-1:-1;2383:10:20;;2395:8;;2405:22;;918:14:13;;827:112;2405:22:20;2375:53;;;6569:42:21;6557:55;;;6539:74;;6644:2;6629:18;;6622:34;;;;6672:18;;;6665:34;6527:2;6512:18;2375:53:20;;;;;;;1856:576;1765:667;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2627:22:::1;::::0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;2500:74:21::0;2473:18;;2672:31:0::1;2354:226:21::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;1855:23;1710:6;735:10:12;1855:23:0;1851:101;;1901:40;;;;;735:10:12;1901:40:0;;;2500:74:21;2473:18;;1901:40:0;2354:226:21;2433:117:2;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;;::::1;::::0;;2521:22:::1;735:10:12::0;2530:12:2::1;2521:22;::::0;2530:42:21;2518:55;;;2500:74;;2488:2;2473:18;2521:22:2::1;;;;;;;2433:117::o:0;1767:106::-;1662:4;1685:7;;;;;;1836:9;1828:38;;;;;;;11514:2:21;1828:38:2;;;11496:21:21;11553:2;11533:18;;;11526:30;11592:18;11572;;;11565:46;11628:18;;1828:38:2;11312:340:21;2336:287:3;1759:1;2468:7;;:19;2460:63;;;;;;;11859:2:21;2460:63:3;;;11841:21:21;11898:2;11878:18;;;11871:30;11937:33;11917:18;;;11910:61;11988:18;;2460:63:3;11657:355:21;2460:63:3;1759:1;2598:7;:18;2336:287::o;3465:96:18:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:18:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;2186:115:2:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;;::::1;::::0;::::1;::::0;;2274:20:::1;2281:12;735:10:12::0;;656:96;2912:187:0;2985:16;3004:6;;;3020:17;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1945:106:2:-;1662:4;1685:7;;;;;;2003:41;;;;;;;12804:2:21;2003:41:2;;;12786:21:21;12843:2;12823:18;;;12816:30;12882:22;12862:18;;;12855:50;12922:18;;2003:41:2;12602:344:21;316:180;375:6;428:2;416:9;407:7;403:23;399:32;396:52;;;444:1;441;434:12;396:52;-1:-1:-1;467:23:21;;316:180;-1:-1:-1;316:180:21:o;1540:154::-;1626:42;1619:5;1615:54;1608:5;1605:65;1595:93;;1684:1;1681;1674:12;1699:315;1767:6;1775;1828:2;1816:9;1807:7;1803:23;1799:32;1796:52;;;1844:1;1841;1834:12;1796:52;1880:9;1867:23;1857:33;;1940:2;1929:9;1925:18;1912:32;1953:31;1978:5;1953:31;:::i;:::-;2003:5;1993:15;;;1699:315;;;;;:::o;2019:330::-;2102:6;2110;2163:2;2151:9;2142:7;2138:23;2134:32;2131:52;;;2179:1;2176;2169:12;2131:52;2218:9;2205:23;2237:31;2262:5;2237:31;:::i;:::-;2287:5;2339:2;2324:18;;;;2311:32;;-1:-1:-1;;;2019:330:21:o;2585:471::-;2677:6;2685;2693;2746:2;2734:9;2725:7;2721:23;2717:32;2714:52;;;2762:1;2759;2752:12;2714:52;2801:9;2788:23;2820:31;2845:5;2820:31;:::i;:::-;2870:5;-1:-1:-1;2922:2:21;2907:18;;2894:32;;-1:-1:-1;2978:2:21;2963:18;;2950:32;2991:33;2950:32;2991:33;:::i;:::-;3043:7;3033:17;;;2585:471;;;;;:::o;3306:540::-;3407:6;3415;3423;3431;3484:3;3472:9;3463:7;3459:23;3455:33;3452:53;;;3501:1;3498;3491:12;3452:53;3540:9;3527:23;3559:31;3584:5;3559:31;:::i;:::-;3609:5;-1:-1:-1;3661:2:21;3646:18;;3633:32;;-1:-1:-1;3712:2:21;3697:18;;3684:32;;-1:-1:-1;3768:2:21;3753:18;;3740:32;3781:33;3740:32;3781:33;:::i;:::-;3306:540;;;;-1:-1:-1;3306:540:21;;-1:-1:-1;;3306:540:21:o;4751:247::-;4810:6;4863:2;4851:9;4842:7;4838:23;4834:32;4831:52;;;4879:1;4876;4869:12;4831:52;4918:9;4905:23;4937:31;4962:5;4937:31;:::i;6055:277::-;6122:6;6175:2;6163:9;6154:7;6150:23;6146:32;6143:52;;;6191:1;6188;6181:12;6143:52;6223:9;6217:16;6276:5;6269:13;6262:21;6255:5;6252:32;6242:60;;6298:1;6295;6288:12;7465:184;7535:6;7588:2;7576:9;7567:7;7563:23;7559:32;7556:52;;;7604:1;7601;7594:12;7556:52;-1:-1:-1;7627:16:21;;7465:184;-1:-1:-1;7465:184:21:o;8002:::-;8054:77;8051:1;8044:88;8151:4;8148:1;8141:15;8175:4;8172:1;8165:15;8191:195;8230:3;8261:66;8254:5;8251:77;8248:103;;8331:18;;:::i;:::-;-1:-1:-1;8378:1:21;8367:13;;8191:195::o;10298:251::-;10368:6;10421:2;10409:9;10400:7;10396:23;10392:32;10389:52;;;10437:1;10434;10427:12;10389:52;10469:9;10463:16;10488:31;10513:5;10488:31;:::i;12017:168::-;12090:9;;;12121;;12138:15;;;12132:22;;12118:37;12108:71;;12159:18;;:::i;12190:274::-;12230:1;12256;12246:189;;12291:77;12288:1;12281:88;12392:4;12389:1;12382:15;12420:4;12417:1;12410:15;12246:189;-1:-1:-1;12449:9:21;;12190:274::o;12469:128::-;12536:9;;;12557:11;;;12554:37;;;12571:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1795000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ERC20()": "2357",
								"ERCNFT()": "2378",
								"buyNFT(address,uint256)": "infinite",
								"cancel(address,uint256)": "infinite",
								"getAllIdListed(address,uint256)": "infinite",
								"getComissionPercentage()": "2326",
								"getIdListed(address,uint256)": "infinite",
								"getListinglength()": "2417",
								"getNFTListing(uint256)": "11444",
								"listNFT(address,uint256,uint256,address)": "infinite",
								"listings(uint256)": "11112",
								"owner()": "2383",
								"pauseMarketplace()": "infinite",
								"paused()": "2391",
								"renounceOwnership()": "infinite",
								"transferNFT(uint256)": "infinite",
								"transferOrWithdraw(uint256,address)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpauseMarketplace()": "infinite",
								"updateComissionPercentage(uint256)": "24518",
								"updateNFT(address,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 478,
									"end": 7956,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 759,
									"end": 762,
									"name": "PUSH",
									"source": 20,
									"value": "15E"
								},
								{
									"begin": 730,
									"end": 762,
									"name": "PUSH",
									"source": 20,
									"value": "5"
								},
								{
									"begin": 730,
									"end": 762,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "CALLVALUE",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "PUSHSIZE",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "CODESIZE",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "PUSHSIZE",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "3"
								},
								{
									"begin": 1356,
									"end": 1419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "tag",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 1356,
									"end": 1419,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1404,
									"end": 1416,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "19"
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 21,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 21
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 21,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 21,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 21,
									"value": "19"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 7956,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f88f35f3154eae5d966207d5a92c99548d02ec4a8c05676b45199a3953dfa35f64736f6c63430008160033",
									".code": [
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "925A9953"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "CC4AA204"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "DE74E57B"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "DE74E57B"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "DF706CBC"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "F2FDE38B"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "CC4AA204"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "CF02976F"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "D68CDC52"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "9CEFE029"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "9CEFE029"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "A82BA76F"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "C85D5262"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "925A9953"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "98590EF9"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "65A19C20"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "715018A6"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "715018A6"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "8699FDF4"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "8DA5CB5B"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "65A19C20"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "6EE4C120"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "249E10C5"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "249E10C5"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "3EC62279"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "5C975ABB"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "EA59C4B"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "21F67FBB"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6353,
											"end": 6363,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 188,
											"end": 262,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 188,
											"end": 262,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6365,
											"end": 6374,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 293,
											"end": 295,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 296,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "PUSH",
											"source": 20,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 161,
											"end": 179,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "tag",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 478,
											"end": 7956,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "tag",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "tag",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 6453,
											"end": 6565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "tag",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6552,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6544,
											"end": 6557,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "tag",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 649,
											"end": 653,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 694,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 680,
											"end": 689,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 676,
											"end": 695,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 668,
											"end": 695,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 668,
											"end": 695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 756,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 804,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 793,
											"end": 799,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 787,
											"end": 800,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 783,
											"end": 805,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 772,
											"end": 781,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 862,
											"end": 866,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 860,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 850,
											"end": 867,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 844,
											"end": 868,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 835,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 822,
											"end": 842,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 815,
											"end": 869,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 925,
											"end": 929,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 913,
											"end": 930,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 907,
											"end": 931,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 900,
											"end": 904,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 898,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 885,
											"end": 905,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 878,
											"end": 932,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 984,
											"end": 990,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 980,
											"end": 997,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 974,
											"end": 998,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 970,
											"end": 1003,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 963,
											"end": 967,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 952,
											"end": 961,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 948,
											"end": 968,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 941,
											"end": 1004,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1072,
											"end": 1074,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1069,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1046,
											"end": 1070,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1042,
											"end": 1075,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1035,
											"end": 1039,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 1024,
											"end": 1033,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1013,
											"end": 1076,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1013,
											"end": 1076,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1146,
											"end": 1150,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 1138,
											"end": 1144,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1134,
											"end": 1151,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1092,
											"end": 1112,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1085,
											"end": 1155,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 501,
											"end": 1161,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 501,
											"end": 1161,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 501,
											"end": 1161,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 501,
											"end": 1161,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 501,
											"end": 1161,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "tag",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6565,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "tag",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "tag",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 1683,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "tag",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "tag",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "45"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "tag",
											"source": 20,
											"value": "45"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 4132,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "tag",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 4132,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "tag",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "tag",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "51"
										},
										{
											"begin": 1603,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1345,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1331,
											"end": 1345,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1324,
											"end": 1346,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1306,
											"end": 1347,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1306,
											"end": 1347,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1294,
											"end": 1296,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1297,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1353,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "tag",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "57"
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "tag",
											"source": 20,
											"value": "57"
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6831,
											"end": 6851,
											"name": "PUSH",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 6831,
											"end": 6851,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "tag",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6752,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1535,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "tag",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "tag",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 5708,
											"end": 6141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "tag",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "66"
										},
										{
											"begin": 5708,
											"end": 6141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "tag",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "tag",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 7633,
											"end": 7953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "tag",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 7633,
											"end": 7953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2572,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2573,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2518,
											"end": 2573,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2518,
											"end": 2573,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2488,
											"end": 2490,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2580,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "tag",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "81"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "tag",
											"source": 20,
											"value": "81"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "83"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 5037,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "tag",
											"source": 20,
											"value": "83"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "85"
										},
										{
											"begin": 5037,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "tag",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "87"
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 2594,
											"end": 2970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "tag",
											"source": 20,
											"value": "87"
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "88"
										},
										{
											"begin": 2594,
											"end": 2970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "tag",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "89"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "tag",
											"source": 20,
											"value": "89"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "91"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 6181,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "tag",
											"source": 20,
											"value": "91"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "92"
										},
										{
											"begin": 6181,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "tag",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "94"
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 3044,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "tag",
											"source": 20,
											"value": "94"
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "95"
										},
										{
											"begin": 3044,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "tag",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "96"
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "tag",
											"source": 20,
											"value": "96"
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 6605,
											"end": 6708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "tag",
											"source": 20,
											"value": "18"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "tag",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 548,
											"end": 567,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 548,
											"end": 567,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "tag",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "tag",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 6896,
											"end": 7594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "tag",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 6896,
											"end": 7594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "tag",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1765,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "tag",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 1765,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "tag",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "tag",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "116"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 1303,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "tag",
											"source": 20,
											"value": "116"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "tag",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4157,
											"end": 4199,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4208,
											"end": 4242,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4208,
											"end": 4242,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4276,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4258,
											"end": 4276,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4251,
											"end": 4285,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 4251,
											"end": 4285,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4251,
											"end": 4285,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 4251,
											"end": 4285,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4301,
											"end": 4319,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4301,
											"end": 4319,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4294,
											"end": 4328,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4294,
											"end": 4328,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4294,
											"end": 4328,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4294,
											"end": 4328,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4359,
											"end": 4361,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4337,
											"end": 4380,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4417,
											"end": 4432,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4417,
											"end": 4432,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4417,
											"end": 4432,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 4414,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 4396,
											"end": 4415,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4396,
											"end": 4415,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4389,
											"end": 4433,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4477,
											"end": 4491,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4477,
											"end": 4491,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4470,
											"end": 4492,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 4449,
											"end": 4468,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4449,
											"end": 4468,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4442,
											"end": 4493,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4134,
											"end": 4137,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 4119,
											"end": 4138,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1303,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3851,
											"end": 4499,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 574,
											"end": 595,
											"name": "tag",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 574,
											"end": 595,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 574,
											"end": 595,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 595,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "tag",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 574,
											"end": 595,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 574,
											"end": 595,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 574,
											"end": 595,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 574,
											"end": 595,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 595,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 574,
											"end": 595,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "tag",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 1683,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "137"
										},
										{
											"begin": 1741,
											"end": 1749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "138"
										},
										{
											"begin": 1741,
											"end": 1751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1741,
											"end": 1751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "137"
										},
										{
											"begin": 1741,
											"end": 1751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1683,
											"end": 1759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "tag",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4244,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4267,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4247,
											"end": 4267,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4247,
											"end": 4267,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4247,
											"end": 4255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 4247,
											"end": 4267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4267,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4247,
											"end": 4267,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4247,
											"end": 4267,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4247,
											"end": 4267,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 4286,
											"end": 4300,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4286,
											"end": 4300,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4286,
											"end": 4300,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4286,
											"end": 4300,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4286,
											"end": 4300,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4286,
											"end": 4340,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "146"
										},
										{
											"begin": 4286,
											"end": 4340,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4318,
											"end": 4330,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4304,
											"end": 4314,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4304,
											"end": 4340,
											"modifierDepth": 2,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 4304,
											"end": 4340,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4286,
											"end": 4340,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "146"
										},
										{
											"begin": 4286,
											"end": 4340,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "149"
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4363,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4278,
											"end": 4363,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5205,
											"end": 5207,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4278,
											"end": 4363,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "PUSH",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5217,
											"end": 5247,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5283,
											"end": 5303,
											"name": "PUSH",
											"source": 21,
											"value": "6974656D20646F65736E27742065786973740000000000000000000000000000"
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5256,
											"end": 5304,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "149"
										},
										{
											"begin": 4278,
											"end": 4363,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4382,
											"end": 4397,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4382,
											"end": 4397,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4382,
											"end": 4397,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 4382,
											"end": 4397,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 4382,
											"end": 4397,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4382,
											"end": 4406,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4382,
											"end": 4406,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4401,
											"end": 4406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4406,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "152"
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4374,
											"end": 4431,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4374,
											"end": 4431,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4374,
											"end": 4431,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4374,
											"end": 4431,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5630,
											"end": 5652,
											"name": "PUSH",
											"source": 21,
											"value": "6974656D206973206E6F7420666F722073656C6C000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5603,
											"end": 5653,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5350,
											"end": 5694,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "152"
										},
										{
											"begin": 4374,
											"end": 4431,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4450,
											"end": 4464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4450,
											"end": 4464,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4450,
											"end": 4464,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4450,
											"end": 4464,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4468,
											"end": 4478,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 4450,
											"end": 4478,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4450,
											"end": 4464,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4450,
											"end": 4464,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4450,
											"end": 4464,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4450,
											"end": 4478,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "155"
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4510,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4442,
											"end": 4510,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4510,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4442,
											"end": 4510,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "PUSH",
											"source": 21,
											"value": "1B"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5913,
											"end": 5943,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5979,
											"end": 6008,
											"name": "PUSH",
											"source": 21,
											"value": "596F752063616E6E6F742062757920796F7572206F776E206E66740000000000"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5952,
											"end": 6009,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5699,
											"end": 6050,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "155"
										},
										{
											"begin": 4442,
											"end": 4510,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4538,
											"end": 4551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 4538,
											"end": 4551,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4538,
											"end": 4551,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4538,
											"end": 4551,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4523,
											"end": 4535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 4523,
											"end": 4551,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4523,
											"end": 4551,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4523,
											"end": 4551,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 4597,
											"end": 4617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 4597,
											"end": 4617,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4580,
											"end": 4629,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 4580,
											"end": 4629,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4623,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "2710"
										},
										{
											"begin": 4623,
											"end": 4628,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4580,
											"end": 4618,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 4580,
											"end": 4618,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4538,
											"end": 4551,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4580,
											"end": 4596,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 4580,
											"end": 4618,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4580,
											"end": 4618,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 4580,
											"end": 4618,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4580,
											"end": 4622,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4580,
											"end": 4622,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "161"
										},
										{
											"begin": 4580,
											"end": 4629,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4580,
											"end": 4629,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 4580,
											"end": 4629,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4562,
											"end": 4577,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 4562,
											"end": 4629,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4562,
											"end": 4629,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4562,
											"end": 4629,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 4655,
											"end": 4667,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4655,
											"end": 4688,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 4655,
											"end": 4688,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4655,
											"end": 4671,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "163"
										},
										{
											"begin": 4655,
											"end": 4688,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4655,
											"end": 4688,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 4655,
											"end": 4688,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4640,
											"end": 4652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 4640,
											"end": 4688,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4640,
											"end": 4688,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4640,
											"end": 4688,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 4716,
											"end": 4728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 4716,
											"end": 4728,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4716,
											"end": 4728,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4716,
											"end": 4728,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 4701,
											"end": 4729,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4729,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4729,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 4701,
											"end": 4729,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4716,
											"end": 4728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4716,
											"end": 4728,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4716,
											"end": 4728,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4716,
											"end": 4728,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4729,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4729,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4729,
											"modifierDepth": 2,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4729,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4729,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4701,
											"end": 4729,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 4755,
											"end": 4769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4755,
											"end": 4769,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4784,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4740,
											"end": 4784,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 4755,
											"end": 4769,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 188,
											"end": 262,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 296,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4740,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "166"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4784,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "166"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "167"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 4740,
											"end": 4784,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "167"
										},
										{
											"begin": 4740,
											"end": 4784,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4795,
											"end": 4800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 4795,
											"end": 4800,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4822,
											"end": 4834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 4822,
											"end": 4834,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4810,
											"end": 4820,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 188,
											"end": 262,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 296,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4795,
											"end": 4800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4795,
											"end": 4800,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4800,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4800,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4800,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4809,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB"
										},
										{
											"begin": 4795,
											"end": 4809,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "171"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4835,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "171"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "172"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 4795,
											"end": 4835,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "172"
										},
										{
											"begin": 4795,
											"end": 4835,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4872,
											"end": 4895,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4872,
											"end": 4895,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4872,
											"end": 4895,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4872,
											"end": 4895,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4872,
											"end": 4895,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4872,
											"end": 4895,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4930,
											"end": 4945,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4947,
											"end": 4959,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 4947,
											"end": 4959,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4960,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4960,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4918,
											"end": 4928,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6699,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "C0790EB4899023169BE51DD7074A99A15959464F9A0E6B19767D8D61539B8726"
										},
										{
											"begin": 4911,
											"end": 4960,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 6512,
											"end": 6530,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4960,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 4207,
											"end": 4968,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4968,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4132,
											"end": 4968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "tag",
											"source": 20,
											"value": "51"
										},
										{
											"begin": 1603,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "137"
										},
										{
											"begin": 1659,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "181"
										},
										{
											"begin": 1659,
											"end": 1667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "tag",
											"source": 20,
											"value": "66"
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5844,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5848,
											"end": 5849,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5849,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5875,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5829,
											"end": 5875,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5829,
											"end": 5875,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6912,
											"end": 6914,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5829,
											"end": 5875,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6894,
											"end": 6915,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "PUSH",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6924,
											"end": 6954,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6990,
											"end": 7013,
											"name": "PUSH",
											"source": 21,
											"value": "416D6F756E742063616E6E6F74206265207A65726F0000000000000000000000"
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6963,
											"end": 7014,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7031,
											"end": 7049,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7049,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 6710,
											"end": 7055,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 5829,
											"end": 5875,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5894,
											"end": 5921,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5894,
											"end": 5921,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5894,
											"end": 5921,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "194"
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5886,
											"end": 5962,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5886,
											"end": 5962,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5886,
											"end": 5962,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7262,
											"end": 7264,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5886,
											"end": 5962,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7244,
											"end": 7265,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7301,
											"end": 7303,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7274,
											"end": 7304,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7340,
											"end": 7374,
											"name": "PUSH",
											"source": 21,
											"value": "455243323020616464726573732063616E6E6F74206265207A65726F20616464"
										},
										{
											"begin": 7320,
											"end": 7338,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7320,
											"end": 7338,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7320,
											"end": 7338,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7313,
											"end": 7375,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "PUSH",
											"source": 21,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7391,
											"end": 7409,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 7391,
											"end": 7409,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7391,
											"end": 7409,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7384,
											"end": 7418,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 7060,
											"end": 7460,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "194"
										},
										{
											"begin": 5886,
											"end": 5962,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 5978,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 5973,
											"end": 6002,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"modifierDepth": 3,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5973,
											"end": 6002,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "PUSH",
											"source": 20,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6056,
											"end": 6060,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6047,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "70A08231"
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "STATICCALL",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "199"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "199"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "200"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "201"
										},
										{
											"begin": 6032,
											"end": 6062,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "200"
										},
										{
											"begin": 6032,
											"end": 6062,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6021,
											"end": 6028,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6021,
											"end": 6062,
											"modifierDepth": 3,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 6021,
											"end": 6062,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "202"
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6086,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6013,
											"end": 6086,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6013,
											"end": 6086,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6013,
											"end": 6086,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7838,
											"end": 7859,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7895,
											"end": 7897,
											"name": "PUSH",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7868,
											"end": 7898,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7934,
											"end": 7955,
											"name": "PUSH",
											"source": 21,
											"value": "496E73756666696369656E742066756E64732E00000000000000000000000000"
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7907,
											"end": 7956,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 7654,
											"end": 7997,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "202"
										},
										{
											"begin": 6013,
											"end": 6086,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6102,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 6097,
											"end": 6102,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6133,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6097,
											"end": 6133,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6112,
											"end": 6122,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6097,
											"end": 6133,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 188,
											"end": 262,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 296,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6097,
											"end": 6102,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6102,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6102,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6102,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6102,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6111,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB"
										},
										{
											"begin": 6097,
											"end": 6111,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "207"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6133,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "207"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "208"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 6097,
											"end": 6133,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "208"
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6133,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5708,
											"end": 6141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "tag",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7710,
											"end": 7714,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7736,
											"end": 7737,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "tag",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7744,
											"end": 7756,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7739,
											"end": 7740,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7739,
											"end": 7766,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "217"
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7784,
											"end": 7810,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7813,
											"end": 7821,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7850,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7850,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7850,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7850,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7889,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7889,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "220"
										},
										{
											"begin": 7839,
											"end": 7889,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7889,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7881,
											"end": 7889,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7862,
											"end": 7869,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7862,
											"end": 7877,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7862,
											"end": 7877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7862,
											"end": 7877,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 7862,
											"end": 7889,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7889,
											"name": "tag",
											"source": 20,
											"value": "220"
										},
										{
											"begin": 7839,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7835,
											"end": 7926,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7835,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "221"
										},
										{
											"begin": 7835,
											"end": 7926,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7913,
											"end": 7914,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7906,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 7906,
											"end": 7914,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7835,
											"end": 7926,
											"name": "tag",
											"source": 20,
											"value": "221"
										},
										{
											"begin": 7835,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 7768,
											"end": 7771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "tag",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "tag",
											"source": 20,
											"value": "217"
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7722,
											"end": 7933,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7946,
											"end": 7947,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7947,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7939,
											"end": 7947,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "tag",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7633,
											"end": 7953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "tag",
											"source": 20,
											"value": "85"
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1542,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5151,
											"end": 5177,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5180,
											"end": 5188,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 5180,
											"end": 5193,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5212,
											"end": 5252,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 5212,
											"end": 5252,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5223,
											"end": 5226,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5223,
											"end": 5252,
											"modifierDepth": 3,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 5223,
											"end": 5252,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5212,
											"end": 5252,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 5212,
											"end": 5252,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "234"
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5205,
											"end": 5207,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "PUSH",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5217,
											"end": 5247,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5283,
											"end": 5303,
											"name": "PUSH",
											"source": 21,
											"value": "6974656D20646F65736E27742065786973740000000000000000000000000000"
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5256,
											"end": 5304,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5003,
											"end": 5345,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "234"
										},
										{
											"begin": 5204,
											"end": 5275,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5294,
											"end": 5309,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5294,
											"end": 5309,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5294,
											"end": 5309,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5294,
											"end": 5309,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 5294,
											"end": 5309,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 5294,
											"end": 5309,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5294,
											"end": 5309,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 5294,
											"end": 5309,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 5294,
											"end": 5309,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5294,
											"end": 5318,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5294,
											"end": 5318,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5313,
											"end": 5318,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5318,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5343,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5286,
											"end": 5343,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5286,
											"end": 5343,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5286,
											"end": 5343,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5630,
											"end": 5652,
											"name": "PUSH",
											"source": 21,
											"value": "6974656D206973206E6F7420666F722073656C6C000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5603,
											"end": 5653,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5350,
											"end": 5694,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 5286,
											"end": 5343,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5376,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5362,
											"end": 5376,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5376,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5376,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5387,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5362,
											"end": 5387,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5387,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5387,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5376,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5376,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5362,
											"end": 5387,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "238"
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5419,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5419,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5354,
											"end": 5419,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5419,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "PUSH",
											"source": 21,
											"value": "1B"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5913,
											"end": 5943,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5979,
											"end": 6008,
											"name": "PUSH",
											"source": 21,
											"value": "596F752063616E6E6F742062757920796F7572206F776E206E66740000000000"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5952,
											"end": 6009,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5699,
											"end": 6050,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "238"
										},
										{
											"begin": 5354,
											"end": 5419,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5438,
											"end": 5449,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5438,
											"end": 5449,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 5438,
											"end": 5457,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5438,
											"end": 5457,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5438,
											"end": 5457,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5438,
											"end": 5457,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5438,
											"end": 5449,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5438,
											"end": 5449,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5438,
											"end": 5457,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "240"
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5499,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5430,
											"end": 5499,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5430,
											"end": 5499,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8593,
											"end": 8595,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5430,
											"end": 5499,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8575,
											"end": 8596,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8632,
											"end": 8634,
											"name": "PUSH",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 8612,
											"end": 8630,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8612,
											"end": 8630,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8612,
											"end": 8630,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8605,
											"end": 8635,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8671,
											"end": 8705,
											"name": "PUSH",
											"source": 21,
											"value": "6974656D206973206E6F74207468652073616D6520636F6E7472616374206164"
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8644,
											"end": 8706,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8742,
											"end": 8749,
											"name": "PUSH",
											"source": 21,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8715,
											"end": 8750,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8767,
											"end": 8786,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 8767,
											"end": 8786,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 8391,
											"end": 8792,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "tag",
											"source": 20,
											"value": "240"
										},
										{
											"begin": 5430,
											"end": 5499,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5510,
											"end": 5524,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5510,
											"end": 5524,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5510,
											"end": 5524,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5510,
											"end": 5534,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5510,
											"end": 5534,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 5545,
											"end": 5568,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000"
										},
										{
											"begin": 5545,
											"end": 5568,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5510,
											"end": 5534,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5510,
											"end": 5534,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5510,
											"end": 5534,
											"modifierDepth": 3,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5545,
											"end": 5568,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5545,
											"end": 5568,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5545,
											"end": 5568,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 5545,
											"end": 5568,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5545,
											"end": 5568,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5545,
											"end": 5568,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5607,
											"end": 5622,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5607,
											"end": 5622,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5607,
											"end": 5622,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 5624,
											"end": 5637,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 5624,
											"end": 5637,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5624,
											"end": 5637,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5624,
											"end": 5637,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5638,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5584,
											"end": 5638,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6699,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "FC2E01EC8C4C53E02EE1FA8816C1692687966E0DAEF195BE5B64C88D8E58E3EE"
										},
										{
											"begin": 5584,
											"end": 5638,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 6512,
											"end": 6530,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5584,
											"end": 5638,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 5140,
											"end": 5646,
											"modifierDepth": 3,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5037,
											"end": 5646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "tag",
											"source": 20,
											"value": "88"
										},
										{
											"begin": 2594,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1515,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1527,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1507,
											"end": 1527,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1527,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2661,
											"end": 2665,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2661,
											"end": 2665,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1527,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1507,
											"end": 1527,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1493,
											"end": 1503,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1493,
											"end": 1527,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "246"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "tag",
											"source": 20,
											"value": "246"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1563,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1572,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1572,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1572,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1555,
											"end": 1572,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1539,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 1539,
											"end": 1573,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1539,
											"end": 1573,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1573,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1539,
											"end": 1573,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1539,
											"end": 1573,
											"name": "tag",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 1539,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2683,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2725,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2712,
											"end": 2725,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2712,
											"end": 2725,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2712,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 2712,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2725,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2712,
											"end": 2725,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2725,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2712,
											"end": 2725,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 2744,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2758,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2744,
											"end": 2758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2744,
											"end": 2758,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2744,
											"end": 2758,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2762,
											"end": 2772,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2794,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2736,
											"end": 2794,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2736,
											"end": 2794,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8999,
											"end": 9001,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 2794,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8981,
											"end": 9002,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9011,
											"end": 9041,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9077,
											"end": 9096,
											"name": "PUSH",
											"source": 21,
											"value": "6973206E6F74207468652073656C6C6572000000000000000000000000000000"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9050,
											"end": 9097,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 8797,
											"end": 9138,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 2736,
											"end": 2794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2813,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2813,
											"end": 2828,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2813,
											"end": 2828,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2813,
											"end": 2828,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2813,
											"end": 2828,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 2813,
											"end": 2828,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2813,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 2813,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 2813,
											"end": 2828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2813,
											"end": 2836,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2813,
											"end": 2836,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2832,
											"end": 2836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 2813,
											"end": 2836,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2856,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2805,
											"end": 2856,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2856,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9345,
											"end": 9347,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2805,
											"end": 2856,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9327,
											"end": 9348,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9384,
											"end": 9386,
											"name": "PUSH",
											"source": 21,
											"value": "F"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9357,
											"end": 9387,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9423,
											"end": 9440,
											"name": "PUSH",
											"source": 21,
											"value": "6973206E6F74206C697374656E65640000000000000000000000000000000000"
										},
										{
											"begin": 9403,
											"end": 9421,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9403,
											"end": 9421,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9403,
											"end": 9421,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9396,
											"end": 9441,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9458,
											"end": 9476,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9458,
											"end": 9476,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 9143,
											"end": 9482,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 2805,
											"end": 2856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2912,
											"end": 2927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 2912,
											"end": 2927,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2912,
											"end": 2927,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2912,
											"end": 2927,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 2928,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2867,
											"end": 2928,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2893,
											"end": 2897,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2867,
											"end": 2928,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9750,
											"end": 9784,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2900,
											"end": 2910,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9793,
											"end": 9836,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2867,
											"end": 2884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2867,
											"end": 2884,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2884,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD"
										},
										{
											"begin": 2867,
											"end": 2884,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "257"
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2928,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "257"
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "259"
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2928,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "259"
										},
										{
											"begin": 2867,
											"end": 2928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2939,
											"end": 2954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 2962,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 2962,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 2962,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 2962,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 2962,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2594,
											"end": 2970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "tag",
											"source": 20,
											"value": "92"
										},
										{
											"begin": 6181,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 6259,
											"end": 6288,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 6181,
											"end": 6294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "tag",
											"source": 20,
											"value": "95"
										},
										{
											"begin": 3044,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3165,
											"end": 3173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 3165,
											"end": 3178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3197,
											"end": 3237,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "268"
										},
										{
											"begin": 3197,
											"end": 3237,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3215,
											"end": 3227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3211,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3208,
											"end": 3237,
											"modifierDepth": 2,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 3208,
											"end": 3237,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3197,
											"end": 3237,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "268"
										},
										{
											"begin": 3197,
											"end": 3237,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3189,
											"end": 3260,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3189,
											"end": 3260,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3189,
											"end": 3260,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5205,
											"end": 5207,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3189,
											"end": 3260,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5187,
											"end": 5208,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "PUSH",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5217,
											"end": 5247,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5283,
											"end": 5303,
											"name": "PUSH",
											"source": 21,
											"value": "6974656D20646F65736E27742065786973740000000000000000000000000000"
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5263,
											"end": 5281,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5256,
											"end": 5304,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5003,
											"end": 5345,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 3189,
											"end": 3260,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3294,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3294,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3294,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3294,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 3279,
											"end": 3294,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3303,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3279,
											"end": 3303,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3298,
											"end": 3303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3303,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3328,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3271,
											"end": 3328,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3271,
											"end": 3328,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3271,
											"end": 3328,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5630,
											"end": 5652,
											"name": "PUSH",
											"source": 21,
											"value": "6974656D206973206E6F7420666F722073656C6C000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5603,
											"end": 5653,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5350,
											"end": 5694,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 3271,
											"end": 3328,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3347,
											"end": 3361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3347,
											"end": 3361,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3365,
											"end": 3375,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 3347,
											"end": 3375,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3347,
											"end": 3361,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3347,
											"end": 3375,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3407,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3339,
											"end": 3407,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3407,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3339,
											"end": 3407,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "PUSH",
											"source": 21,
											"value": "1B"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5913,
											"end": 5943,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5979,
											"end": 6008,
											"name": "PUSH",
											"source": 21,
											"value": "596F752063616E6E6F742062757920796F7572206F776E206E66740000000000"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5952,
											"end": 6009,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5699,
											"end": 6050,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 3339,
											"end": 3407,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3437,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3437,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3437,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3437,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3426,
											"end": 3445,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3418,
											"end": 3487,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3418,
											"end": 3487,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3418,
											"end": 3487,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8593,
											"end": 8595,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3418,
											"end": 3487,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8575,
											"end": 8596,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8632,
											"end": 8634,
											"name": "PUSH",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 8612,
											"end": 8630,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8612,
											"end": 8630,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8612,
											"end": 8630,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8605,
											"end": 8635,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8671,
											"end": 8705,
											"name": "PUSH",
											"source": 21,
											"value": "6974656D206973206E6F74207468652073616D6520636F6E7472616374206164"
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8644,
											"end": 8706,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8742,
											"end": 8749,
											"name": "PUSH",
											"source": 21,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8715,
											"end": 8750,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8767,
											"end": 8786,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 8767,
											"end": 8786,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 8391,
											"end": 8792,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 3418,
											"end": 3487,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3519,
											"end": 3526,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3519,
											"end": 3532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 3519,
											"end": 3532,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3519,
											"end": 3532,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3506,
											"end": 3515,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 3506,
											"end": 3532,
											"modifierDepth": 2,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 3506,
											"end": 3532,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3576,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3498,
											"end": 3576,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3498,
											"end": 3576,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10092,
											"end": 10094,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3576,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10074,
											"end": 10095,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10131,
											"end": 10133,
											"name": "PUSH",
											"source": 21,
											"value": "27"
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10104,
											"end": 10134,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10170,
											"end": 10204,
											"name": "PUSH",
											"source": 21,
											"value": "6E6F7420656E6F7567682062616C616E636520666F722074686973207472616E"
										},
										{
											"begin": 10150,
											"end": 10168,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 10150,
											"end": 10168,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10150,
											"end": 10168,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10143,
											"end": 10205,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10241,
											"end": 10250,
											"name": "PUSH",
											"source": 21,
											"value": "73616374696F6E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10214,
											"end": 10251,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 9890,
											"end": 10293,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 3498,
											"end": 3576,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3602,
											"end": 3615,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3602,
											"end": 3615,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3587,
											"end": 3599,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 3587,
											"end": 3615,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3587,
											"end": 3615,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3587,
											"end": 3615,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3661,
											"end": 3681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3644,
											"end": 3693,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 3644,
											"end": 3693,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3687,
											"end": 3692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "2710"
										},
										{
											"begin": 3687,
											"end": 3692,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3644,
											"end": 3682,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 3644,
											"end": 3682,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3644,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 3644,
											"end": 3682,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3644,
											"end": 3693,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 3644,
											"end": 3693,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3626,
											"end": 3641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 3626,
											"end": 3693,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3626,
											"end": 3693,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3626,
											"end": 3693,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3719,
											"end": 3731,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 3719,
											"end": 3731,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3719,
											"end": 3752,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 3719,
											"end": 3752,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3719,
											"end": 3735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "163"
										},
										{
											"begin": 3719,
											"end": 3752,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3719,
											"end": 3752,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 3719,
											"end": 3752,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3704,
											"end": 3716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 3704,
											"end": 3752,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3704,
											"end": 3752,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3704,
											"end": 3752,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3778,
											"end": 3790,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3778,
											"end": 3790,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3768,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 3763,
											"end": 3791,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3791,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3791,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3778,
											"end": 3790,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3778,
											"end": 3790,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3791,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3791,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 2,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3791,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3791,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3763,
											"end": 3791,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3817,
											"end": 3831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3817,
											"end": 3831,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3817,
											"end": 3831,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3817,
											"end": 3831,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3817,
											"end": 3831,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3817,
											"end": 3831,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 3817,
											"end": 3831,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 188,
											"end": 262,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 296,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 278,
											"end": 296,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 271,
											"end": 305,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3802,
											"end": 3816,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB"
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 161,
											"end": 179,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 161,
											"end": 179,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 3802,
											"end": 3846,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 3802,
											"end": 3846,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 3919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3904,
											"end": 3919,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3904,
											"end": 3919,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3904,
											"end": 3919,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3859,
											"end": 3920,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3859,
											"end": 3920,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3885,
											"end": 3889,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3859,
											"end": 3920,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9750,
											"end": 9784,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3892,
											"end": 3902,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9793,
											"end": 9836,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3859,
											"end": 3876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3859,
											"end": 3876,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3876,
											"modifierDepth": 2,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3876,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD"
										},
										{
											"begin": 3859,
											"end": 3876,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3920,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 3859,
											"end": 3920,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3931,
											"end": 3945,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3931,
											"end": 3945,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3931,
											"end": 3945,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3931,
											"end": 3958,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3931,
											"end": 3958,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000"
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3948,
											"end": 3958,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3969,
											"end": 3992,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4027,
											"end": 4042,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4044,
											"end": 4056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4008,
											"end": 4057,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4057,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6699,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "C0790EB4899023169BE51DD7074A99A15959464F9A0E6B19767D8D61539B8726"
										},
										{
											"begin": 4008,
											"end": 4057,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 6512,
											"end": 6530,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4057,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 3125,
											"end": 4065,
											"modifierDepth": 2,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "tag",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6654,
											"end": 6658,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6678,
											"end": 6700,
											"name": "tag",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 6678,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6671,
											"end": 6700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6671,
											"end": 6700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6605,
											"end": 6708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "tag",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6969,
											"end": 6976,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6976,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7139,
											"end": 7140,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7130,
											"end": 7403,
											"name": "tag",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 7130,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7147,
											"end": 7159,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7142,
											"end": 7169,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 7130,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 7130,
											"end": 7403,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7199,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7202,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7206,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7214,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7191,
											"end": 7214,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7214,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7214,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7206,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7206,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7214,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7249,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7249,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "301"
										},
										{
											"begin": 7191,
											"end": 7249,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7226,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7229,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7237,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7218,
											"end": 7237,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7237,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7249,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7218,
											"end": 7249,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7249,
											"name": "tag",
											"source": 20,
											"value": "301"
										},
										{
											"begin": 7191,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7272,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7272,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 7191,
											"end": 7272,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7261,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7191,
											"end": 7272,
											"name": "tag",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 7191,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7187,
											"end": 7396,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7187,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "303"
										},
										{
											"begin": 7187,
											"end": 7396,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7297,
											"end": 7301,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7361,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 7361,
											"end": 7366,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7187,
											"end": 7396,
											"name": "tag",
											"source": 20,
											"value": "303"
										},
										{
											"begin": 7187,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 7171,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "tag",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7130,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 7130,
											"end": 7403,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7130,
											"end": 7403,
											"name": "tag",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 7130,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7500,
											"end": 7505,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7495,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "305"
										},
										{
											"begin": 7495,
											"end": 7534,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7525,
											"end": 7526,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7518,
											"end": 7526,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7518,
											"end": 7526,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7518,
											"end": 7526,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7518,
											"end": 7526,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7518,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 7518,
											"end": 7526,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7495,
											"end": 7534,
											"name": "tag",
											"source": 20,
											"value": "305"
										},
										{
											"begin": 7495,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7549,
											"end": 7550,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 6896,
											"end": 7594,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6896,
											"end": 7594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "tag",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "6352211E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1897,
											"end": 1907,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1897,
											"end": 1907,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1883,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1883,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1883,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1883,
											"name": "PUSH",
											"source": 20,
											"value": "6352211E"
										},
										{
											"begin": 1871,
											"end": 1883,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "STATICCALL",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "tag",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 1871,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "tag",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "312"
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10756,
											"end": 10758,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10738,
											"end": 10759,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10795,
											"end": 10797,
											"name": "PUSH",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 10775,
											"end": 10793,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 10775,
											"end": 10793,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10775,
											"end": 10793,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10768,
											"end": 10798,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10834,
											"end": 10857,
											"name": "PUSH",
											"source": 21,
											"value": "596F7520617265206E6F7420746865206F776E65720000000000000000000000"
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10807,
											"end": 10858,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10875,
											"end": 10893,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 10875,
											"end": 10893,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 10554,
											"end": 10899,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "tag",
											"source": 20,
											"value": "312"
										},
										{
											"begin": 1863,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1957,
											"end": 1958,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11106,
											"end": 11108,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11088,
											"end": 11109,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11145,
											"end": 11147,
											"name": "PUSH",
											"source": 21,
											"value": "27"
										},
										{
											"begin": 11125,
											"end": 11143,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 11125,
											"end": 11143,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11125,
											"end": 11143,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11118,
											"end": 11148,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11184,
											"end": 11218,
											"name": "PUSH",
											"source": 21,
											"value": "4E46544D61726B65743A207072696365206D7573742062652067726561746572"
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11157,
											"end": 11219,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11255,
											"end": 11264,
											"name": "PUSH",
											"source": 21,
											"value": "207468616E203000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11235,
											"end": 11253,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11228,
											"end": 11265,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11282,
											"end": 11301,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 11282,
											"end": 11301,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 10904,
											"end": 11307,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "tag",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 1940,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2009,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 2009,
											"end": 2021,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2009,
											"end": 2033,
											"name": "tag",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 2009,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2096,
											"end": 2100,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2111,
											"end": 2119,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2171,
											"end": 2181,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2193,
											"end": 2198,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2075,
											"end": 2205,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2048,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2071,
											"name": "tag",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 2049,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000"
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2205,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2249,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 2241,
											"end": 2249,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2250,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 2250,
											"end": 2272,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2272,
											"name": "tag",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 2250,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2298,
											"end": 2308,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9750,
											"end": 9784,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2318,
											"end": 2322,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9793,
											"end": 9836,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9845,
											"end": 9879,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD"
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "tag",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "325"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "tag",
											"source": 20,
											"value": "325"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2356,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2341,
											"end": 2356,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2341,
											"end": 2356,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2341,
											"end": 2356,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "PUSH",
											"source": 20,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "PUSH",
											"source": 20,
											"value": "21149A5778DDC1AFCA837B00FD70C0FC0A6D1D25D1BD15BFF4A84BAB1EEB9A92"
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2393,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 2383,
											"end": 2393,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2395,
											"end": 2403,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2395,
											"end": 2403,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "tag",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6569,
											"end": 6611,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6557,
											"end": 6612,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6557,
											"end": 6612,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 6557,
											"end": 6612,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6539,
											"end": 6613,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6699,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 6512,
											"end": 6530,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "LOG1",
											"source": 20
										},
										{
											"begin": 1856,
											"end": 2432,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1765,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2354,
											"end": 2580,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2354,
											"end": 2580,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2572,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2573,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2518,
											"end": 2573,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2518,
											"end": 2573,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2488,
											"end": 2490,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11514,
											"end": 11516,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11496,
											"end": 11517,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11553,
											"end": 11555,
											"name": "PUSH",
											"source": 21,
											"value": "10"
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11526,
											"end": 11556,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11592,
											"end": 11610,
											"name": "PUSH",
											"source": 21,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11565,
											"end": 11611,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11628,
											"end": 11646,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 11628,
											"end": 11646,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 11312,
											"end": 11652,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11859,
											"end": 11861,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11841,
											"end": 11862,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11898,
											"end": 11900,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11871,
											"end": 11901,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11937,
											"end": 11970,
											"name": "PUSH",
											"source": 21,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11910,
											"end": 11971,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11988,
											"end": 12006,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 11988,
											"end": 12006,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 11657,
											"end": 12012,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12804,
											"end": 12806,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12786,
											"end": 12807,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12843,
											"end": 12845,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12816,
											"end": 12846,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12882,
											"end": 12904,
											"name": "PUSH",
											"source": 21,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12855,
											"end": 12905,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12922,
											"end": 12940,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 12922,
											"end": 12940,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 12602,
											"end": 12946,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 316,
											"end": 496,
											"name": "tag",
											"source": 21,
											"value": "38"
										},
										{
											"begin": 316,
											"end": 496,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 375,
											"end": 381,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 425,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 407,
											"end": 414,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 403,
											"end": 426,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 399,
											"end": 431,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 396,
											"end": 448,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 396,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "385"
										},
										{
											"begin": 396,
											"end": 448,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 434,
											"end": 446,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 396,
											"end": 448,
											"name": "tag",
											"source": 21,
											"value": "385"
										},
										{
											"begin": 396,
											"end": 448,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 490,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 467,
											"end": 490,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 316,
											"end": 496,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 316,
											"end": 496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1540,
											"end": 1694,
											"name": "tag",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 1540,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1624,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1615,
											"end": 1669,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1605,
											"end": 1670,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1595,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 1595,
											"end": 1688,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1682,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1674,
											"end": 1686,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1699,
											"end": 2014,
											"name": "tag",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 1699,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1828,
											"end": 1830,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1807,
											"end": 1814,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1803,
											"end": 1826,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1796,
											"end": 1848,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1796,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "392"
										},
										{
											"begin": 1796,
											"end": 1848,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1844,
											"end": 1845,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1834,
											"end": 1846,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1796,
											"end": 1848,
											"name": "tag",
											"source": 21,
											"value": "392"
										},
										{
											"begin": 1796,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 1889,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1867,
											"end": 1890,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1940,
											"end": 1942,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1912,
											"end": 1944,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1953,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "393"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1953,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 1953,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1953,
											"end": 1984,
											"name": "tag",
											"source": 21,
											"value": "393"
										},
										{
											"begin": 1953,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1993,
											"end": 2008,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1993,
											"end": 2008,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1993,
											"end": 2008,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1699,
											"end": 2014,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1699,
											"end": 2014,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1699,
											"end": 2014,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1699,
											"end": 2014,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1699,
											"end": 2014,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1699,
											"end": 2014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2019,
											"end": 2349,
											"name": "tag",
											"source": 21,
											"value": "73"
										},
										{
											"begin": 2019,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2160,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2142,
											"end": 2149,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2131,
											"end": 2183,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2131,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "395"
										},
										{
											"begin": 2131,
											"end": 2183,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2169,
											"end": 2181,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2131,
											"end": 2183,
											"name": "tag",
											"source": 21,
											"value": "395"
										},
										{
											"begin": 2131,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2237,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "396"
										},
										{
											"begin": 2262,
											"end": 2267,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2237,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 2237,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2237,
											"end": 2268,
											"name": "tag",
											"source": 21,
											"value": "396"
										},
										{
											"begin": 2237,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2287,
											"end": 2292,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 2339,
											"end": 2341,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2342,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2324,
											"end": 2342,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2324,
											"end": 2342,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2324,
											"end": 2342,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2311,
											"end": 2343,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2311,
											"end": 2343,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2019,
											"end": 2349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2585,
											"end": 3056,
											"name": "tag",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 2585,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2677,
											"end": 2683,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2748,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2734,
											"end": 2743,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2725,
											"end": 2732,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2721,
											"end": 2744,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2717,
											"end": 2749,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2714,
											"end": 2766,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2714,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "399"
										},
										{
											"begin": 2714,
											"end": 2766,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2760,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2752,
											"end": 2764,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2714,
											"end": 2766,
											"name": "tag",
											"source": 21,
											"value": "399"
										},
										{
											"begin": 2714,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2801,
											"end": 2810,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2788,
											"end": 2811,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2820,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "400"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2820,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 2820,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2820,
											"end": 2851,
											"name": "tag",
											"source": 21,
											"value": "400"
										},
										{
											"begin": 2820,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2870,
											"end": 2875,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2907,
											"end": 2925,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 2981,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2963,
											"end": 2981,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2950,
											"end": 2982,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2991,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "401"
										},
										{
											"begin": 2950,
											"end": 2982,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2991,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 2991,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2991,
											"end": 3024,
											"name": "tag",
											"source": 21,
											"value": "401"
										},
										{
											"begin": 2991,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3043,
											"end": 3050,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2585,
											"end": 3056,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2585,
											"end": 3056,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2585,
											"end": 3056,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2585,
											"end": 3056,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2585,
											"end": 3056,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2585,
											"end": 3056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3306,
											"end": 3846,
											"name": "tag",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 3306,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3421,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3484,
											"end": 3487,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3463,
											"end": 3470,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 3459,
											"end": 3482,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3452,
											"end": 3505,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3452,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "404"
										},
										{
											"begin": 3452,
											"end": 3505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3491,
											"end": 3503,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3452,
											"end": 3505,
											"name": "tag",
											"source": 21,
											"value": "404"
										},
										{
											"begin": 3452,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3527,
											"end": 3550,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3559,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "405"
										},
										{
											"begin": 3584,
											"end": 3589,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3559,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 3559,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3559,
											"end": 3590,
											"name": "tag",
											"source": 21,
											"value": "405"
										},
										{
											"begin": 3559,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3663,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3633,
											"end": 3665,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3633,
											"end": 3665,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3715,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3697,
											"end": 3715,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3684,
											"end": 3716,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3684,
											"end": 3716,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3781,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "406"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3781,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 3781,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3781,
											"end": 3814,
											"name": "tag",
											"source": 21,
											"value": "406"
										},
										{
											"begin": 3781,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3306,
											"end": 3846,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3306,
											"end": 3846,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 3306,
											"end": 3846,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3306,
											"end": 3846,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3846,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3306,
											"end": 3846,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4751,
											"end": 4998,
											"name": "tag",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 4751,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4810,
											"end": 4816,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4863,
											"end": 4865,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4851,
											"end": 4860,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4842,
											"end": 4849,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4838,
											"end": 4861,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4834,
											"end": 4866,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4831,
											"end": 4883,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4831,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 4831,
											"end": 4883,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4879,
											"end": 4880,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4877,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4831,
											"end": 4883,
											"name": "tag",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 4831,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4918,
											"end": 4927,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4905,
											"end": 4928,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4937,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "358"
										},
										{
											"begin": 4962,
											"end": 4967,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4937,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 4937,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6055,
											"end": 6332,
											"name": "tag",
											"source": 21,
											"value": "168"
										},
										{
											"begin": 6055,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6177,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6154,
											"end": 6161,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6150,
											"end": 6173,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6146,
											"end": 6178,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6143,
											"end": 6195,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6143,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "416"
										},
										{
											"begin": 6143,
											"end": 6195,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6191,
											"end": 6192,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6181,
											"end": 6193,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6143,
											"end": 6195,
											"name": "tag",
											"source": 21,
											"value": "416"
										},
										{
											"begin": 6143,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6223,
											"end": 6232,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6217,
											"end": 6233,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 6276,
											"end": 6281,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6269,
											"end": 6282,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6262,
											"end": 6283,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6255,
											"end": 6260,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6252,
											"end": 6284,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 6242,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "358"
										},
										{
											"begin": 6242,
											"end": 6302,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6288,
											"end": 6300,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7465,
											"end": 7649,
											"name": "tag",
											"source": 21,
											"value": "201"
										},
										{
											"begin": 7465,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7535,
											"end": 7541,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7590,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7563,
											"end": 7586,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7559,
											"end": 7591,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7556,
											"end": 7608,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7556,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "422"
										},
										{
											"begin": 7556,
											"end": 7608,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7604,
											"end": 7605,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7594,
											"end": 7606,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7556,
											"end": 7608,
											"name": "tag",
											"source": 21,
											"value": "422"
										},
										{
											"begin": 7556,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7627,
											"end": 7643,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7627,
											"end": 7643,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7465,
											"end": 7649,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7465,
											"end": 7649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8002,
											"end": 8186,
											"name": "tag",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 8002,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8054,
											"end": 8131,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8051,
											"end": 8052,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8132,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8151,
											"end": 8155,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 8141,
											"end": 8156,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8175,
											"end": 8179,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8172,
											"end": 8173,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8180,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8191,
											"end": 8386,
											"name": "tag",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 8191,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8230,
											"end": 8233,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8327,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8254,
											"end": 8259,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8251,
											"end": 8328,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8248,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "427"
										},
										{
											"begin": 8248,
											"end": 8351,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "427"
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 8331,
											"end": 8349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "tag",
											"source": 21,
											"value": "427"
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8378,
											"end": 8379,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 8367,
											"end": 8380,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8367,
											"end": 8380,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8191,
											"end": 8386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10298,
											"end": 10549,
											"name": "tag",
											"source": 21,
											"value": "311"
										},
										{
											"begin": 10298,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10368,
											"end": 10374,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10409,
											"end": 10418,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10400,
											"end": 10407,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10396,
											"end": 10419,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 10392,
											"end": 10424,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 10389,
											"end": 10441,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10389,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 10389,
											"end": 10441,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10437,
											"end": 10438,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10434,
											"end": 10435,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10427,
											"end": 10439,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 10389,
											"end": 10441,
											"name": "tag",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 10389,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10463,
											"end": 10479,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10488,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "358"
										},
										{
											"begin": 10513,
											"end": 10518,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10488,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 10488,
											"end": 10519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12017,
											"end": 12185,
											"name": "tag",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 12017,
											"end": 12185,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12090,
											"end": 12099,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 12090,
											"end": 12099,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12090,
											"end": 12099,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 12121,
											"end": 12130,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12121,
											"end": 12130,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 12138,
											"end": 12153,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12138,
											"end": 12153,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12138,
											"end": 12153,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 12132,
											"end": 12154,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12132,
											"end": 12154,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 12118,
											"end": 12155,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 12108,
											"end": 12179,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 12108,
											"end": 12179,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 12159,
											"end": 12177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12190,
											"end": 12464,
											"name": "tag",
											"source": 21,
											"value": "362"
										},
										{
											"begin": 12190,
											"end": 12464,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12230,
											"end": 12231,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12256,
											"end": 12257,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12246,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "444"
										},
										{
											"begin": 12246,
											"end": 12435,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12291,
											"end": 12368,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12288,
											"end": 12289,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12281,
											"end": 12369,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12392,
											"end": 12396,
											"name": "PUSH",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 12389,
											"end": 12390,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12420,
											"end": 12424,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 12417,
											"end": 12418,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12410,
											"end": 12425,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 12246,
											"end": 12435,
											"name": "tag",
											"source": 21,
											"value": "444"
										},
										{
											"begin": 12246,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12449,
											"end": 12458,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 12449,
											"end": 12458,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12190,
											"end": 12464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12469,
											"end": 12597,
											"name": "tag",
											"source": 21,
											"value": "365"
										},
										{
											"begin": 12469,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12536,
											"end": 12545,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12536,
											"end": 12545,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12536,
											"end": 12545,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 12557,
											"end": 12568,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12557,
											"end": 12568,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12557,
											"end": 12568,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 12554,
											"end": 12591,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 12554,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 12554,
											"end": 12591,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12571,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 12571,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 12571,
											"end": 12589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ERC20()": "cc4aa204",
							"ERCNFT()": "df706cbc",
							"buyNFT(address,uint256)": "a82ba76f",
							"cancel(address,uint256)": "98590ef9",
							"getAllIdListed(address,uint256)": "8699fdf4",
							"getComissionPercentage()": "65a19c20",
							"getIdListed(address,uint256)": "cf02976f",
							"getListinglength()": "c85d5262",
							"getNFTListing(uint256)": "0ea59c4b",
							"listNFT(address,uint256,uint256,address)": "d68cdc52",
							"listings(uint256)": "de74e57b",
							"owner()": "8da5cb5b",
							"pauseMarketplace()": "3ec62279",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferNFT(uint256)": "249e10c5",
							"transferOrWithdraw(uint256,address)": "6ee4c120",
							"transferOwnership(address)": "f2fde38b",
							"unpauseMarketplace()": "21f67fbb",
							"updateComissionPercentage(uint256)": "9cefe029",
							"updateNFT(address,uint256,address)": "925a9953"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"NftBuy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"NftList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"transferToBuyer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateToBuyer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERCNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_Id\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_Id\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getAllIdListed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComissionPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getIdListed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListinglength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Id\",\"type\":\"uint256\"}],\"name\":\"getNFTListing\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ERC721\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"coin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"}],\"internalType\":\"struct GBMarketplace.NFTListing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_coin\",\"type\":\"address\"}],\"name\":\"listNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"coin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseMarketplace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"transferNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ERC20Address\",\"type\":\"address\"}],\"name\":\"transferOrWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseMarketplace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"updateComissionPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_Id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"updateNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"GBMarketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Marketplace.sol\":{\"keccak256\":\"0x08e4f7aae89c7e284e57589e2380fec2589df57d9df8419919585fe9130f5e2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3718982e07803f4ddbc1dd553d55199b54f9c59fac74144fe34b34b60f2310cc\",\"dweb:/ipfs/QmYWHzskLYAKb7xgn52KFapKnXVvHjguPo5cbU11VvAVv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 302,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 403,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 4162,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "ERC20",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)535"
							},
							{
								"astId": 4165,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "ERCNFT",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC721)1987"
							},
							{
								"astId": 4172,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "numOfListing",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(Counter)2314_storage"
							},
							{
								"astId": 4178,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "commissionPercentage",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 4180,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "comissionAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 4182,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "sellerAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 4184,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "amountListed",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 4241,
								"contract": "contracts/Marketplace.sol:GBMarketplace",
								"label": "listings",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(NFTListing)4198_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC721)1870": {
								"encoding": "inplace",
								"label": "contract ERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)535": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)1987": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(NFTListing)4198_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct GBMarketplace.NFTListing)",
								"numberOfBytes": "32",
								"value": "t_struct(NFTListing)4198_storage"
							},
							"t_struct(Counter)2314_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 2313,
										"contract": "contracts/Marketplace.sol:GBMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(NFTListing)4198_storage": {
								"encoding": "inplace",
								"label": "struct GBMarketplace.NFTListing",
								"members": [
									{
										"astId": 4187,
										"contract": "contracts/Marketplace.sol:GBMarketplace",
										"label": "nft",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(ERC721)1870"
									},
									{
										"astId": 4189,
										"contract": "contracts/Marketplace.sol:GBMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 4191,
										"contract": "contracts/Marketplace.sol:GBMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 4193,
										"contract": "contracts/Marketplace.sol:GBMarketplace",
										"label": "coin",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 4195,
										"contract": "contracts/Marketplace.sol:GBMarketplace",
										"label": "seller",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 4197,
										"contract": "contracts/Marketplace.sol:GBMarketplace",
										"label": "forSale",
										"offset": 20,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2308
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 2309,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2308,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2308,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								2308
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2298,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							2308
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 2309,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2308,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								2308
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 457,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 417,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 422,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 427,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 457,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 457,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 452,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 457,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							535
						]
					},
					"id": 536,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 460,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 535,
							"linearizedBaseContracts": [
								535
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 469,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 478,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 535,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 535,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 535,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 535,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 535,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 535,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 536,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								469,
								478
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							571
						]
					},
					"id": 572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 537,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 538,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 571,
							"linearizedBaseContracts": [
								571
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3045:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3070:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3093:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 548,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3155:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 552,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:5"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:5"
									},
									"scope": 571,
									"src": "2997:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3501:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:5"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:5"
									},
									"scope": 571,
									"src": "3485:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:5"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3791:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 567,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:5"
									},
									"scope": 571,
									"src": "3740:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 572,
							"src": "2113:1689:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2286
						],
						"IERC20": [
							535
						],
						"IERC20Permit": [
							571
						],
						"SafeERC20": [
							861
						]
					},
					"id": 862,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 575,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 862,
							"sourceUnit": 536,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 574,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 535,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 577,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 862,
							"sourceUnit": 572,
							"src": "179:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 576,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 571,
										"src": "187:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 579,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 862,
							"sourceUnit": 2287,
							"src": "240:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 578,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2286,
										"src": "248:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 580,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 861,
							"linearizedBaseContracts": [
								861
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 583,
									"libraryName": {
										"id": 581,
										"name": "Address",
										"nameLocations": [
											"781:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2286,
										"src": "781:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:6",
									"typeName": {
										"id": 582,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:6",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 588,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:6"
									},
									"src": "876:46:6"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 597,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1060:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1086:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:6"
									},
									"src": "1004:109:6"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "1375:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 609,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "1405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 612,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "1427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$535",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 502,
																	"src": "1427:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 614,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "1444:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "1448:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 610,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 608,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1385:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$535_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:6"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$535",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 599,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "1325:6:6"
													},
													"referencedDeclaration": 535,
													"src": "1325:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1339:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1351:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:6"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:6"
									},
									"scope": 861,
									"src": "1303:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "1792:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "1822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 638,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "1844:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$535",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 534,
																	"src": "1844:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 640,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 627,
																			"src": "1865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 641,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "1871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 643,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 636,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 634,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1802:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$535_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:6"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$535",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 624,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 623,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "1728:6:6"
													},
													"referencedDeclaration": 535,
													"src": "1728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1768:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:6"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:6"
									},
									"scope": 861,
									"src": "1702:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "2167:139:6",
										"statements": [
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "2177:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 665,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$861",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$861",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 663,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "2231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 661,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "2200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2262:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 672,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 673,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "2278:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 674,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "2293:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 670,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "2249:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$535_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:6"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2112:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$535",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "2112:6:6"
													},
													"referencedDeclaration": 535,
													"src": "2112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2126:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:6"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:6"
									},
									"scope": 861,
									"src": "2081:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "2607:370:6",
										"statements": [
											{
												"id": 720,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:6",
												"statements": [
													{
														"assignments": [
															691
														],
														"declarations": [
															{
																"constant": false,
																"id": 691,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 720,
																"src": "2641:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 690,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 700,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 696,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$861",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$861",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 694,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 698,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 692,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "2668:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$535",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 512,
																"src": "2668:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "2725:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 702,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "2744:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 711,
														"nodeType": "IfStatement",
														"src": "2721:160:6",
														"trueBody": {
															"id": 710,
															"nodeType": "Block",
															"src": "2763:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 705,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 685,
																				"src": "2821:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 706,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 691,
																				"src": "2830:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 707,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 687,
																				"src": "2848:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 704,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 597,
																			"src": "2788:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 709,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 713,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "2907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$535",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 714,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "2914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 715,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "2923:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 716,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "2942:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$535",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 712,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "2894:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$535_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 719,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2540:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$535",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 681,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "2540:6:6"
													},
													"referencedDeclaration": 535,
													"src": "2540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2554:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2571:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:6"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:6"
									},
									"scope": 861,
									"src": "2509:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "3373:303:6",
										"statements": [
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "3383:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 733,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 737,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3426:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$535",
																	"typeString": "contract IERC20"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 522,
															"src": "3426:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 739,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "3442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 740,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "3451:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 741,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 735,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:6"
											},
											{
												"condition": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 745,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$535",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 746,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "3505:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$535",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 744,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "3474:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$535_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 767,
												"nodeType": "IfStatement",
												"src": "3469:201:6",
												"trueBody": {
													"id": 766,
													"nodeType": "Block",
													"src": "3520:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 750,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "3554:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$535",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "3576:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$535",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 522,
																				"src": "3576:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 755,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 728,
																						"src": "3592:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 756,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 757,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 751,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$535",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 749,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "3534:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$535_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 760,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 762,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "3639:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$535",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 763,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "3646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$535",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 761,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "3619:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$535_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3318:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$535",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 724,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "3318:6:6"
													},
													"referencedDeclaration": 535,
													"src": "3318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3332:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:6"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 861,
									"src": "3296:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "4129:559:6",
										"statements": [
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 810,
														"src": "4478:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 778,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"id": 785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "4532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 782,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "4512:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$535",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$535",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 780,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2107,
														"src": "4504:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 788,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "4551:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 794,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "4589:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:6",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 797,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 792,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:6",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 809,
												"nodeType": "IfStatement",
												"src": "4547:135:6",
												"trueBody": {
													"id": 808,
													"nodeType": "Block",
													"src": "4610:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 804,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "4664:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$535",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$535",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 802,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 801,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "4631:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 807,
															"nodeType": "RevertStatement",
															"src": "4624:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "4088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$535",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 771,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "4088:6:6"
													},
													"referencedDeclaration": 535,
													"src": "4088:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "4102:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:6"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:6"
									},
									"scope": 861,
									"src": "4059:629:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "5278:489:6",
										"statements": [
											{
												"assignments": [
													823,
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "5574:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 822,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "5588:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 824,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 833,
												"initialValue": {
													"arguments": [
														{
															"id": 831,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "5635:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 828,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "5623:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$535",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$535",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 834,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "5657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 835,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "5669:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 841,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "5706:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 843,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 842,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 844,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 839,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 847,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 851,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 815,
																			"src": "5738:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$535",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$535",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 849,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 821,
												"id": 858,
												"nodeType": "Return",
												"src": "5650:110:6"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "5222:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$535",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 813,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "5222:6:6"
													},
													"referencedDeclaration": 535,
													"src": "5222:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "5236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:6"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "5272:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:6"
									},
									"scope": 861,
									"src": "5189:578:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 862,
							"src": "751:5018:6",
							"usedErrors": [
								588,
								597
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							2308
						],
						"ERC165": [
							2661
						],
						"ERC721": [
							1870
						],
						"IERC165": [
							2673
						],
						"IERC721": [
							1987
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							2033
						],
						"IERC721Receiver": [
							2005
						],
						"Strings": [
							2637
						]
					},
					"id": 1871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 863,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 865,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1988,
							"src": "133:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 864,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1987,
										"src": "141:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 2006,
							"src": "172:54:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 866,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2005,
										"src": "180:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 869,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 2034,
							"src": "227:65:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 868,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2033,
										"src": "235:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 2309,
							"src": "293:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 870,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2308,
										"src": "301:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 873,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 2638,
							"src": "342:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 872,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2637,
										"src": "350:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 2662,
							"src": "391:69:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 874,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2673,
										"src": "399:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 875,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2661,
										"src": "408:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 285,
							"src": "461:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 877,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 880,
										"name": "Context",
										"nameLocations": [
											"804:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2308,
										"src": "804:7:7"
									},
									"id": 881,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:7"
								},
								{
									"baseName": {
										"id": 882,
										"name": "ERC165",
										"nameLocations": [
											"813:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2661,
										"src": "813:6:7"
									},
									"id": 883,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:7"
								},
								{
									"baseName": {
										"id": 884,
										"name": "IERC721",
										"nameLocations": [
											"821:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1987,
										"src": "821:7:7"
									},
									"id": 885,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:7"
								},
								{
									"baseName": {
										"id": 886,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2033,
										"src": "830:15:7"
									},
									"id": 887,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:7"
								},
								{
									"baseName": {
										"id": 888,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:7"
									},
									"id": 889,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:7"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 879,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:7",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1870,
							"linearizedBaseContracts": [
								1870,
								237,
								2033,
								1987,
								2661,
								2673,
								2308
							],
							"name": "ERC721",
							"nameLocation": "794:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 892,
									"libraryName": {
										"id": 890,
										"name": "Strings",
										"nameLocations": [
											"873:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2637,
										"src": "873:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:7",
									"typeName": {
										"id": 891,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 894,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1870,
									"src": "917:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 893,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 896,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1870,
									"src": "964:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 895,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 900,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1870,
									"src": "993:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 899,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:7",
										"keyType": {
											"id": 897,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 898,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 904,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1870,
									"src": "1051:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 903,
										"keyName": "owner",
										"keyNameLocation": "1067:5:7",
										"keyType": {
											"id": 901,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 902,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 908,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1870,
									"src": "1109:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 907,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:7",
										"keyType": {
											"id": 905,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 906,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 914,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1870,
									"src": "1175:86:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 913,
										"keyName": "owner",
										"keyNameLocation": "1191:5:7",
										"keyType": {
											"id": 909,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 912,
											"keyName": "operator",
											"keyNameLocation": "1216:8:7",
											"keyType": {
												"id": 910,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 911,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "1437:57:7",
										"statements": [
											{
												"expression": {
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 922,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1447:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 923,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "1455:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:7"
											},
											{
												"expression": {
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 926,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "1470:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 927,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "1480:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:7"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:7",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 931,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1393:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 916,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1414:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:7"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:7"
									},
									"scope": 1870,
									"src": "1381:113:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2660,
										2672
									],
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "1669:192:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1698:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 944,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1987,
																			"src": "1718:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1987_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1987_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 943,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1987",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:7",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 948,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1754:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 950,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2033,
																			"src": "1774:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2033_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2033_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 949,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2033",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:7",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 957,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1842:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 955,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1870_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2660,
															"src": "1818:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 941,
												"id": 960,
												"nodeType": "Return",
												"src": "1679:175:7"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 938,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 936,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2661,
												"src": "1637:6:7"
											},
											{
												"id": 937,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2673,
												"src": "1645:7:7"
											}
										],
										"src": "1628:25:7"
									},
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1588:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 933,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:7"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1663:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:7"
									},
									"scope": 1870,
									"src": "1561:300:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1912
									],
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "1992:136:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "2006:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "2002:87:7",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "2027:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "2041:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 985,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "2105:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 987,
													"indexExpression": {
														"id": 986,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "2115:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 969,
												"id": 988,
												"nodeType": "Return",
												"src": "2098:23:7"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:7",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1939:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:7"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1983:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:7"
									},
									"scope": 1870,
									"src": "1920:208:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1920
									],
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "2257:46:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 999,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "2288:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 998,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "2274:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 997,
												"id": 1001,
												"nodeType": "Return",
												"src": "2267:29:7"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:7",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2202:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:7"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2248:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:7"
									},
									"scope": 1870,
									"src": "2185:118:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2018
									],
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "2425:29:7",
										"statements": [
											{
												"expression": {
													"id": 1009,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 894,
													"src": "2442:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1008,
												"id": 1010,
												"nodeType": "Return",
												"src": "2435:12:7"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:7",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:7"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "2410:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:7"
									},
									"scope": 1870,
									"src": "2365:89:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2024
									],
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "2580:31:7",
										"statements": [
											{
												"expression": {
													"id": 1018,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 896,
													"src": "2597:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1019,
												"nodeType": "Return",
												"src": "2590:14:7"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:7",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:7"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2565:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:7"
									},
									"scope": 1870,
									"src": "2518:93:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2032
									],
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "2756:176:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1030,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "2780:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1029,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "2766:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:7"
											},
											{
												"assignments": [
													1034
												],
												"declarations": [
													{
														"constant": false,
														"id": 1034,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "2799:21:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1033,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1035,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "2823:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:7"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1040,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "2856:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1038,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:7",
													"trueExpression": {
														"arguments": [
															{
																"id": 1048,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "2892:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "2901:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:7",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2450,
																	"src": "2901:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1045,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:7",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1028,
												"id": 1055,
												"nodeType": "Return",
												"src": "2843:82:7"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2695:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:7"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2741:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1026,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:7"
									},
									"scope": 1870,
									"src": "2677:255:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "3240:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1062,
												"id": 1064,
												"nodeType": "Return",
												"src": "3250:9:7"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:7",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:7"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3225:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:7"
									},
									"scope": 1870,
									"src": "3174:92:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1960
									],
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "3384:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "3403:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "3407:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1077,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "3416:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1074,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1673,
															1739
														],
														"referencedDeclaration": 1673,
														"src": "3394:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:7"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:7",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "3340:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "3352:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:7"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:7"
									},
									"scope": 1870,
									"src": "3323:113:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1976
									],
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "3573:78:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3597:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1090,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "3583:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1095,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3636:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1094,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "3623:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1097,
												"nodeType": "Return",
												"src": "3616:28:7"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:7",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "3564:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:7"
									},
									"scope": 1870,
									"src": "3497:154:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1968
									],
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "3793:69:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1108,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "3822:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "3836:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "3846:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1107,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "3803:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:7"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:7",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "3745:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "3763:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:7"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:7"
									},
									"scope": 1870,
									"src": "3718:144:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1986
									],
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "4022:59:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1125,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "4039:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1127,
														"indexExpression": {
															"id": 1126,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "4058:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1129,
													"indexExpression": {
														"id": 1128,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "4065:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1130,
												"nodeType": "Return",
												"src": "4032:42:7"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:7",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3954:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3969:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:7"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "4016:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:7"
									},
									"scope": 1870,
									"src": "3928:153:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1952
									],
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "4223:498:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "4237:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1156,
												"nodeType": "IfStatement",
												"src": "4233:87:7",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "4255:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1149,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1148,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1154,
															"nodeType": "RevertStatement",
															"src": "4269:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "4538:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1157,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"arguments": [
														{
															"id": 1160,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "4570:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "4574:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1162,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "4583:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1159,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "4562:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1166,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "4610:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1167,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "4627:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "4606:109:7",
												"trueBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "4633:82:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1170,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1135,
																		"src": "4675:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1171,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "4681:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1172,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "4690:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1169,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1174,
															"nodeType": "RevertStatement",
															"src": "4647:57:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:7",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "4165:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "4179:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "4191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:7"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:7"
									},
									"scope": 1870,
									"src": "4143:578:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1942
									],
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "4863:56:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "4890:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "4896:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "4900:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1188,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1196,
															1222
														],
														"referencedDeclaration": 1222,
														"src": "4873:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:7"
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:7",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4813:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4827:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4839:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:7"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:7"
									},
									"scope": 1870,
									"src": "4787:132:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1932
									],
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "5088:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1209,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "5111:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "5117:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "5121:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1208,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "5098:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1215,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "5162:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1216,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "5168:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "5172:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1218,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "5181:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1214,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "5139:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:7"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:7",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "5011:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "5025:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "5037:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "5054:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:7"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:7"
									},
									"scope": 1870,
									"src": "4985:208:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "5782:40:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1230,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "5799:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1232,
													"indexExpression": {
														"id": 1231,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "5807:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1233,
												"nodeType": "Return",
												"src": "5792:23:7"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:7",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "5725:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "5773:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:7"
									},
									"scope": 1870,
									"src": "5707:115:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "6017:48:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1243,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "6034:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1245,
													"indexExpression": {
														"id": 1244,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "6050:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1246,
												"nodeType": "Return",
												"src": "6027:31:7"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:7",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "5960:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:7"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "6008:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:7"
									},
									"scope": 1870,
									"src": "5938:127:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "6485:163:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1260,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "6514:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1261,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1266,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "6552:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1267,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "6561:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1270,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1251,
																				"src": "6589:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1271,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1253,
																				"src": "6596:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1269,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "6572:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1275,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "6621:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1274,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1248,
																			"src": "6608:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1277,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "6633:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1280,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1282,
												"nodeType": "Return",
												"src": "6495:146:7"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:7",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "6399:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "6414:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "6431:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:7"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "6479:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:7"
									},
									"scope": 1870,
									"src": "6376:272:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "7179:271:7",
										"statements": [
											{
												"condition": {
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1295,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "7208:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1296,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "7215:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1297,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "7224:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1294,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "7194:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "7189:255:7",
												"trueBody": {
													"id": 1318,
													"nodeType": "Block",
													"src": "7234:210:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1300,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "7252:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1301,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1316,
																"nodeType": "Block",
																"src": "7350:84:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1312,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1289,
																					"src": "7402:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1313,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1291,
																					"src": "7411:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1311,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1315,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:7"
																	}
																]
															},
															"id": 1317,
															"nodeType": "IfStatement",
															"src": "7248:186:7",
															"trueBody": {
																"id": 1310,
																"nodeType": "Block",
																"src": "7273:71:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1307,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1291,
																					"src": "7321:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1306,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1309,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:7",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "7108:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "7123:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "7140:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:7"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:7"
									},
									"scope": 1870,
									"src": "7082:368:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "8167:78:7",
										"statements": [
											{
												"id": 1335,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:7",
												"statements": [
													{
														"expression": {
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1329,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "8201:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1331,
																"indexExpression": {
																	"id": 1330,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "8211:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1332,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1326,
																"src": "8223:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1334,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:7",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "8118:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "8135:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1325,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:7"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:7"
									},
									"scope": 1870,
									"src": "8092:153:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "8933:700:7",
										"statements": [
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1426,
														"src": "8943:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1349,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"arguments": [
														{
															"id": 1352,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "8967:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1351,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "8958:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "9035:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1368,
												"nodeType": "IfStatement",
												"src": "9031:86:7",
												"trueBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "9055:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1362,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "9086:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1363,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "9092:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1364,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "9098:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1361,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "9069:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1366,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1369,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "9161:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1370,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1396,
												"nodeType": "IfStatement",
												"src": "9157:256:7",
												"trueBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "9181:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1376,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1380,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "9298:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1381,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1375,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1673,
																		1739
																	],
																	"referencedDeclaration": 1739,
																	"src": "9277:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1387,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:7"
														},
														{
															"id": 1394,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:7",
															"statements": [
																{
																	"expression": {
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1388,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 904,
																				"src": "9368:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1390,
																			"indexExpression": {
																				"id": 1389,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "9378:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1393,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:7"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1397,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "9427:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1398,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "9423:107:7",
												"trueBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "9445:85:7",
													"statements": [
														{
															"id": 1409,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:7",
															"statements": [
																{
																	"expression": {
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1403,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 904,
																				"src": "9487:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1405,
																			"indexExpression": {
																				"id": 1404,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1340,
																				"src": "9497:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1408,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:7"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1412,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9540:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1414,
														"indexExpression": {
															"id": 1413,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "9548:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1415,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "9559:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1419,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "9586:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "9592:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "9596:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1418,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "9577:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "EmitStatement",
												"src": "9572:32:7"
											},
											{
												"expression": {
													"id": 1424,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1350,
													"src": "9622:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1425,
												"nodeType": "Return",
												"src": "9615:11:7"
											}
										]
									},
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:7",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "8855:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "8867:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "8884:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:7"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "8924:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:7"
									},
									"scope": 1870,
									"src": "8838:795:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "10008:274:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1435,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "10022:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1436,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1449,
												"nodeType": "IfStatement",
												"src": "10018:87:7",
												"trueBody": {
													"id": 1448,
													"nodeType": "Block",
													"src": "10040:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1442,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1441,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1447,
															"nodeType": "RevertStatement",
															"src": "10054:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1476,
														"src": "10114:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1450,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"arguments": [
														{
															"id": 1453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "10146:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "10150:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1455,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1452,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "10138:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1461,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "10184:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1462,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "10180:96:7",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "10213:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1468,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1467,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "RevertStatement",
															"src": "10227:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:7",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "9970:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "9982:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:7"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:7"
									},
									"scope": 1870,
									"src": "9955:327:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "10690:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1486,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "10710:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1487,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "10714:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1485,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1492,
															1518
														],
														"referencedDeclaration": 1518,
														"src": "10700:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:7"
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:7",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "10652:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "10664:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:7"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:7"
									},
									"scope": 1870,
									"src": "10633:100:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "11038:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "11054:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "11058:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "11048:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1508,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1512,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "11111:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1513,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "11115:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1514,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "11124:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1507,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "11076:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:7"
											}
										]
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:7",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "10973:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "10985:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "11002:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:7"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:7"
									},
									"scope": 1870,
									"src": "10954:182:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "11503:186:7",
										"statements": [
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "11513:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1524,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1537,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "11557:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1526,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "11537:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1538,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "11591:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1539,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1549,
												"nodeType": "IfStatement",
												"src": "11587:96:7",
												"trueBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "11620:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1545,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "11664:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1544,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1547,
															"nodeType": "RevertStatement",
															"src": "11634:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:7",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "11477:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:7"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:7"
									},
									"scope": 1870,
									"src": "11462:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "12084:389:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1561,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "12098:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1562,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"nodeType": "IfStatement",
												"src": "12094:87:7",
												"trueBody": {
													"id": 1574,
													"nodeType": "Block",
													"src": "12116:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1568,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1567,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1573,
															"nodeType": "RevertStatement",
															"src": "12130:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													1577
												],
												"declarations": [
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1610,
														"src": "12190:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1576,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1586,
												"initialValue": {
													"arguments": [
														{
															"id": 1579,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "12222:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1580,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "12226:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1578,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "12214:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "12260:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1588,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1598,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "12362:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1599,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "12379:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1608,
													"nodeType": "IfStatement",
													"src": "12358:109:7",
													"trueBody": {
														"id": 1607,
														"nodeType": "Block",
														"src": "12385:82:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1602,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "12427:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1603,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "12433:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1604,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "12442:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1601,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1606,
																"nodeType": "RevertStatement",
																"src": "12399:57:7"
															}
														]
													}
												},
												"id": 1609,
												"nodeType": "IfStatement",
												"src": "12256:211:7",
												"trueBody": {
													"id": 1597,
													"nodeType": "Block",
													"src": "12289:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "12333:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1593,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1596,
															"nodeType": "RevertStatement",
															"src": "12303:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:7",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "12032:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "12046:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "12058:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:7"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:7"
									},
									"scope": 1870,
									"src": "12013:460:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "13481:53:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1622,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "13505:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1623,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "13511:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "13515:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1621,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1629,
															1655
														],
														"referencedDeclaration": 1655,
														"src": "13491:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:7"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "13429:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "13443:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "13455:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:7"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:7"
									},
									"scope": 1870,
									"src": "13406:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "13873:102:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1642,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "13893:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1643,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "13899:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1644,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "13903:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1641,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "13883:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1648,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "13944:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "13950:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1650,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "13954:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1651,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "13963:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1647,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "13921:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:7"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:7",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "13794:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "13808:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "13820:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "13837:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:7"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:7"
									},
									"scope": 1870,
									"src": "13771:204:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "14488:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "14507:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1667,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "14511:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1668,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "14520:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1665,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1673,
															1739
														],
														"referencedDeclaration": 1739,
														"src": "14498:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:7"
											}
										]
									},
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:7",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "14436:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "14448:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "14465:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:7"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:7"
									},
									"scope": 1870,
									"src": "14418:120:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "14814:568:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1685,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "14880:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1686,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "14893:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1687,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1731,
												"nodeType": "IfStatement",
												"src": "14876:460:7",
												"trueBody": {
													"id": 1730,
													"nodeType": "Block",
													"src": "14913:423:7",
													"statements": [
														{
															"assignments": [
																1694
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1694,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1730,
																	"src": "14927:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1693,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:7",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1698,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1696,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "14957:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1695,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "14943:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1699,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1680,
																			"src": "15093:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1700,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1705,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1694,
																			"src": "15115:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1706,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1680,
																			"src": "15124:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:7",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1710,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1694,
																				"src": "15150:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1711,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1680,
																				"src": "15157:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1709,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "15133:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1720,
															"nodeType": "IfStatement",
															"src": "15089:142:7",
															"trueBody": {
																"id": 1719,
																"nodeType": "Block",
																"src": "15164:67:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1716,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1680,
																					"src": "15211:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1715,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1718,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:7"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1721,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "15249:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1729,
															"nodeType": "IfStatement",
															"src": "15245:81:7",
															"trueBody": {
																"id": 1728,
																"nodeType": "Block",
																"src": "15260:66:7",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1723,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1694,
																					"src": "15292:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1724,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "15299:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1725,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1678,
																					"src": "15303:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1722,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1895,
																				"src": "15283:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1727,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1732,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "15346:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1734,
														"indexExpression": {
															"id": 1733,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "15362:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1735,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "15373:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:7"
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:7",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "14738:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "14750:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "14767:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "14781:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:7"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:7"
									},
									"scope": 1870,
									"src": "14720:662:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "15684:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1749,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "15698:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1750,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "15694:91:7",
												"trueBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "15722:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1756,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1744,
																		"src": "15765:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1755,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1758,
															"nodeType": "RevertStatement",
															"src": "15736:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1761,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "15794:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1764,
															"indexExpression": {
																"id": 1762,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "15813:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1765,
														"indexExpression": {
															"id": 1763,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "15820:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1766,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "15832:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1770,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "15870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1771,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "15877:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1772,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "15887:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1769,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "15855:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1774,
												"nodeType": "EmitStatement",
												"src": "15850:46:7"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:7",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "15619:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "15634:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "15652:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:7"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:7"
									},
									"scope": 1870,
									"src": "15591:312:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "16210:169:7",
										"statements": [
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1804,
														"src": "16220:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1784,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1789,
												"initialValue": {
													"arguments": [
														{
															"id": 1787,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "16245:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1786,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "16236:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1790,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "16267:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1791,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "16263:88:7",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "16288:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1797,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "16332:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1796,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1799,
															"nodeType": "RevertStatement",
															"src": "16302:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1802,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1785,
													"src": "16367:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1783,
												"id": 1803,
												"nodeType": "Return",
												"src": "16360:12:7"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:7",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "16161:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:7"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "16201:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:7"
									},
									"scope": 1870,
									"src": "16138:241:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1868,
										"nodeType": "Block",
										"src": "17020:680:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1817,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "17034:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1867,
												"nodeType": "IfStatement",
												"src": "17030:664:7",
												"trueBody": {
													"id": 1866,
													"nodeType": "Block",
													"src": "17054:640:7",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1846,
																		"nodeType": "Block",
																		"src": "17168:162:7",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1839,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1835,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1833,
																						"src": "17190:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1836,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2005,
																								"src": "17200:15:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2005_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1837,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:7",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2004,
																							"src": "17200:32:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1838,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:7",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1845,
																				"nodeType": "IfStatement",
																				"src": "17186:130:7",
																				"trueBody": {
																					"id": 1844,
																					"nodeType": "Block",
																					"src": "17243:73:7",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1841,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1810,
																										"src": "17294:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1840,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1842,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1843,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:7"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1847,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1834,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1833,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1847,
																				"src": "17153:13:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1832,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:7"
																	},
																	"src": "17144:186:7"
																},
																{
																	"block": {
																		"id": 1863,
																		"nodeType": "Block",
																		"src": "17359:325:7",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1854,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1851,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1849,
																							"src": "17381:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1852,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:7",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1853,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1861,
																					"nodeType": "Block",
																					"src": "17480:190:7",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:7",
																								"nodeType": "YulBlock",
																								"src": "17566:86:7",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:7",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:7",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:7",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:7"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:7"
																													},
																													"nativeSrc": "17599:15:7",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:7"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:7",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:7"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:7",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:7"
																													},
																													"nativeSrc": "17616:13:7",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:7"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:7",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:7"
																											},
																											"nativeSrc": "17592:38:7",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:7"
																										},
																										"nativeSrc": "17592:38:7",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:7"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1849,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:7",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1849,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:7",
																									"valueSize": 1
																								}
																							],
																							"id": 1860,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:7"
																						}
																					]
																				},
																				"id": 1862,
																				"nodeType": "IfStatement",
																				"src": "17377:293:7",
																				"trueBody": {
																					"id": 1859,
																					"nodeType": "Block",
																					"src": "17401:73:7",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1856,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1810,
																										"src": "17452:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1855,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1857,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1858,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:7"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1864,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1850,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1849,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1864,
																				"src": "17338:19:7",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1848,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:7"
																	},
																	"src": "17331:353:7"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1826,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2298,
																			"src": "17109:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1828,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "17123:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1829,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "17129:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1830,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "17138:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1823,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1810,
																				"src": "17088:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1822,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2005,
																			"src": "17072:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2005_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$2005",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:7",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2004,
																	"src": "17072:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:7",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1865,
															"nodeType": "TryStatement",
															"src": "17068:616:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:7",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "16950:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "16964:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "16976:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "16993:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:7"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:7"
									},
									"scope": 1870,
									"src": "16918:782:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1871,
							"src": "776:16926:7",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1886,
								1895,
								1904
							]
						}
					],
					"src": "107:17596:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2673
						],
						"IERC721": [
							1987
						]
					},
					"id": 1988,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1872,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1874,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1988,
							"sourceUnit": 2674,
							"src": "134:62:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1873,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2673,
										"src": "142:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1876,
										"name": "IERC165",
										"nameLocations": [
											"287:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2673,
										"src": "287:7:8"
									},
									"id": 1877,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:8"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1875,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:8",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1987,
							"linearizedBaseContracts": [
								1987,
								2673
							],
							"name": "IERC721",
							"nameLocation": "276:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:8",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1886,
									"name": "Transfer",
									"nameLocation": "400:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "409:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "431:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "451:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:8"
									},
									"src": "394:82:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:8",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1895,
									"name": "Approval",
									"nameLocation": "587:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "596:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "619:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "645:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:8"
									},
									"src": "581:89:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:8",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1904,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "819:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "842:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:8"
									},
									"src": "798:85:8"
								},
								{
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:8",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "989:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:8"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "1027:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:8"
									},
									"scope": 1987,
									"src": "970:74:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:8",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "1203:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:8"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "1243:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:8"
									},
									"scope": 1987,
									"src": "1186:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "1860:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "1874:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "1886:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "1903:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:8"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:8"
									},
									"scope": 1987,
									"src": "1834:99:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "2675:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "2689:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "2701:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:8"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:8"
									},
									"scope": 1987,
									"src": "2649:78:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:8",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3492:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3506:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3518:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:8"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:8"
									},
									"scope": 1987,
									"src": "3470:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:8",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "4024:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "4036:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:8"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:8"
									},
									"scope": 1987,
									"src": "4007:55:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:8",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "4415:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "4433:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:8"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:8"
									},
									"scope": 1987,
									"src": "4388:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:8",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "4628:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:8"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "4668:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:8"
									},
									"scope": 1987,
									"src": "4607:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:8",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "4861:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "4876:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:8"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "4917:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1983,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:8"
									},
									"scope": 1987,
									"src": "4835:88:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1988,
							"src": "266:4659:8",
							"usedErrors": [],
							"usedEvents": [
								1886,
								1895,
								1904
							]
						}
					],
					"src": "108:4818:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							2005
						]
					},
					"id": 2006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1989,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1990,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:9",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 2005,
							"linearizedBaseContracts": [
								2005
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:9",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 2004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "867:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "893:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "915:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "940:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:9"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "984:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2001,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:9"
									},
									"scope": 2005,
									"src": "832:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2006,
							"src": "295:699:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1987
						],
						"IERC721Metadata": [
							2033
						]
					},
					"id": 2034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2007,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 2009,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2034,
							"sourceUnit": 1988,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2008,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1987,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2011,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1987,
										"src": "357:7:10"
									},
									"id": 2012,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2010,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2033,
							"linearizedBaseContracts": [
								2033,
								1987,
								2673
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 2033,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2021,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 2033,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 2033,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2034,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1886,
								1895,
								1904
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2286
						]
					},
					"id": 2287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2035,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2036,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:11",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2286,
							"linearizedBaseContracts": [
								2286
							],
							"name": "Address",
							"nameLocation": "203:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 2041,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "349:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:11"
									},
									"src": "316:50:11"
								},
								{
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:11",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2046,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "475:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:11"
									},
									"src": "452:39:11"
								},
								{
									"documentation": {
										"id": 2047,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 2049,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:11"
									},
									"src": "591:24:11"
								},
								{
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "1602:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2059,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2286",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2286",
																		"typeString": "library Address"
																	}
																],
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2057,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2062,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2054,
														"src": "1640:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2072,
												"nodeType": "IfStatement",
												"src": "1612:109:11",
												"trueBody": {
													"id": 2071,
													"nodeType": "Block",
													"src": "1648:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2067,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2286",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2286",
																					"typeString": "library Address"
																				}
																			],
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2065,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2064,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "1669:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2070,
															"nodeType": "RevertStatement",
															"src": "1662:48:11"
														}
													]
												}
											},
											{
												"assignments": [
													2074,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2074,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "1732:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2073,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2081,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2075,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "1750:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2077,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "1772:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:11"
											},
											{
												"condition": {
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:11",
													"subExpression": {
														"id": 2082,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "1798:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2088,
												"nodeType": "IfStatement",
												"src": "1793:63:11",
												"trueBody": {
													"id": 2087,
													"nodeType": "Block",
													"src": "1807:49:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2084,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "1828:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2086,
															"nodeType": "RevertStatement",
															"src": "1821:24:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:11",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "1550:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "1577:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:11"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:11"
									},
									"scope": 2286,
									"src": "1531:331:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "2794:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "2833:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "2841:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "2811:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2099,
												"id": 2105,
												"nodeType": "Return",
												"src": "2804:45:11"
											}
										]
									},
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:11",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2727:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2743:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2094,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:11"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2780:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:11"
									},
									"scope": 2286,
									"src": "2705:151:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "3293:279:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2121,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2286",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2286",
																		"typeString": "library Address"
																	}
																],
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2124,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "3331:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2134,
												"nodeType": "IfStatement",
												"src": "3303:108:11",
												"trueBody": {
													"id": 2133,
													"nodeType": "Block",
													"src": "3338:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2129,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2286",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2286",
																					"typeString": "library Address"
																				}
																			],
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2127,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2126,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "3359:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2132,
															"nodeType": "RevertStatement",
															"src": "3352:48:11"
														}
													]
												}
											},
											{
												"assignments": [
													2136,
													2138
												],
												"declarations": [
													{
														"constant": false,
														"id": 2136,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3421:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2135,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2138,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3435:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2137,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2145,
												"initialValue": {
													"arguments": [
														{
															"id": 2143,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "3488:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2139,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "3462:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "3481:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2147,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "3537:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2148,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "3545:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2149,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "3554:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2146,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "3510:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2118,
												"id": 2151,
												"nodeType": "Return",
												"src": "3503:62:11"
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3211:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3227:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3246:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:11"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3279:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:11"
									},
									"scope": 2286,
									"src": "3180:392:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2178,
										"nodeType": "Block",
										"src": "3811:154:11",
										"statements": [
											{
												"assignments": [
													2164,
													2166
												],
												"declarations": [
													{
														"constant": false,
														"id": 2164,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2178,
														"src": "3822:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2166,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2178,
														"src": "3836:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2171,
												"initialValue": {
													"arguments": [
														{
															"id": 2169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "3881:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2167,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "3863:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2173,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "3930:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2174,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "3938:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2175,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "3947:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2172,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "3903:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2162,
												"id": 2177,
												"nodeType": "Return",
												"src": "3896:62:11"
											}
										]
									},
									"documentation": {
										"id": 2154,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "3739:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "3755:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:11"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "3797:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:11"
									},
									"scope": 2286,
									"src": "3711:254:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "4203:156:11",
										"statements": [
											{
												"assignments": [
													2190,
													2192
												],
												"declarations": [
													{
														"constant": false,
														"id": 2190,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2204,
														"src": "4214:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2189,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2192,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2204,
														"src": "4228:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2191,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2197,
												"initialValue": {
													"arguments": [
														{
															"id": 2195,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "4275:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2193,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "4255:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:11",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2199,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "4324:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2200,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "4332:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2201,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "4341:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2198,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "4297:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2188,
												"id": 2203,
												"nodeType": "Return",
												"src": "4290:62:11"
											}
										]
									},
									"documentation": {
										"id": 2180,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "4136:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "4152:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:11"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "4189:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:11"
									},
									"scope": 2286,
									"src": "4106:253:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "4783:424:11",
										"statements": [
											{
												"condition": {
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:11",
													"subExpression": {
														"id": 2217,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "4798:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2242,
													"nodeType": "Block",
													"src": "4857:344:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2224,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2212,
																			"src": "5045:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2228,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2208,
																				"src": "5071:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:11",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2239,
															"nodeType": "IfStatement",
															"src": "5041:119:11",
															"trueBody": {
																"id": 2238,
																"nodeType": "Block",
																"src": "5096:64:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2235,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2208,
																					"src": "5138:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2234,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2046,
																				"src": "5121:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2237,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2240,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "5180:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2216,
															"id": 2241,
															"nodeType": "Return",
															"src": "5173:17:11"
														}
													]
												},
												"id": 2243,
												"nodeType": "IfStatement",
												"src": "4793:408:11",
												"trueBody": {
													"id": 2223,
													"nodeType": "Block",
													"src": "4807:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2220,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2212,
																		"src": "4829:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2219,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "4821:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2222,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:11",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4670:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4694:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4716:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:11"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4769:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:11"
									},
									"scope": 2286,
									"src": "4625:582:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "5509:122:11",
										"statements": [
											{
												"condition": {
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:11",
													"subExpression": {
														"id": 2255,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2248,
														"src": "5524:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2264,
													"nodeType": "Block",
													"src": "5583:42:11",
													"statements": [
														{
															"expression": {
																"id": 2262,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "5604:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2254,
															"id": 2263,
															"nodeType": "Return",
															"src": "5597:17:11"
														}
													]
												},
												"id": 2265,
												"nodeType": "IfStatement",
												"src": "5519:106:11",
												"trueBody": {
													"id": 2261,
													"nodeType": "Block",
													"src": "5533:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2258,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2250,
																		"src": "5555:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2257,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "5547:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2260,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2246,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:11",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "5433:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "5447:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:11"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "5495:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:11"
									},
									"scope": 2286,
									"src": "5407:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2284,
										"nodeType": "Block",
										"src": "5798:461:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2273,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "5874:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2282,
													"nodeType": "Block",
													"src": "6204:49:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2279,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "6225:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2281,
															"nodeType": "RevertStatement",
															"src": "6218:24:11"
														}
													]
												},
												"id": 2283,
												"nodeType": "IfStatement",
												"src": "5870:383:11",
												"trueBody": {
													"id": 2278,
													"nodeType": "Block",
													"src": "5897:301:11",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:11",
																"nodeType": "YulBlock",
																"src": "6055:133:11",
																"statements": [
																	{
																		"nativeSrc": "6073:40:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:11"
																			},
																			"nativeSrc": "6096:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:11"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:11",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:11",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:11",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:11"
																					},
																					"nativeSrc": "6137:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:11"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:11"
																			},
																			"nativeSrc": "6130:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:11"
																		},
																		"nativeSrc": "6130:44:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:11"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2270,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:11",
																	"valueSize": 1
																},
																{
																	"declaration": 2270,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:11",
																	"valueSize": 1
																}
															],
															"id": 2277,
															"nodeType": "InlineAssembly",
															"src": "6046:142:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:11",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 2285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "5760:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:11"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:11"
									},
									"scope": 2286,
									"src": "5743:516:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2287,
							"src": "195:6066:11",
							"usedErrors": [
								2041,
								2046,
								2049
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2308
						]
					},
					"id": 2309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2289,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2308,
							"linearizedBaseContracts": [
								2308
							],
							"name": "Context",
							"nameLocation": "642:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "718:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2294,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2293,
												"id": 2296,
												"nodeType": "Return",
												"src": "728:17:12"
											}
										]
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:12"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "709:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:12"
									},
									"scope": 2308,
									"src": "656:96:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "825:32:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2303,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2302,
												"id": 2305,
												"nodeType": "Return",
												"src": "835:15:12"
											}
										]
									},
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:12"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "809:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:12"
									},
									"scope": 2308,
									"src": "758:99:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2309,
							"src": "624:235:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							2382
						]
					},
					"id": 2383,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2311,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:13",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2382,
							"linearizedBaseContracts": [
								2382
							],
							"name": "Counters",
							"nameLocation": "432:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 2314,
									"members": [
										{
											"constant": false,
											"id": 2313,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 2314,
											"src": "786:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2312,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:13",
									"nodeType": "StructDefinition",
									"scope": 2382,
									"src": "447:374:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "901:38:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2322,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "918:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:13",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2313,
													"src": "918:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2321,
												"id": 2324,
												"nodeType": "Return",
												"src": "911:21:13"
											}
										]
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "844:23:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2315,
														"name": "Counter",
														"nameLocations": [
															"844:7:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2314,
														"src": "844:7:13"
													},
													"referencedDeclaration": 2314,
													"src": "844:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:13"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "892:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:13"
									},
									"scope": 2382,
									"src": "827:112:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2339,
										"nodeType": "Block",
										"src": "998:70:13",
										"statements": [
											{
												"id": 2338,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:13",
												"statements": [
													{
														"expression": {
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2332,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2329,
																	"src": "1032:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:13",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2313,
																"src": "1032:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2337,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:13"
													}
												]
											}
										]
									},
									"id": 2340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "964:23:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2327,
														"name": "Counter",
														"nameLocations": [
															"964:7:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2314,
														"src": "964:7:13"
													},
													"referencedDeclaration": 2314,
													"src": "964:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:13"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:13"
									},
									"scope": 2382,
									"src": "945:123:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "1127:176:13",
										"statements": [
											{
												"assignments": [
													2347
												],
												"declarations": [
													{
														"constant": false,
														"id": 2347,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "1137:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2350,
												"initialValue": {
													"expression": {
														"id": 2348,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2343,
														"src": "1153:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:13",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2313,
													"src": "1153:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2352,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "1185:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2357,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:13"
											},
											{
												"id": 2366,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:13",
												"statements": [
													{
														"expression": {
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2358,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "1260:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:13",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2313,
																"src": "1260:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2361,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2347,
																	"src": "1277:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2365,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:13"
													}
												]
											}
										]
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "1093:23:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2342,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2341,
														"name": "Counter",
														"nameLocations": [
															"1093:7:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2314,
														"src": "1093:7:13"
													},
													"referencedDeclaration": 2314,
													"src": "1093:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:13"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:13"
									},
									"scope": 2382,
									"src": "1074:229:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2380,
										"nodeType": "Block",
										"src": "1358:35:13",
										"statements": [
											{
												"expression": {
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2374,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "1368:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 2376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:13",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2313,
														"src": "1368:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:13"
											}
										]
									},
									"id": 2381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "1324:23:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2369,
														"name": "Counter",
														"nameLocations": [
															"1324:7:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2314,
														"src": "1324:7:13"
													},
													"referencedDeclaration": 2314,
													"src": "1324:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:13"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:13"
									},
									"scope": 2382,
									"src": "1309:84:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2383,
							"src": "424:971:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3727
						],
						"SignedMath": [
							4144
						],
						"Strings": [
							2637
						]
					},
					"id": 2638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2384,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2638,
							"sourceUnit": 3728,
							"src": "127:37:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2385,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3727,
										"src": "135:4:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2638,
							"sourceUnit": 4145,
							"src": "165:49:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2387,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4144,
										"src": "173:10:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2389,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2637,
							"linearizedBaseContracts": [
								2637
							],
							"name": "Strings",
							"nameLocation": "259:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2392,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 2637,
									"src": "273:56:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2390,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2391,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2395,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2637,
									"src": "335:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2393,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:14",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2402,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "505:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "520:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:14"
									},
									"src": "470:66:14"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "708:627:14",
										"statements": [
											{
												"id": 2448,
												"nodeType": "UncheckedBlock",
												"src": "718:611:14",
												"statements": [
													{
														"assignments": [
															2411
														],
														"declarations": [
															{
																"constant": false,
																"id": 2411,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2448,
																"src": "742:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2410,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2418,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2414,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2405,
																		"src": "770:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2412,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3727,
																		"src": "759:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3727_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3547,
																	"src": "759:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:14"
													},
													{
														"assignments": [
															2420
														],
														"declarations": [
															{
																"constant": false,
																"id": 2420,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2448,
																"src": "794:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2419,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2425,
														"initialValue": {
															"arguments": [
																{
																	"id": 2423,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "828:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2421,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:14"
													},
													{
														"assignments": [
															2427
														],
														"declarations": [
															{
																"constant": false,
																"id": 2427,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 2448,
																"src": "849:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2426,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2428,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:14"
													},
													{
														"AST": {
															"nativeSrc": "930:67:14",
															"nodeType": "YulBlock",
															"src": "930:67:14",
															"statements": [
																{
																	"nativeSrc": "948:35:14",
																	"nodeType": "YulAssignment",
																	"src": "948:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:14",
																						"nodeType": "YulLiteral",
																						"src": "971:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:14"
																				},
																				"nativeSrc": "967:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:14"
																		},
																		"nativeSrc": "955:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:14"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2420,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2411,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2427,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:14",
																"valueSize": 1
															}
														],
														"id": 2429,
														"nodeType": "InlineAssembly",
														"src": "921:76:14"
													},
													{
														"body": {
															"id": 2444,
															"nodeType": "Block",
															"src": "1023:269:14",
															"statements": [
																{
																	"expression": {
																		"id": 2432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:14",
																		"subExpression": {
																			"id": 2431,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2427,
																			"src": "1041:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2433,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:14"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:14",
																		"nodeType": "YulBlock",
																		"src": "1124:86:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:14",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:14"
																									},
																									"nativeSrc": "1164:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:14"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:14"
																							},
																							"nativeSrc": "1159:32:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:14"
																					},
																					"nativeSrc": "1146:46:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:14"
																				},
																				"nativeSrc": "1146:46:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:14"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 2392,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2427,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2405,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:14",
																			"valueSize": 1
																		}
																	],
																	"id": 2434,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:14"
																},
																{
																	"expression": {
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2435,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2405,
																			"src": "1227:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2438,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2439,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2405,
																			"src": "1260:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2443,
																	"nodeType": "IfStatement",
																	"src": "1256:21:14",
																	"trueBody": {
																		"id": 2442,
																		"nodeType": "Break",
																		"src": "1272:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2445,
														"nodeType": "WhileStatement",
														"src": "1010:282:14"
													},
													{
														"expression": {
															"id": 2446,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "1312:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2409,
														"id": 2447,
														"nodeType": "Return",
														"src": "1305:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2403,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "655:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:14"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "693:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2407,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:14"
									},
									"scope": 2637,
									"src": "637:698:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "1511:92:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2461,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "1542:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:14",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2453,
																			"src": "1588:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2468,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4144,
																			"src": "1573:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$4144_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:14",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4143,
																		"src": "1573:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2467,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "1564:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2458,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 2460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:14",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2457,
												"id": 2474,
												"nodeType": "Return",
												"src": "1521:75:14"
											}
										]
									},
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:14",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1459:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2452,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:14"
									},
									"returnParameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1496:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:14"
									},
									"scope": 2637,
									"src": "1435:168:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2495,
										"nodeType": "Block",
										"src": "1782:100:14",
										"statements": [
											{
												"id": 2494,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2485,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "1835:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2488,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2479,
																				"src": "1854:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2486,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3727,
																				"src": "1842:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3727_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3669,
																			"src": "1842:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2484,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2496,
																	2579,
																	2599
																],
																"referencedDeclaration": 2579,
																"src": "1823:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2483,
														"id": 2493,
														"nodeType": "Return",
														"src": "1816:49:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1729:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:14"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1767:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:14"
									},
									"scope": 2637,
									"src": "1708:174:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "2095:435:14",
										"statements": [
											{
												"assignments": [
													2507
												],
												"declarations": [
													{
														"constant": false,
														"id": 2507,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "2105:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2509,
												"initialValue": {
													"id": 2508,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2499,
													"src": "2126:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:14"
											},
											{
												"assignments": [
													2511
												],
												"declarations": [
													{
														"constant": false,
														"id": 2511,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "2141:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2510,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2520,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2515,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "2177:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2512,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:14"
											},
											{
												"expression": {
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2521,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "2198:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2523,
														"indexExpression": {
															"hexValue": "30",
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2526,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:14"
											},
											{
												"expression": {
													"id": 2531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2527,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "2223:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2529,
														"indexExpression": {
															"hexValue": "31",
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2532,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:14"
											},
											{
												"body": {
													"id": 2561,
													"nodeType": "Block",
													"src": "2293:95:14",
													"statements": [
														{
															"expression": {
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2547,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2511,
																		"src": "2307:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2549,
																	"indexExpression": {
																		"id": 2548,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2534,
																		"src": "2314:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2550,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "2319:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2554,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2551,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "2330:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2556,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:14"
														},
														{
															"expression": {
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2557,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "2361:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2560,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2541,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2534,
														"src": "2281:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2562,
												"initializationExpression": {
													"assignments": [
														2534
													],
													"declarations": [
														{
															"constant": false,
															"id": 2534,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2562,
															"src": "2253:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2533,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2540,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2536,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "2269:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:14",
														"subExpression": {
															"id": 2544,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2534,
															"src": "2290:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2546,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2563,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2507,
														"src": "2401:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2572,
												"nodeType": "IfStatement",
												"src": "2397:96:14",
												"trueBody": {
													"id": 2571,
													"nodeType": "Block",
													"src": "2418:75:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2567,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2499,
																		"src": "2468:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2568,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2501,
																		"src": "2475:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2566,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "2439:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2570,
															"nodeType": "RevertStatement",
															"src": "2432:50:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2575,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "2516:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2573,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2505,
												"id": 2577,
												"nodeType": "Return",
												"src": "2502:21:14"
											}
										]
									},
									"documentation": {
										"id": 2497,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2026:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2041:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:14"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2080:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:14"
									},
									"scope": 2637,
									"src": "2005:525:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2598,
										"nodeType": "Block",
										"src": "2762:75:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2592,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "2807:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2590,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2595,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2395,
															"src": "2815:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2587,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2496,
															2579,
															2599
														],
														"referencedDeclaration": 2579,
														"src": "2779:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2586,
												"id": 2597,
												"nodeType": "Return",
												"src": "2772:58:14"
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "2710:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:14"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "2747:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:14"
									},
									"scope": 2637,
									"src": "2689:148:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "2992:104:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2611,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "3015:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2609,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2616,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2604,
																		"src": "3034:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2614,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2623,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "3063:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2621,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2620,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2629,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2604,
																			"src": "3086:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2627,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2626,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2608,
												"id": 2634,
												"nodeType": "Return",
												"src": "3002:87:14"
											}
										]
									},
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:14",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "2929:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "2946:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2603,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:14"
									},
									"returnParameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "2986:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:14"
									},
									"scope": 2637,
									"src": "2914:182:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2638,
							"src": "251:2847:14",
							"usedErrors": [
								2402
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2661
						],
						"IERC165": [
							2673
						]
					},
					"id": 2662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2639,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2641,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2662,
							"sourceUnit": 2674,
							"src": "140:38:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2640,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2673,
										"src": "148:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2643,
										"name": "IERC165",
										"nameLocations": [
											"687:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2673,
										"src": "687:7:15"
									},
									"id": 2644,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:15"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2642,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:15",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2661,
							"linearizedBaseContracts": [
								2661,
								2673
							],
							"name": "ERC165",
							"nameLocation": "677:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2672
									],
									"body": {
										"id": 2659,
										"nodeType": "Block",
										"src": "844:64:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2652,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "861:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2654,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2673,
																	"src": "881:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2673_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2673_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2653,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2673",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:15",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2651,
												"id": 2658,
												"nodeType": "Return",
												"src": "854:47:15"
											}
										]
									},
									"documentation": {
										"id": 2645,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:15",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "789:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2646,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:15"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "838:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2649,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:15"
									},
									"scope": 2661,
									"src": "762:146:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2662,
							"src": "659:251:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2673
						]
					},
					"id": 2674,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2663,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2664,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:16",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2673,
							"linearizedBaseContracts": [
								2673
							],
							"name": "IERC165",
							"nameLocation": "431:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2665,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:16",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "817:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2666,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:16"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "860:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:16"
									},
									"scope": 2673,
									"src": "790:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2674,
							"src": "421:447:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3727
						]
					},
					"id": 3728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2676,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:17",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3727,
							"linearizedBaseContracts": [
								3727
							],
							"name": "Math",
							"nameLocation": "211:4:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2677,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:17",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2679,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:17"
									},
									"src": "277:29:17"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2684,
									"members": [
										{
											"id": 2680,
											"name": "Floor",
											"nameLocation": "336:5:17",
											"nodeType": "EnumValue",
											"src": "336:5:17"
										},
										{
											"id": 2681,
											"name": "Ceil",
											"nameLocation": "379:4:17",
											"nodeType": "EnumValue",
											"src": "379:4:17"
										},
										{
											"id": 2682,
											"name": "Trunc",
											"nameLocation": "421:5:17",
											"nodeType": "EnumValue",
											"src": "421:5:17"
										},
										{
											"id": 2683,
											"name": "Expand",
											"nameLocation": "451:6:17",
											"nodeType": "EnumValue",
											"src": "451:6:17"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:17",
									"nodeType": "EnumDefinition",
									"src": "312:169:17"
								},
								{
									"body": {
										"id": 2715,
										"nodeType": "Block",
										"src": "661:140:17",
										"statements": [
											{
												"id": 2714,
												"nodeType": "UncheckedBlock",
												"src": "671:124:17",
												"statements": [
													{
														"assignments": [
															2697
														],
														"declarations": [
															{
																"constant": false,
																"id": 2697,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2714,
																"src": "695:9:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2696,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2701,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2698,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2687,
																"src": "707:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2699,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2689,
																"src": "711:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2702,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2697,
																"src": "730:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2703,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2687,
																"src": "734:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2709,
														"nodeType": "IfStatement",
														"src": "726:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2707,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2695,
															"id": 2708,
															"nodeType": "Return",
															"src": "737:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2711,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2697,
																	"src": "782:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2712,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2695,
														"id": 2713,
														"nodeType": "Return",
														"src": "768:16:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2685,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:17",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "601:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "612:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:17"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "646:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "652:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:17"
									},
									"scope": 3727,
									"src": "585:216:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2743,
										"nodeType": "Block",
										"src": "984:113:17",
										"statements": [
											{
												"id": 2742,
												"nodeType": "UncheckedBlock",
												"src": "994:97:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2728,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2721,
																"src": "1022:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2729,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2719,
																"src": "1026:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2735,
														"nodeType": "IfStatement",
														"src": "1018:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2727,
															"id": 2734,
															"nodeType": "Return",
															"src": "1029:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2737,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2719,
																		"src": "1074:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2738,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2721,
																		"src": "1078:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2740,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2727,
														"id": 2741,
														"nodeType": "Return",
														"src": "1060:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2717,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:17",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "924:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "935:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:17"
									},
									"returnParameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "969:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "975:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:17"
									},
									"scope": 3727,
									"src": "908:189:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2785,
										"nodeType": "Block",
										"src": "1283:417:17",
										"statements": [
											{
												"id": 2784,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2756,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2747,
																"src": "1551:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2763,
														"nodeType": "IfStatement",
														"src": "1547:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2761,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2755,
															"id": 2762,
															"nodeType": "Return",
															"src": "1559:16:17"
														}
													},
													{
														"assignments": [
															2765
														],
														"declarations": [
															{
																"constant": false,
																"id": 2765,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2784,
																"src": "1589:9:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2764,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2769,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2766,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2747,
																"src": "1601:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2767,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "1605:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2770,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "1624:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2771,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2747,
																	"src": "1628:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2773,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "1633:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2779,
														"nodeType": "IfStatement",
														"src": "1620:33:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2777,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2755,
															"id": 2778,
															"nodeType": "Return",
															"src": "1636:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2781,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "1681:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2782,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2755,
														"id": 2783,
														"nodeType": "Return",
														"src": "1667:16:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2745,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:17",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "1223:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "1234:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:17"
									},
									"returnParameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "1268:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "1274:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:17"
									},
									"scope": 3727,
									"src": "1207:493:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "1887:114:17",
										"statements": [
											{
												"id": 2812,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2798,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2791,
																"src": "1925:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2805,
														"nodeType": "IfStatement",
														"src": "1921:29:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2803,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2797,
															"id": 2804,
															"nodeType": "Return",
															"src": "1933:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2807,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "1978:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2808,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2791,
																		"src": "1982:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2810,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2797,
														"id": 2811,
														"nodeType": "Return",
														"src": "1964:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2787,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:17",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "1827:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "1838:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:17"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "1872:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "1878:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:17"
									},
									"scope": 3727,
									"src": "1811:190:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "2198:114:17",
										"statements": [
											{
												"id": 2840,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2826,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2819,
																"src": "2236:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2833,
														"nodeType": "IfStatement",
														"src": "2232:29:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2825,
															"id": 2832,
															"nodeType": "Return",
															"src": "2244:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2835,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2817,
																		"src": "2289:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2836,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2819,
																		"src": "2293:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2838,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2825,
														"id": 2839,
														"nodeType": "Return",
														"src": "2275:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:17",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "2138:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "2149:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:17"
									},
									"returnParameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "2183:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "2189:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:17"
									},
									"scope": 3727,
									"src": "2122:190:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2859,
										"nodeType": "Block",
										"src": "2449:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2852,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "2466:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2853,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "2470:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2856,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2847,
														"src": "2478:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:17",
													"trueExpression": {
														"id": 2855,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "2474:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2851,
												"id": 2858,
												"nodeType": "Return",
												"src": "2459:20:17"
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:17",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "2395:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "2406:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:17"
									},
									"returnParameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "2440:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:17"
									},
									"scope": 3727,
									"src": "2382:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2877,
										"nodeType": "Block",
										"src": "2624:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2870,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2863,
															"src": "2641:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2871,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "2645:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2874,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2865,
														"src": "2653:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:17",
													"trueExpression": {
														"id": 2873,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2863,
														"src": "2649:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2869,
												"id": 2876,
												"nodeType": "Return",
												"src": "2634:20:17"
											}
										]
									},
									"documentation": {
										"id": 2861,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:17",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "2570:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "2581:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:17"
									},
									"returnParameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "2615:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:17"
									},
									"scope": 3727,
									"src": "2557:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2900,
										"nodeType": "Block",
										"src": "2845:82:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2888,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2881,
																	"src": "2900:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2889,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2883,
																	"src": "2904:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2891,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2892,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2881,
																		"src": "2910:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2893,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2883,
																		"src": "2914:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2895,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2887,
												"id": 2899,
												"nodeType": "Return",
												"src": "2892:28:17"
											}
										]
									},
									"documentation": {
										"id": 2879,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:17",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "2791:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "2802:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:17"
									},
									"returnParameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "2836:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:17"
									},
									"scope": 3727,
									"src": "2774:153:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2934,
										"nodeType": "Block",
										"src": "3219:260:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2911,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2906,
														"src": "3233:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2919,
												"nodeType": "IfStatement",
												"src": "3229:127:17",
												"trueBody": {
													"id": 2918,
													"nodeType": "Block",
													"src": "3241:115:17",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2914,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2904,
																	"src": "3340:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2915,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2906,
																	"src": "3344:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2910,
															"id": 2917,
															"nodeType": "Return",
															"src": "3333:12:17"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2920,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2904,
															"src": "3444:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2924,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "3458:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2927,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2928,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2906,
																"src": "3467:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:17",
													"trueExpression": {
														"hexValue": "30",
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2910,
												"id": 2933,
												"nodeType": "Return",
												"src": "3437:35:17"
											}
										]
									},
									"documentation": {
										"id": 2902,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:17",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "3165:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "3176:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:17"
									},
									"returnParameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "3210:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:17"
									},
									"scope": 3727,
									"src": "3148:331:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3060,
										"nodeType": "Block",
										"src": "3901:4018:17",
										"statements": [
											{
												"id": 3059,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:17",
												"statements": [
													{
														"assignments": [
															2948
														],
														"declarations": [
															{
																"constant": false,
																"id": 2948,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 3059,
																"src": "4232:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2947,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2952,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2949,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "4248:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2950,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2940,
																"src": "4252:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:17"
													},
													{
														"assignments": [
															2954
														],
														"declarations": [
															{
																"constant": false,
																"id": 2954,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 3059,
																"src": "4312:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2953,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2955,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:17"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:17",
															"nodeType": "YulBlock",
															"src": "4392:122:17",
															"statements": [
																{
																	"nativeSrc": "4410:30:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:17",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:17"
																				},
																				"nativeSrc": "4433:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:17"
																		},
																		"nativeSrc": "4420:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:17"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:17",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:17",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:17"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:17"
																				},
																				"nativeSrc": "4470:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:17"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:17"
																				},
																				"nativeSrc": "4486:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:17"
																		},
																		"nativeSrc": "4466:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2948,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2948,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2954,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2938,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2940,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:17",
																"valueSize": 1
															}
														],
														"id": 2956,
														"nodeType": "InlineAssembly",
														"src": "4383:131:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2957,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2954,
																"src": "4595:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2965,
														"nodeType": "IfStatement",
														"src": "4591:368:17",
														"trueBody": {
															"id": 2964,
															"nodeType": "Block",
															"src": "4607:352:17",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2960,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2948,
																			"src": "4925:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2961,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "4933:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2946,
																	"id": 2963,
																	"nodeType": "Return",
																	"src": "4918:26:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2966,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2942,
																"src": "5065:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2967,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2954,
																"src": "5080:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2973,
														"nodeType": "IfStatement",
														"src": "5061:88:17",
														"trueBody": {
															"id": 2972,
															"nodeType": "Block",
															"src": "5087:62:17",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2969,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2679,
																			"src": "5112:20:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2971,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:17"
																}
															]
														}
													},
													{
														"assignments": [
															2975
														],
														"declarations": [
															{
																"constant": false,
																"id": 2975,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:17",
																"nodeType": "VariableDeclaration",
																"scope": 3059,
																"src": "5404:17:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2974,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2976,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:17"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:17",
															"nodeType": "YulBlock",
															"src": "5444:291:17",
															"statements": [
																{
																	"nativeSrc": "5513:38:17",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:17"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:17"
																		},
																		"nativeSrc": "5526:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:17"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:17",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:17"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:17",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:17"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:17"
																				},
																				"nativeSrc": "5653:20:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:17"
																		},
																		"nativeSrc": "5642:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:17",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:17"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:17"
																		},
																		"nativeSrc": "5700:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2942,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2948,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2948,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2948,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2954,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2954,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2975,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2975,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2975,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2938,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2940,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:17",
																"valueSize": 1
															}
														],
														"id": 2977,
														"nodeType": "InlineAssembly",
														"src": "5435:300:17"
													},
													{
														"assignments": [
															2979
														],
														"declarations": [
															{
																"constant": false,
																"id": 2979,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:17",
																"nodeType": "VariableDeclaration",
																"scope": 3059,
																"src": "5939:12:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2978,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2986,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2980,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2942,
																"src": "5954:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2982,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "5973:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2984,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:17"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:17",
															"nodeType": "YulBlock",
															"src": "6008:362:17",
															"statements": [
																{
																	"nativeSrc": "6073:37:17",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:17"
																		},
																		"nativeSrc": "6088:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:17"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:17"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:17",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:17"
																		},
																		"nativeSrc": "6186:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:17",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:17",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:17",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:17"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:17"
																						},
																						"nativeSrc": "6333:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:17"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:17"
																				},
																				"nativeSrc": "6329:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:17"
																		},
																		"nativeSrc": "6325:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:17"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:17",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2942,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2942,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2948,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2948,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2979,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2979,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2979,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2979,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2979,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:17",
																"valueSize": 1
															}
														],
														"id": 2987,
														"nodeType": "InlineAssembly",
														"src": "5999:371:17"
													},
													{
														"expression": {
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2988,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2948,
																"src": "6436:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2989,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2954,
																	"src": "6445:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2990,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2979,
																	"src": "6453:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2993,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:17"
													},
													{
														"assignments": [
															2995
														],
														"declarations": [
															{
																"constant": false,
																"id": 2995,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:17",
																"nodeType": "VariableDeclaration",
																"scope": 3059,
																"src": "6775:15:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2994,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3002,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2997,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "6798:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2999,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:17"
													},
													{
														"expression": {
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3003,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "7031:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3005,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2942,
																		"src": "7046:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3006,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2995,
																		"src": "7060:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3010,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:17"
													},
													{
														"expression": {
															"id": 3017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3011,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "7100:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3013,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2942,
																		"src": "7115:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3014,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2995,
																		"src": "7129:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3018,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:17"
													},
													{
														"expression": {
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3019,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "7170:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3021,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2942,
																		"src": "7185:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3022,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2995,
																		"src": "7199:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3026,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:17"
													},
													{
														"expression": {
															"id": 3033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3027,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "7240:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3029,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2942,
																		"src": "7255:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3030,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2995,
																		"src": "7269:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3034,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:17"
													},
													{
														"expression": {
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3035,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "7310:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3037,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2942,
																		"src": "7325:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3038,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2995,
																		"src": "7339:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3042,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:17"
													},
													{
														"expression": {
															"id": 3049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3043,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "7381:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3045,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2942,
																		"src": "7396:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3046,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2995,
																		"src": "7410:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3050,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:17"
													},
													{
														"expression": {
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3051,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2945,
																"src": "7851:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3052,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2948,
																	"src": "7860:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3053,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2995,
																	"src": "7868:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3056,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:17"
													},
													{
														"expression": {
															"id": 3057,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2945,
															"src": "7896:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2946,
														"id": 3058,
														"nodeType": "Return",
														"src": "7889:13:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2936,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:17",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 3061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2938,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "3819:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "3830:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "3841:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:17"
									},
									"returnParameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "3885:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:17"
									},
									"scope": 3727,
									"src": "3803:4116:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3103,
										"nodeType": "Block",
										"src": "8161:192:17",
										"statements": [
											{
												"assignments": [
													3077
												],
												"declarations": [
													{
														"constant": false,
														"id": 3077,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3103,
														"src": "8171:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3083,
												"initialValue": {
													"arguments": [
														{
															"id": 3079,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "8195:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3080,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "8198:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3081,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3068,
															"src": "8201:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3078,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3061,
															3104
														],
														"referencedDeclaration": 3061,
														"src": "8188:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3085,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3071,
																"src": "8244:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2684",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2684",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 3084,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3726,
															"src": "8227:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2684_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 3086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3088,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3064,
																	"src": "8264:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3089,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3066,
																	"src": "8267:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3090,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3068,
																	"src": "8270:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3087,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3100,
												"nodeType": "IfStatement",
												"src": "8223:101:17",
												"trueBody": {
													"id": 3099,
													"nodeType": "Block",
													"src": "8288:36:17",
													"statements": [
														{
															"expression": {
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3095,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "8302:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3098,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3101,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3077,
													"src": "8340:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3075,
												"id": 3102,
												"nodeType": "Return",
												"src": "8333:13:17"
											}
										]
									},
									"documentation": {
										"id": 3062,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:17",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 3104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "8067:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3066,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "8078:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "8089:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "8110:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2684",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3069,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2684,
														"src": "8110:8:17"
													},
													"referencedDeclaration": 2684,
													"src": "8110:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2684",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:17"
									},
									"returnParameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "8152:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:17"
									},
									"scope": 3727,
									"src": "8051:302:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3215,
										"nodeType": "Block",
										"src": "8644:1585:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3112,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3107,
														"src": "8658:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3118,
												"nodeType": "IfStatement",
												"src": "8654:45:17",
												"trueBody": {
													"id": 3117,
													"nodeType": "Block",
													"src": "8666:33:17",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3111,
															"id": 3116,
															"nodeType": "Return",
															"src": "8680:8:17"
														}
													]
												}
											},
											{
												"assignments": [
													3120
												],
												"declarations": [
													{
														"constant": false,
														"id": 3120,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3215,
														"src": "9378:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3119,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3129,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3123,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "9406:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3122,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3383,
																			3418
																		],
																		"referencedDeclaration": 3383,
																		"src": "9401:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3127,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:17"
											},
											{
												"id": 3214,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:17",
												"statements": [
													{
														"expression": {
															"id": 3139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3130,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "9839:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3131,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "9849:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3132,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3107,
																					"src": "9858:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3133,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "9862:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3136,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3140,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:17"
													},
													{
														"expression": {
															"id": 3150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3141,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "9888:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3142,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "9898:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3143,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3107,
																					"src": "9907:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3144,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "9911:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3147,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3151,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:17"
													},
													{
														"expression": {
															"id": 3161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3152,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "9937:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3153,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "9947:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3154,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3107,
																					"src": "9956:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3155,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "9960:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3162,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:17"
													},
													{
														"expression": {
															"id": 3172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3163,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "9986:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3164,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "9996:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3165,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3107,
																					"src": "10005:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3166,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "10009:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3169,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3173,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:17"
													},
													{
														"expression": {
															"id": 3183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3174,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "10035:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3175,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "10045:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3176,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3107,
																					"src": "10054:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3177,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "10058:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3180,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3184,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:17"
													},
													{
														"expression": {
															"id": 3194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3185,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "10084:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3186,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "10094:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3187,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3107,
																					"src": "10103:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3188,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "10107:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3191,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3195,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:17"
													},
													{
														"expression": {
															"id": 3205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3196,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "10133:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3197,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "10143:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3198,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3107,
																					"src": "10152:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3199,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "10156:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3202,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3206,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:17"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3208,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3120,
																	"src": "10193:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3209,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3107,
																		"src": "10201:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3210,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3120,
																		"src": "10205:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3207,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2878,
																"src": "10189:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3111,
														"id": 3213,
														"nodeType": "Return",
														"src": "10182:30:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3105,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:17",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "8601:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:17"
									},
									"returnParameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "8635:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:17"
									},
									"scope": 3727,
									"src": "8587:1642:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3250,
										"nodeType": "Block",
										"src": "10405:164:17",
										"statements": [
											{
												"id": 3249,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:17",
												"statements": [
													{
														"assignments": [
															3228
														],
														"declarations": [
															{
																"constant": false,
																"id": 3228,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3249,
																"src": "10439:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3227,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3232,
														"initialValue": {
															"arguments": [
																{
																	"id": 3230,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3219,
																	"src": "10461:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3229,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3216,
																	3251
																],
																"referencedDeclaration": 3216,
																"src": "10456:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3233,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3228,
																"src": "10484:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3235,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3222,
																						"src": "10511:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2684",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2684",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3234,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3726,
																					"src": "10494:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2684_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3237,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3228,
																						"src": "10524:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3238,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3228,
																						"src": "10533:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3240,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3219,
																					"src": "10542:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3226,
														"id": 3248,
														"nodeType": "Return",
														"src": "10477:75:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3217,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:17",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3219,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "10343:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "10354:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2684",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3220,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2684,
														"src": "10354:8:17"
													},
													"referencedDeclaration": 2684,
													"src": "10354:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2684",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:17"
									},
									"returnParameters": {
										"id": 3226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "10396:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:17"
									},
									"scope": 3727,
									"src": "10329:240:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3382,
										"nodeType": "Block",
										"src": "10760:922:17",
										"statements": [
											{
												"assignments": [
													3260
												],
												"declarations": [
													{
														"constant": false,
														"id": 3260,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3382,
														"src": "10770:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3262,
												"initialValue": {
													"hexValue": "30",
													"id": 3261,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:17"
											},
											{
												"id": 3379,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3263,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "10826:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3277,
														"nodeType": "IfStatement",
														"src": "10822:99:17",
														"trueBody": {
															"id": 3276,
															"nodeType": "Block",
															"src": "10844:77:17",
															"statements": [
																{
																	"expression": {
																		"id": 3270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3268,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "10862:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3271,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:17"
																},
																{
																	"expression": {
																		"id": 3274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3272,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3260,
																			"src": "10893:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3275,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "10938:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3292,
														"nodeType": "IfStatement",
														"src": "10934:96:17",
														"trueBody": {
															"id": 3291,
															"nodeType": "Block",
															"src": "10955:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "10973:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3286,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:17"
																},
																{
																	"expression": {
																		"id": 3289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3287,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3260,
																			"src": "11003:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3290,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "11047:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3307,
														"nodeType": "IfStatement",
														"src": "11043:96:17",
														"trueBody": {
															"id": 3306,
															"nodeType": "Block",
															"src": "11064:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "11082:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3301,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:17"
																},
																{
																	"expression": {
																		"id": 3304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3302,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3260,
																			"src": "11112:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3305,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3308,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "11156:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3322,
														"nodeType": "IfStatement",
														"src": "11152:96:17",
														"trueBody": {
															"id": 3321,
															"nodeType": "Block",
															"src": "11173:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "11191:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3316,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:17"
																},
																{
																	"expression": {
																		"id": 3319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3317,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3260,
																			"src": "11221:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3320,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "11265:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3337,
														"nodeType": "IfStatement",
														"src": "11261:93:17",
														"trueBody": {
															"id": 3336,
															"nodeType": "Block",
															"src": "11281:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3328,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "11299:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3331,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:17"
																},
																{
																	"expression": {
																		"id": 3334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3332,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3260,
																			"src": "11328:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3335,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3338,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "11371:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3352,
														"nodeType": "IfStatement",
														"src": "11367:93:17",
														"trueBody": {
															"id": 3351,
															"nodeType": "Block",
															"src": "11387:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3343,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "11405:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3346,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:17"
																},
																{
																	"expression": {
																		"id": 3349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3347,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3260,
																			"src": "11434:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3350,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "11477:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3367,
														"nodeType": "IfStatement",
														"src": "11473:93:17",
														"trueBody": {
															"id": 3366,
															"nodeType": "Block",
															"src": "11493:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3358,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "11511:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3361,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:17"
																},
																{
																	"expression": {
																		"id": 3364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3362,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3260,
																			"src": "11540:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3365,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3368,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "11583:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3378,
														"nodeType": "IfStatement",
														"src": "11579:64:17",
														"trueBody": {
															"id": 3377,
															"nodeType": "Block",
															"src": "11599:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3373,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3260,
																			"src": "11617:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3376,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3380,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3260,
													"src": "11669:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3258,
												"id": 3381,
												"nodeType": "Return",
												"src": "11662:13:17"
											}
										]
									},
									"documentation": {
										"id": 3252,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:17",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "10713:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:17"
									},
									"returnParameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "10751:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:17"
									},
									"scope": 3727,
									"src": "10699:983:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3417,
										"nodeType": "Block",
										"src": "11915:168:17",
										"statements": [
											{
												"id": 3416,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:17",
												"statements": [
													{
														"assignments": [
															3395
														],
														"declarations": [
															{
																"constant": false,
																"id": 3395,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3416,
																"src": "11949:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3394,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3399,
														"initialValue": {
															"arguments": [
																{
																	"id": 3397,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3386,
																	"src": "11971:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3396,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3383,
																	3418
																],
																"referencedDeclaration": 3383,
																"src": "11966:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3400,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3395,
																"src": "11998:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3402,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3389,
																						"src": "12025:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2684",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2684",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3401,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3726,
																					"src": "12008:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2684_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3406,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3404,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3405,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3395,
																						"src": "12043:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3407,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3386,
																					"src": "12052:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3413,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3393,
														"id": 3415,
														"nodeType": "Return",
														"src": "11991:75:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3384,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:17",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "11849:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3389,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "11864:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2684",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3387,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2684,
														"src": "11864:8:17"
													},
													"referencedDeclaration": 2684,
													"src": "11864:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2684",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:17"
									},
									"returnParameters": {
										"id": 3393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "11906:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:17"
									},
									"scope": 3727,
									"src": "11835:248:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3546,
										"nodeType": "Block",
										"src": "12276:854:17",
										"statements": [
											{
												"assignments": [
													3427
												],
												"declarations": [
													{
														"constant": false,
														"id": 3427,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3546,
														"src": "12286:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3429,
												"initialValue": {
													"hexValue": "30",
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:17"
											},
											{
												"id": 3543,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "12342:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3446,
														"nodeType": "IfStatement",
														"src": "12338:103:17",
														"trueBody": {
															"id": 3445,
															"nodeType": "Block",
															"src": "12361:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3435,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3421,
																			"src": "12379:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3440,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:17"
																},
																{
																	"expression": {
																		"id": 3443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3427,
																			"src": "12414:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3444,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3447,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "12458:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3463,
														"nodeType": "IfStatement",
														"src": "12454:103:17",
														"trueBody": {
															"id": 3462,
															"nodeType": "Block",
															"src": "12477:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3452,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3421,
																			"src": "12495:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3457,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:17"
																},
																{
																	"expression": {
																		"id": 3460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3458,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3427,
																			"src": "12530:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3461,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3464,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "12574:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3480,
														"nodeType": "IfStatement",
														"src": "12570:103:17",
														"trueBody": {
															"id": 3479,
															"nodeType": "Block",
															"src": "12593:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3469,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3421,
																			"src": "12611:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3474,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:17"
																},
																{
																	"expression": {
																		"id": 3477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3475,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3427,
																			"src": "12646:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3478,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3481,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "12690:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3497,
														"nodeType": "IfStatement",
														"src": "12686:100:17",
														"trueBody": {
															"id": 3496,
															"nodeType": "Block",
															"src": "12708:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3486,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3421,
																			"src": "12726:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3491,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:17"
																},
																{
																	"expression": {
																		"id": 3494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3492,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3427,
																			"src": "12760:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3495,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3498,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "12803:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3514,
														"nodeType": "IfStatement",
														"src": "12799:100:17",
														"trueBody": {
															"id": 3513,
															"nodeType": "Block",
															"src": "12821:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3421,
																			"src": "12839:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3508,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:17"
																},
																{
																	"expression": {
																		"id": 3511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3509,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3427,
																			"src": "12873:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3512,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3515,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "12916:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3531,
														"nodeType": "IfStatement",
														"src": "12912:100:17",
														"trueBody": {
															"id": 3530,
															"nodeType": "Block",
															"src": "12934:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3520,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3421,
																			"src": "12952:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3525,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:17"
																},
																{
																	"expression": {
																		"id": 3528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3526,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3427,
																			"src": "12986:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3529,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3532,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "13029:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3542,
														"nodeType": "IfStatement",
														"src": "13025:66:17",
														"trueBody": {
															"id": 3541,
															"nodeType": "Block",
															"src": "13047:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3537,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3427,
																			"src": "13065:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3540,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3544,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3427,
													"src": "13117:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3425,
												"id": 3545,
												"nodeType": "Return",
												"src": "13110:13:17"
											}
										]
									},
									"documentation": {
										"id": 3419,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:17",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "12229:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:17"
									},
									"returnParameters": {
										"id": 3425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "12267:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:17"
									},
									"scope": 3727,
									"src": "12214:916:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3581,
										"nodeType": "Block",
										"src": "13365:170:17",
										"statements": [
											{
												"id": 3580,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:17",
												"statements": [
													{
														"assignments": [
															3559
														],
														"declarations": [
															{
																"constant": false,
																"id": 3559,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3580,
																"src": "13399:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3558,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3563,
														"initialValue": {
															"arguments": [
																{
																	"id": 3561,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3550,
																	"src": "13422:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3560,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3547,
																	3582
																],
																"referencedDeclaration": 3547,
																"src": "13416:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3564,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3559,
																"src": "13449:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3566,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3553,
																						"src": "13476:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2684",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2684",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3565,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3726,
																					"src": "13459:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2684_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3570,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3568,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3569,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3559,
																						"src": "13495:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3571,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3550,
																					"src": "13504:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3577,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3557,
														"id": 3579,
														"nodeType": "Return",
														"src": "13442:76:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3548,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:17",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3582,
												"src": "13299:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3553,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3582,
												"src": "13314:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2684",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3552,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3551,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2684,
														"src": "13314:8:17"
													},
													"referencedDeclaration": 2684,
													"src": "13314:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2684",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:17"
									},
									"returnParameters": {
										"id": 3557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3582,
												"src": "13356:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:17"
									},
									"scope": 3727,
									"src": "13284:251:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3668,
										"nodeType": "Block",
										"src": "13855:600:17",
										"statements": [
											{
												"assignments": [
													3591
												],
												"declarations": [
													{
														"constant": false,
														"id": 3591,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3668,
														"src": "13865:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3590,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3593,
												"initialValue": {
													"hexValue": "30",
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:17"
											},
											{
												"id": 3665,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3594,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3585,
																	"src": "13921:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3608,
														"nodeType": "IfStatement",
														"src": "13917:98:17",
														"trueBody": {
															"id": 3607,
															"nodeType": "Block",
															"src": "13939:76:17",
															"statements": [
																{
																	"expression": {
																		"id": 3601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3599,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3585,
																			"src": "13957:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3602,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:17"
																},
																{
																	"expression": {
																		"id": 3605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3603,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3591,
																			"src": "13988:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3606,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3609,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3585,
																	"src": "14032:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3623,
														"nodeType": "IfStatement",
														"src": "14028:95:17",
														"trueBody": {
															"id": 3622,
															"nodeType": "Block",
															"src": "14049:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3614,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3585,
																			"src": "14067:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3617,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:17"
																},
																{
																	"expression": {
																		"id": 3620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3618,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3591,
																			"src": "14097:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3621,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3624,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3585,
																	"src": "14140:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3638,
														"nodeType": "IfStatement",
														"src": "14136:95:17",
														"trueBody": {
															"id": 3637,
															"nodeType": "Block",
															"src": "14157:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3629,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3585,
																			"src": "14175:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3632,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:17"
																},
																{
																	"expression": {
																		"id": 3635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3633,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3591,
																			"src": "14205:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3636,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3585,
																	"src": "14248:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3653,
														"nodeType": "IfStatement",
														"src": "14244:95:17",
														"trueBody": {
															"id": 3652,
															"nodeType": "Block",
															"src": "14265:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3644,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3585,
																			"src": "14283:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3647,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:17"
																},
																{
																	"expression": {
																		"id": 3650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3648,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3591,
																			"src": "14313:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3651,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3585,
																	"src": "14356:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3664,
														"nodeType": "IfStatement",
														"src": "14352:64:17",
														"trueBody": {
															"id": 3663,
															"nodeType": "Block",
															"src": "14372:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3659,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3591,
																			"src": "14390:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3662,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3666,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3591,
													"src": "14442:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3589,
												"id": 3667,
												"nodeType": "Return",
												"src": "14435:13:17"
											}
										]
									},
									"documentation": {
										"id": 3583,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:17",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3669,
												"src": "13808:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:17"
									},
									"returnParameters": {
										"id": 3589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3669,
												"src": "13846:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:17"
									},
									"scope": 3727,
									"src": "13792:663:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3706,
										"nodeType": "Block",
										"src": "14692:177:17",
										"statements": [
											{
												"id": 3705,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:17",
												"statements": [
													{
														"assignments": [
															3681
														],
														"declarations": [
															{
																"constant": false,
																"id": 3681,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3705,
																"src": "14726:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3680,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3685,
														"initialValue": {
															"arguments": [
																{
																	"id": 3683,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3672,
																	"src": "14750:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3682,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3669,
																	3707
																],
																"referencedDeclaration": 3669,
																"src": "14743:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3686,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3681,
																"src": "14777:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3688,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3675,
																						"src": "14804:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2684",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2684",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3687,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3726,
																					"src": "14787:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2684_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3690,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3693,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3691,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3681,
																									"src": "14823:6:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3692,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3694,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3696,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3672,
																					"src": "14838:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3702,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3679,
														"id": 3704,
														"nodeType": "Return",
														"src": "14770:82:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3670,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:17",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3672,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3707,
												"src": "14626:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3675,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3707,
												"src": "14641:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2684",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3673,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2684,
														"src": "14641:8:17"
													},
													"referencedDeclaration": 2684,
													"src": "14641:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2684",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:17"
									},
									"returnParameters": {
										"id": 3679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3707,
												"src": "14683:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:17"
									},
									"scope": 3727,
									"src": "14610:259:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3725,
										"nodeType": "Block",
										"src": "15067:48:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3718,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3711,
																	"src": "15090:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2684",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2684",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3716,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3715,
												"id": 3724,
												"nodeType": "Return",
												"src": "15077:31:17"
											}
										]
									},
									"documentation": {
										"id": 3708,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:17",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3711,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3726,
												"src": "15019:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2684",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3709,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2684,
														"src": "15019:8:17"
													},
													"referencedDeclaration": 2684,
													"src": "15019:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2684",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:17"
									},
									"returnParameters": {
										"id": 3715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3726,
												"src": "15061:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:17"
									},
									"scope": 3727,
									"src": "14993:122:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3728,
							"src": "203:14914:17",
							"usedErrors": [
								2679
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							4039
						]
					},
					"id": 4040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3730,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:18",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 4039,
							"linearizedBaseContracts": [
								4039
							],
							"name": "SafeMath",
							"nameLocation": "490:8:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3761,
										"nodeType": "Block",
										"src": "717:140:18",
										"statements": [
											{
												"id": 3760,
												"nodeType": "UncheckedBlock",
												"src": "727:124:18",
												"statements": [
													{
														"assignments": [
															3743
														],
														"declarations": [
															{
																"constant": false,
																"id": 3743,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:18",
																"nodeType": "VariableDeclaration",
																"scope": 3760,
																"src": "751:9:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3742,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3747,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3733,
																"src": "763:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 3745,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3735,
																"src": "767:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3748,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3743,
																"src": "786:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 3749,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3733,
																"src": "790:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3755,
														"nodeType": "IfStatement",
														"src": "782:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 3752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3741,
															"id": 3754,
															"nodeType": "Return",
															"src": "793:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 3756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 3757,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3743,
																	"src": "838:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3758,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 3741,
														"id": 3759,
														"nodeType": "Return",
														"src": "824:16:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3731,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:18",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 3762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3733,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3762,
												"src": "657:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3735,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3762,
												"src": "668:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:18"
									},
									"returnParameters": {
										"id": 3741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3762,
												"src": "702:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3762,
												"src": "708:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:18"
									},
									"scope": 4039,
									"src": "641:216:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3789,
										"nodeType": "Block",
										"src": "1078:113:18",
										"statements": [
											{
												"id": 3788,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3767,
																"src": "1116:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 3775,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3765,
																"src": "1120:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3781,
														"nodeType": "IfStatement",
														"src": "1112:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 3778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3779,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3773,
															"id": 3780,
															"nodeType": "Return",
															"src": "1123:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 3782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3783,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3765,
																		"src": "1168:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 3784,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3767,
																		"src": "1172:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3786,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 3773,
														"id": 3787,
														"nodeType": "Return",
														"src": "1154:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3763,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:18",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 3790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3765,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3790,
												"src": "1018:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3767,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3790,
												"src": "1029:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:18"
									},
									"returnParameters": {
										"id": 3773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3790,
												"src": "1063:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3790,
												"src": "1069:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:18"
									},
									"scope": 4039,
									"src": "1002:189:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3831,
										"nodeType": "Block",
										"src": "1415:417:18",
										"statements": [
											{
												"id": 3830,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3793,
																"src": "1683:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3809,
														"nodeType": "IfStatement",
														"src": "1679:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 3805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 3806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3801,
															"id": 3808,
															"nodeType": "Return",
															"src": "1691:16:18"
														}
													},
													{
														"assignments": [
															3811
														],
														"declarations": [
															{
																"constant": false,
																"id": 3811,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:18",
																"nodeType": "VariableDeclaration",
																"scope": 3830,
																"src": "1721:9:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3810,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3815,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3812,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3793,
																"src": "1733:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3813,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3795,
																"src": "1737:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3816,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3811,
																	"src": "1756:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3817,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3793,
																	"src": "1760:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3819,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3795,
																"src": "1765:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3825,
														"nodeType": "IfStatement",
														"src": "1752:33:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 3822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3823,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3801,
															"id": 3824,
															"nodeType": "Return",
															"src": "1768:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 3826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 3827,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3811,
																	"src": "1813:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3828,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 3801,
														"id": 3829,
														"nodeType": "Return",
														"src": "1799:16:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3791,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:18",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 3832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3793,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3832,
												"src": "1355:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3795,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3832,
												"src": "1366:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:18"
									},
									"returnParameters": {
										"id": 3801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3832,
												"src": "1400:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3832,
												"src": "1406:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:18"
									},
									"scope": 4039,
									"src": "1339:493:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3859,
										"nodeType": "Block",
										"src": "2057:114:18",
										"statements": [
											{
												"id": 3858,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3844,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3837,
																"src": "2095:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3851,
														"nodeType": "IfStatement",
														"src": "2091:29:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 3848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3849,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3843,
															"id": 3850,
															"nodeType": "Return",
															"src": "2103:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 3852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3853,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3835,
																		"src": "2148:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3854,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3837,
																		"src": "2152:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3856,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 3843,
														"id": 3857,
														"nodeType": "Return",
														"src": "2134:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3833,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:18",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 3860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3835,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3860,
												"src": "1997:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3837,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3860,
												"src": "2008:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:18"
									},
									"returnParameters": {
										"id": 3843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3860,
												"src": "2042:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3860,
												"src": "2048:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:18"
									},
									"scope": 4039,
									"src": "1981:190:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3887,
										"nodeType": "Block",
										"src": "2406:114:18",
										"statements": [
											{
												"id": 3886,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3872,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3865,
																"src": "2444:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3879,
														"nodeType": "IfStatement",
														"src": "2440:29:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 3876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3871,
															"id": 3878,
															"nodeType": "Return",
															"src": "2452:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 3880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3881,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3863,
																		"src": "2497:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 3882,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3865,
																		"src": "2501:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3884,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 3871,
														"id": 3885,
														"nodeType": "Return",
														"src": "2483:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3861,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:18",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 3888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2346:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3865,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2357:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:18"
									},
									"returnParameters": {
										"id": 3871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2391:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2397:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:18"
									},
									"scope": 4039,
									"src": "2330:190:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3902,
										"nodeType": "Block",
										"src": "2822:29:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3898,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3891,
														"src": "2839:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3899,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3893,
														"src": "2843:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3897,
												"id": 3901,
												"nodeType": "Return",
												"src": "2832:12:18"
											}
										]
									},
									"documentation": {
										"id": 3889,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:18",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 3903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3903,
												"src": "2768:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3893,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3903,
												"src": "2779:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:18"
									},
									"returnParameters": {
										"id": 3897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3903,
												"src": "2813:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:18"
									},
									"scope": 4039,
									"src": "2755:96:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3917,
										"nodeType": "Block",
										"src": "3189:29:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3913,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3906,
														"src": "3206:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3914,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3908,
														"src": "3210:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3912,
												"id": 3916,
												"nodeType": "Return",
												"src": "3199:12:18"
											}
										]
									},
									"documentation": {
										"id": 3904,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:18",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3906,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3918,
												"src": "3135:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3908,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3918,
												"src": "3146:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:18"
									},
									"returnParameters": {
										"id": 3912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3918,
												"src": "3180:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:18"
									},
									"scope": 4039,
									"src": "3122:96:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3932,
										"nodeType": "Block",
										"src": "3532:29:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3928,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3921,
														"src": "3549:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3929,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3923,
														"src": "3553:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3927,
												"id": 3931,
												"nodeType": "Return",
												"src": "3542:12:18"
											}
										]
									},
									"documentation": {
										"id": 3919,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:18",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 3933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3933,
												"src": "3478:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3933,
												"src": "3489:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:18"
									},
									"returnParameters": {
										"id": 3927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3933,
												"src": "3523:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:18"
									},
									"scope": 4039,
									"src": "3465:96:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3947,
										"nodeType": "Block",
										"src": "3917:29:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3943,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3936,
														"src": "3934:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3944,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3938,
														"src": "3938:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3942,
												"id": 3946,
												"nodeType": "Return",
												"src": "3927:12:18"
											}
										]
									},
									"documentation": {
										"id": 3934,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:18",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3936,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3948,
												"src": "3863:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3938,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3948,
												"src": "3874:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:18"
									},
									"returnParameters": {
										"id": 3942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3948,
												"src": "3908:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:18"
									},
									"scope": 4039,
									"src": "3850:96:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3962,
										"nodeType": "Block",
										"src": "4466:29:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3958,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3951,
														"src": "4483:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 3959,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3953,
														"src": "4487:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3957,
												"id": 3961,
												"nodeType": "Return",
												"src": "4476:12:18"
											}
										]
									},
									"documentation": {
										"id": 3949,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:18",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3963,
												"src": "4412:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3963,
												"src": "4423:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:18"
									},
									"returnParameters": {
										"id": 3957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3963,
												"src": "4457:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:18"
									},
									"scope": 4039,
									"src": "4399:96:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3987,
										"nodeType": "Block",
										"src": "5054:106:18",
										"statements": [
											{
												"id": 3986,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:18",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3976,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3968,
																		"src": "5096:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 3977,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3966,
																		"src": "5101:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3979,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3970,
																	"src": "5104:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3975,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3981,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3982,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3966,
																"src": "5138:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3983,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3968,
																"src": "5142:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3974,
														"id": 3985,
														"nodeType": "Return",
														"src": "5131:12:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3964,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:18",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3966,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3988,
												"src": "4972:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3968,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3988,
												"src": "4983:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3970,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3988,
												"src": "4994:26:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3969,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:18"
									},
									"returnParameters": {
										"id": 3974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3988,
												"src": "5045:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:18"
									},
									"scope": 4039,
									"src": "4959:201:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4012,
										"nodeType": "Block",
										"src": "5739:105:18",
										"statements": [
											{
												"id": 4011,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:18",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4001,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3993,
																		"src": "5781:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 4004,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3995,
																	"src": "5788:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 4000,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 4005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 4006,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4007,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3991,
																"src": "5822:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 4008,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3993,
																"src": "5826:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3999,
														"id": 4010,
														"nodeType": "Return",
														"src": "5815:12:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3989,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:18",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 4013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 4013,
												"src": "5657:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 4013,
												"src": "5668:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3995,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 4013,
												"src": "5679:26:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3994,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:18"
									},
									"returnParameters": {
										"id": 3999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4013,
												"src": "5730:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:18"
									},
									"scope": 4039,
									"src": "5644:200:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4037,
										"nodeType": "Block",
										"src": "6585:105:18",
										"statements": [
											{
												"id": 4036,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:18",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4026,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4018,
																		"src": "6627:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 4029,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4020,
																	"src": "6634:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 4025,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 4030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 4031,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4032,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4016,
																"src": "6668:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 4033,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4018,
																"src": "6672:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4024,
														"id": 4035,
														"nodeType": "Return",
														"src": "6661:12:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4014,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:18",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 4038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 4038,
												"src": "6503:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 4038,
												"src": "6514:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4020,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 4038,
												"src": "6525:26:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:18"
									},
									"returnParameters": {
										"id": 4024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4038,
												"src": "6576:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:18"
									},
									"scope": 4039,
									"src": "6490:200:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4040,
							"src": "482:6210:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:18"
				},
				"id": 18
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							4144
						]
					},
					"id": 4145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4042,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:19",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 4144,
							"linearizedBaseContracts": [
								4144
							],
							"name": "SignedMath",
							"nameLocation": "224:10:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4059,
										"nodeType": "Block",
										"src": "376:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 4054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4052,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4045,
															"src": "393:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 4053,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4047,
															"src": "397:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 4056,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4047,
														"src": "405:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 4057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:19",
													"trueExpression": {
														"id": 4055,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4045,
														"src": "401:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4051,
												"id": 4058,
												"nodeType": "Return",
												"src": "386:20:19"
											}
										]
									},
									"documentation": {
										"id": 4043,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:19",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 4060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4045,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 4060,
												"src": "325:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4044,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4047,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 4060,
												"src": "335:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4046,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:19"
									},
									"returnParameters": {
										"id": 4051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4060,
												"src": "368:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4049,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:19"
									},
									"scope": 4144,
									"src": "312:101:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4077,
										"nodeType": "Block",
										"src": "555:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 4072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4070,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4063,
															"src": "572:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 4071,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4065,
															"src": "576:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 4074,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4065,
														"src": "584:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 4075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:19",
													"trueExpression": {
														"id": 4073,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4063,
														"src": "580:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4069,
												"id": 4076,
												"nodeType": "Return",
												"src": "565:20:19"
											}
										]
									},
									"documentation": {
										"id": 4061,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:19",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 4078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 4078,
												"src": "504:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4062,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4065,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 4078,
												"src": "514:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4064,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:19"
									},
									"returnParameters": {
										"id": 4069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4078,
												"src": "547:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4067,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:19"
									},
									"scope": 4144,
									"src": "491:101:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4121,
										"nodeType": "Block",
										"src": "797:162:19",
										"statements": [
											{
												"assignments": [
													4089
												],
												"declarations": [
													{
														"constant": false,
														"id": 4089,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 4121,
														"src": "859:8:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 4088,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4102,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4090,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "871:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 4091,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4083,
																	"src": "875:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4093,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 4096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4094,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4081,
																				"src": "882:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 4095,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4083,
																				"src": "886:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 4097,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 4098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4100,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:19"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4103,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4089,
														"src": "911:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 4108,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4089,
																						"src": "931:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 4107,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 4106,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:19",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 4109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 4110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 4104,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 4115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4113,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4081,
																				"src": "945:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 4114,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4083,
																				"src": "949:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 4116,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4087,
												"id": 4120,
												"nodeType": "Return",
												"src": "904:48:19"
											}
										]
									},
									"documentation": {
										"id": 4079,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:19",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 4122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4081,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 4122,
												"src": "746:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4080,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4083,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 4122,
												"src": "756:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4082,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:19"
									},
									"returnParameters": {
										"id": 4087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4122,
												"src": "789:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4085,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:19"
									},
									"scope": 4144,
									"src": "729:230:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4142,
										"nodeType": "Block",
										"src": "1103:158:19",
										"statements": [
											{
												"id": 4141,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:19",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 4134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4132,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4125,
																			"src": "1228:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 4133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 4137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:19",
																		"subExpression": {
																			"id": 4136,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4125,
																			"src": "1242:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 4138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:19",
																	"trueExpression": {
																		"id": 4135,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4125,
																		"src": "1237:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 4131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 4130,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 4139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4129,
														"id": 4140,
														"nodeType": "Return",
														"src": "1213:31:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4123,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:19",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 4143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4125,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 4143,
												"src": "1061:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4124,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:19"
									},
									"returnParameters": {
										"id": 4129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4143,
												"src": "1094:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:19"
									},
									"scope": 4144,
									"src": "1048:213:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4145,
							"src": "216:1047:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:19"
				},
				"id": 19
			},
			"contracts/Marketplace.sol": {
				"ast": {
					"absolutePath": "contracts/Marketplace.sol",
					"exportedSymbols": {
						"Address": [
							2286
						],
						"Context": [
							2308
						],
						"Counters": [
							2382
						],
						"ERC165": [
							2661
						],
						"ERC721": [
							1870
						],
						"GBMarketplace": [
							4993
						],
						"IERC165": [
							2673
						],
						"IERC20": [
							535
						],
						"IERC20Permit": [
							571
						],
						"IERC721": [
							1987
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							2033
						],
						"IERC721Receiver": [
							2005
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"ReentrancyGuard": [
							457
						],
						"SafeERC20": [
							861
						],
						"SafeMath": [
							4039
						],
						"Strings": [
							2637
						]
					},
					"id": 4994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 4147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4994,
							"sourceUnit": 2383,
							"src": "60:52:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 4148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4994,
							"sourceUnit": 1871,
							"src": "114:57:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 4149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4994,
							"sourceUnit": 148,
							"src": "173:52:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 4150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4994,
							"sourceUnit": 393,
							"src": "227:55:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 4151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4994,
							"sourceUnit": 458,
							"src": "284:62:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 4152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4994,
							"sourceUnit": 4040,
							"src": "348:57:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 4153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4994,
							"sourceUnit": 862,
							"src": "407:65:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4154,
										"name": "Ownable",
										"nameLocations": [
											"504:7:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "504:7:20"
									},
									"id": 4155,
									"nodeType": "InheritanceSpecifier",
									"src": "504:7:20"
								},
								{
									"baseName": {
										"id": 4156,
										"name": "Pausable",
										"nameLocations": [
											"513:8:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "513:8:20"
									},
									"id": 4157,
									"nodeType": "InheritanceSpecifier",
									"src": "513:8:20"
								},
								{
									"baseName": {
										"id": 4158,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"524:15:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "524:15:20"
									},
									"id": 4159,
									"nodeType": "InheritanceSpecifier",
									"src": "524:15:20"
								}
							],
							"canonicalName": "GBMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4993,
							"linearizedBaseContracts": [
								4993,
								457,
								392,
								147,
								2308
							],
							"name": "GBMarketplace",
							"nameLocation": "487:13:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cc4aa204",
									"id": 4162,
									"mutability": "mutable",
									"name": "ERC20",
									"nameLocation": "562:5:20",
									"nodeType": "VariableDeclaration",
									"scope": 4993,
									"src": "548:19:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$535",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 4161,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4160,
											"name": "IERC20",
											"nameLocations": [
												"548:6:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 535,
											"src": "548:6:20"
										},
										"referencedDeclaration": 535,
										"src": "548:6:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$535",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df706cbc",
									"id": 4165,
									"mutability": "mutable",
									"name": "ERCNFT",
									"nameLocation": "589:6:20",
									"nodeType": "VariableDeclaration",
									"scope": 4993,
									"src": "574:21:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$1987",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 4164,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4163,
											"name": "IERC721",
											"nameLocations": [
												"574:7:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1987,
											"src": "574:7:20"
										},
										"referencedDeclaration": 1987,
										"src": "574:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1987",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 4169,
									"libraryName": {
										"id": 4166,
										"name": "Counters",
										"nameLocations": [
											"610:8:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2382,
										"src": "610:8:20"
									},
									"nodeType": "UsingForDirective",
									"src": "604:36:20",
									"typeName": {
										"id": 4168,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4167,
											"name": "Counters.Counter",
											"nameLocations": [
												"623:8:20",
												"632:7:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2314,
											"src": "623:16:20"
										},
										"referencedDeclaration": 2314,
										"src": "623:16:20",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 4172,
									"mutability": "mutable",
									"name": "numOfListing",
									"nameLocation": "677:12:20",
									"nodeType": "VariableDeclaration",
									"scope": 4993,
									"src": "652:37:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2314_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 4171,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4170,
											"name": "Counters.Counter",
											"nameLocations": [
												"652:8:20",
												"661:7:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2314,
											"src": "652:16:20"
										},
										"referencedDeclaration": 2314,
										"src": "652:16:20",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2314_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"global": false,
									"id": 4175,
									"libraryName": {
										"id": 4173,
										"name": "SafeMath",
										"nameLocations": [
											"704:8:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4039,
										"src": "704:8:20"
									},
									"nodeType": "UsingForDirective",
									"src": "698:24:20",
									"typeName": {
										"id": 4174,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "717:4:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 4178,
									"mutability": "mutable",
									"name": "commissionPercentage",
									"nameLocation": "736:20:20",
									"nodeType": "VariableDeclaration",
									"scope": 4993,
									"src": "730:32:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4176,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "730:4:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333530",
										"id": 4177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "759:3:20",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_350_by_1",
											"typeString": "int_const 350"
										},
										"value": "350"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4180,
									"mutability": "mutable",
									"name": "comissionAmount",
									"nameLocation": "774:15:20",
									"nodeType": "VariableDeclaration",
									"scope": 4993,
									"src": "769:20:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4179,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "769:4:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4182,
									"mutability": "mutable",
									"name": "sellerAmount",
									"nameLocation": "801:12:20",
									"nodeType": "VariableDeclaration",
									"scope": 4993,
									"src": "796:17:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4181,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "796:4:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 4184,
									"mutability": "mutable",
									"name": "amountListed",
									"nameLocation": "825:12:20",
									"nodeType": "VariableDeclaration",
									"scope": 4993,
									"src": "820:17:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4183,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "820:4:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "GBMarketplace.NFTListing",
									"id": 4198,
									"members": [
										{
											"constant": false,
											"id": 4187,
											"mutability": "mutable",
											"name": "nft",
											"nameLocation": "874:3:20",
											"nodeType": "VariableDeclaration",
											"scope": 4198,
											"src": "867:10:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ERC721_$1870",
												"typeString": "contract ERC721"
											},
											"typeName": {
												"id": 4186,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4185,
													"name": "ERC721",
													"nameLocations": [
														"867:6:20"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1870,
													"src": "867:6:20"
												},
												"referencedDeclaration": 1870,
												"src": "867:6:20",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1870",
													"typeString": "contract ERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4189,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "890:7:20",
											"nodeType": "VariableDeclaration",
											"scope": 4198,
											"src": "882:15:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4188,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "882:7:20",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4191,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "907:5:20",
											"nodeType": "VariableDeclaration",
											"scope": 4198,
											"src": "902:10:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4190,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "902:4:20",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4193,
											"mutability": "mutable",
											"name": "coin",
											"nameLocation": "925:4:20",
											"nodeType": "VariableDeclaration",
											"scope": 4198,
											"src": "917:12:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4192,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "917:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4195,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "942:6:20",
											"nodeType": "VariableDeclaration",
											"scope": 4198,
											"src": "934:14:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4194,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "934:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4197,
											"mutability": "mutable",
											"name": "forSale",
											"nameLocation": "958:7:20",
											"nodeType": "VariableDeclaration",
											"scope": 4198,
											"src": "953:12:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4196,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "953:4:20",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTListing",
									"nameLocation": "849:10:20",
									"nodeType": "StructDefinition",
									"scope": 4993,
									"src": "842:127:20",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c0790eb4899023169be51dd7074a99a15959464f9a0e6b19767d8d61539b8726",
									"id": 4206,
									"name": "NftBuy",
									"nameLocation": "983:6:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4200,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "998:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4206,
												"src": "990:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4202,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1014:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 4206,
												"src": "1006:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4204,
												"indexed": false,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1029:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4206,
												"src": "1024:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1024:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:47:20"
									},
									"src": "977:60:20"
								},
								{
									"anonymous": false,
									"eventSelector": "a17cbb091e30c93c3b141a34ce5f235d614932cab631a53494443d35c87131f2",
									"id": 4214,
									"name": "transferToBuyer",
									"nameLocation": "1047:15:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4208,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "1071:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4214,
												"src": "1063:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4210,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1087:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 4214,
												"src": "1079:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4212,
												"indexed": false,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1102:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4214,
												"src": "1097:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1097:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:47:20"
									},
									"src": "1041:69:20"
								},
								{
									"anonymous": false,
									"eventSelector": "fc2e01ec8c4c53e02ee1fa8816c1692687966e0daef195be5b64c88d8e58e3ee",
									"id": 4222,
									"name": "updateToBuyer",
									"nameLocation": "1120:13:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4216,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "1142:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4222,
												"src": "1134:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4218,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1158:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 4222,
												"src": "1150:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4220,
												"indexed": false,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1173:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4222,
												"src": "1168:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1168:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:47:20"
									},
									"src": "1114:67:20"
								},
								{
									"anonymous": false,
									"eventSelector": "21149a5778ddc1afca837b00fd70c0fc0a6d1d25d1bd15bff4a84bab1eeb9a92",
									"id": 4230,
									"name": "NftList",
									"nameLocation": "1191:7:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4224,
												"indexed": false,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "1207:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 4230,
												"src": "1199:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4226,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1224:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 4230,
												"src": "1216:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4228,
												"indexed": false,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1239:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 4230,
												"src": "1234:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1234:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:45:20"
									},
									"src": "1185:59:20"
								},
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 4236,
									"name": "Deposit",
									"nameLocation": "1254:7:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4232,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1270:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4236,
												"src": "1262:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4234,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1286:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4236,
												"src": "1278:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:32:20"
									},
									"src": "1248:46:20"
								},
								{
									"constant": false,
									"functionSelector": "de74e57b",
									"id": 4241,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "1341:8:20",
									"nodeType": "VariableDeclaration",
									"scope": 4993,
									"src": "1303:46:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
										"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing)"
									},
									"typeName": {
										"id": 4240,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4237,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1311:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1303:30:20",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
											"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4239,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4238,
												"name": "NFTListing",
												"nameLocations": [
													"1322:10:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4198,
												"src": "1322:10:20"
											},
											"referencedDeclaration": 4198,
											"src": "1322:10:20",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
												"typeString": "struct GBMarketplace.NFTListing"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 4249,
										"nodeType": "Block",
										"src": "1417:2:20",
										"statements": []
									},
									"id": 4250,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4246,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4243,
													"src": "1404:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 4247,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4245,
												"name": "Ownable",
												"nameLocations": [
													"1396:7:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1396:7:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "1396:21:20"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4243,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1377:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 4250,
												"src": "1369:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:22:20"
									},
									"returnParameters": {
										"id": 4248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1417:0:20"
									},
									"scope": 4993,
									"src": "1356:63:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4277,
										"nodeType": "Block",
										"src": "1474:119:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4258,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1493:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1497:6:20",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1493:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4260,
																		"name": "listings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4241,
																		"src": "1507:8:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
																			"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
																		}
																	},
																	"id": 4262,
																	"indexExpression": {
																		"id": 4261,
																		"name": "_Id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4255,
																		"src": "1516:3:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1507:13:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
																		"typeString": "struct GBMarketplace.NFTListing storage ref"
																	}
																},
																"id": 4263,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1521:6:20",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4195,
																"src": "1507:20:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1493:34:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1485:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 4265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1485:43:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4266,
												"nodeType": "ExpressionStatement",
												"src": "1485:43:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_ERC721_$1870",
																"typeString": "contract ERC721"
															},
															"id": 4273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4268,
																"name": "_nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4253,
																"src": "1547:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC721_$1870",
																	"typeString": "contract ERC721"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4269,
																		"name": "listings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4241,
																		"src": "1555:8:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
																			"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
																		}
																	},
																	"id": 4271,
																	"indexExpression": {
																		"id": 4270,
																		"name": "_Id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4255,
																		"src": "1564:3:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1555:13:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
																		"typeString": "struct GBMarketplace.NFTListing storage ref"
																	}
																},
																"id": 4272,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1569:3:20",
																"memberName": "nft",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4187,
																"src": "1555:17:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC721_$1870",
																	"typeString": "contract ERC721"
																}
															},
															"src": "1547:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1539:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 4274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:34:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4275,
												"nodeType": "ExpressionStatement",
												"src": "1539:34:20"
											},
											{
												"id": 4276,
												"nodeType": "PlaceholderStatement",
												"src": "1584:1:20"
											}
										]
									},
									"id": 4278,
									"name": "onlyNftOwner",
									"nameLocation": "1438:12:20",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4253,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "1458:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 4278,
												"src": "1451:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1870",
													"typeString": "contract ERC721"
												},
												"typeName": {
													"id": 4252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4251,
														"name": "ERC721",
														"nameLocations": [
															"1451:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1870,
														"src": "1451:6:20"
													},
													"referencedDeclaration": 1870,
													"src": "1451:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1870",
														"typeString": "contract ERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4255,
												"mutability": "mutable",
												"name": "_Id",
												"nameLocation": "1469:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 4278,
												"src": "1464:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1464:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1450:23:20"
									},
									"src": "1429:164:20",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4286,
										"nodeType": "Block",
										"src": "1648:27:20",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4283,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1659:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 4284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1659:8:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4285,
												"nodeType": "ExpressionStatement",
												"src": "1659:8:20"
											}
										]
									},
									"functionSelector": "3ec62279",
									"id": 4287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4280,
												"name": "onlyOwner",
												"nameLocations": [
													"1638:9:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1638:9:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "1638:9:20"
										}
									],
									"name": "pauseMarketplace",
									"nameLocation": "1612:16:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:2:20"
									},
									"returnParameters": {
										"id": 4282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1648:0:20"
									},
									"scope": 4993,
									"src": "1603:72:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4295,
										"nodeType": "Block",
										"src": "1730:29:20",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4292,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "1741:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 4293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1741:10:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4294,
												"nodeType": "ExpressionStatement",
												"src": "1741:10:20"
											}
										]
									},
									"functionSelector": "21f67fbb",
									"id": 4296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4289,
												"name": "onlyOwner",
												"nameLocations": [
													"1720:9:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1720:9:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "1720:9:20"
										}
									],
									"name": "unpauseMarketplace",
									"nameLocation": "1692:18:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:20"
									},
									"returnParameters": {
										"id": 4291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:0:20"
									},
									"scope": 4993,
									"src": "1683:76:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4386,
										"nodeType": "Block",
										"src": "1856:576:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 4311,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4301,
																		"src": "1884:8:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 4309,
																		"name": "_nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4299,
																		"src": "1871:4:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC721_$1870",
																			"typeString": "contract ERC721"
																		}
																	},
																	"id": 4310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1876:7:20",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1003,
																	"src": "1871:12:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 4312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1871:22:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 4313,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1897:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1901:6:20",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1897:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1871:36:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572",
															"id": 4316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1909:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															},
															"value": "You are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															}
														],
														"id": 4308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1863:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:70:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4318,
												"nodeType": "ExpressionStatement",
												"src": "1863:70:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4320,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4303,
																"src": "1948:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1957:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1948:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e46544d61726b65743a207072696365206d7573742062652067726561746572207468616e2030",
															"id": 4323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1960:41:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15c9433dc1aea6b0d2ffba7c5d53bda6fe19decfc18282b615817a04fc48463b",
																"typeString": "literal_string \"NFTMarket: price must be greater than 0\""
															},
															"value": "NFTMarket: price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15c9433dc1aea6b0d2ffba7c5d53bda6fe19decfc18282b615817a04fc48463b",
																"typeString": "literal_string \"NFTMarket: price must be greater than 0\""
															}
														],
														"id": 4319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1940:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:62:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4325,
												"nodeType": "ExpressionStatement",
												"src": "1940:62:20"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4326,
															"name": "numOfListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4172,
															"src": "2009:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2314_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4328,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2022:9:20",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2340,
														"src": "2009:22:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2314_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 4329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:24:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4330,
												"nodeType": "ExpressionStatement",
												"src": "2009:24:20"
											},
											{
												"expression": {
													"id": 4348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4331,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4241,
															"src": "2040:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
																"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
															}
														},
														"id": 4335,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4332,
																	"name": "numOfListing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4172,
																	"src": "2049:12:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2314_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4333,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2062:7:20",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2326,
																"src": "2049:20:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2049:22:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2040:32:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
															"typeString": "struct GBMarketplace.NFTListing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4337,
																"name": "_nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4299,
																"src": "2096:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC721_$1870",
																	"typeString": "contract ERC721"
																}
															},
															{
																"id": 4338,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4301,
																"src": "2111:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4339,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4303,
																"src": "2130:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4340,
																"name": "_coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4305,
																"src": "2147:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 4343,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2171:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 4344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2175:6:20",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2171:10:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 4342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2163:8:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 4341,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2163:8:20",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 4345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2163:19:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 4346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2193:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ERC721_$1870",
																	"typeString": "contract ERC721"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 4336,
															"name": "NFTListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4198,
															"src": "2075:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFTListing_$4198_storage_ptr_$",
																"typeString": "type(struct GBMarketplace.NFTListing storage pointer)"
															}
														},
														"id": 4347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2075:130:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTListing_$4198_memory_ptr",
															"typeString": "struct GBMarketplace.NFTListing memory"
														}
													},
													"src": "2040:165:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
														"typeString": "struct GBMarketplace.NFTListing storage ref"
													}
												},
												"id": 4349,
												"nodeType": "ExpressionStatement",
												"src": "2040:165:20"
											},
											{
												"assignments": [
													4352
												],
												"declarations": [
													{
														"constant": false,
														"id": 4352,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "2231:7:20",
														"nodeType": "VariableDeclaration",
														"scope": 4386,
														"src": "2212:26:20",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
															"typeString": "struct GBMarketplace.NFTListing"
														},
														"typeName": {
															"id": 4351,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4350,
																"name": "NFTListing",
																"nameLocations": [
																	"2212:10:20"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4198,
																"src": "2212:10:20"
															},
															"referencedDeclaration": 4198,
															"src": "2212:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4358,
												"initialValue": {
													"baseExpression": {
														"id": 4353,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "2241:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
															"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
														}
													},
													"id": 4357,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4354,
																"name": "numOfListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4172,
																"src": "2250:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$2314_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 4355,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2263:7:20",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2326,
															"src": "2250:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 4356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2250:22:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2241:32:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
														"typeString": "struct GBMarketplace.NFTListing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2212:61:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2298:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2302:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2298:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4366,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2318:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GBMarketplace_$4993",
																		"typeString": "contract GBMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GBMarketplace_$4993",
																		"typeString": "contract GBMarketplace"
																	}
																],
																"id": 4365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2310:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4364,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2310:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 4367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2310:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4368,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4301,
															"src": "2325:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4359,
															"name": "_nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4299,
															"src": "2280:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1870",
																"typeString": "contract ERC721"
															}
														},
														"id": 4361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2285:12:20",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "2280:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2280:54:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4370,
												"nodeType": "ExpressionStatement",
												"src": "2280:54:20"
											},
											{
												"expression": {
													"id": 4375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4371,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4352,
															"src": "2341:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2349:7:20",
														"memberName": "forSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4197,
														"src": "2341:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 4374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2359:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2341:22:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4376,
												"nodeType": "ExpressionStatement",
												"src": "2341:22:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4378,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2383:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2387:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2383:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4380,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4301,
															"src": "2395:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4381,
																	"name": "numOfListing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4172,
																	"src": "2405:12:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2314_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4382,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2418:7:20",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2326,
																"src": "2405:20:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:22:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4377,
														"name": "NftList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4230,
														"src": "2375:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:53:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4385,
												"nodeType": "EmitStatement",
												"src": "2370:58:20"
											}
										]
									},
									"functionSelector": "d68cdc52",
									"id": 4387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "listNFT",
									"nameLocation": "1774:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4299,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "1789:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 4387,
												"src": "1782:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1870",
													"typeString": "contract ERC721"
												},
												"typeName": {
													"id": 4298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4297,
														"name": "ERC721",
														"nameLocations": [
															"1782:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1870,
														"src": "1782:6:20"
													},
													"referencedDeclaration": 1870,
													"src": "1782:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1870",
														"typeString": "contract ERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4301,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1803:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 4387,
												"src": "1795:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4303,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1818:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4387,
												"src": "1813:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4305,
												"mutability": "mutable",
												"name": "_coin",
												"nameLocation": "1834:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 4387,
												"src": "1826:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1781:59:20"
									},
									"returnParameters": {
										"id": 4307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1856:0:20"
									},
									"scope": 4993,
									"src": "1765:667:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4442,
										"nodeType": "Block",
										"src": "2672:298:20",
										"statements": [
											{
												"assignments": [
													4401
												],
												"declarations": [
													{
														"constant": false,
														"id": 4401,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "2702:7:20",
														"nodeType": "VariableDeclaration",
														"scope": 4442,
														"src": "2683:26:20",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
															"typeString": "struct GBMarketplace.NFTListing"
														},
														"typeName": {
															"id": 4400,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4399,
																"name": "NFTListing",
																"nameLocations": [
																	"2683:10:20"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4198,
																"src": "2683:10:20"
															},
															"referencedDeclaration": 4198,
															"src": "2683:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4405,
												"initialValue": {
													"baseExpression": {
														"id": 4402,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "2712:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
															"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
														}
													},
													"id": 4404,
													"indexExpression": {
														"id": 4403,
														"name": "_Id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4392,
														"src": "2721:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2712:13:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
														"typeString": "struct GBMarketplace.NFTListing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2683:42:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4407,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4401,
																	"src": "2744:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4408,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2752:6:20",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4195,
																"src": "2744:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 4409,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2762:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2766:6:20",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2762:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2744:28:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6973206e6f74207468652073656c6c6572",
															"id": 4412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2774:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c28bacdabf75d90e0006b1780430df6a1d2cb3fed04d6313bd12cd36d634787c",
																"typeString": "literal_string \"is not the seller\""
															},
															"value": "is not the seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c28bacdabf75d90e0006b1780430df6a1d2cb3fed04d6313bd12cd36d634787c",
																"typeString": "literal_string \"is not the seller\""
															}
														],
														"id": 4406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2736:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:58:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4414,
												"nodeType": "ExpressionStatement",
												"src": "2736:58:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4416,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4401,
																	"src": "2813:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4417,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2821:7:20",
																"memberName": "forSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4197,
																"src": "2813:15:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 4418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2813:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6973206e6f74206c697374656e6564",
															"id": 4420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2838:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6735dbf95389d47f014480904848604325f9aa811cb2b07128151f0b6707d7c",
																"typeString": "literal_string \"is not listened\""
															},
															"value": "is not listened"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6735dbf95389d47f014480904848604325f9aa811cb2b07128151f0b6707d7c",
																"typeString": "literal_string \"is not listened\""
															}
														],
														"id": 4415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2805:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2805:51:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4422,
												"nodeType": "ExpressionStatement",
												"src": "2805:51:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4428,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2893:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GBMarketplace_$4993",
																		"typeString": "contract GBMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GBMarketplace_$4993",
																		"typeString": "contract GBMarketplace"
																	}
																],
																"id": 4427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2885:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4426,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2885:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 4429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2885:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4430,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2900:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2904:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2900:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4432,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4401,
																"src": "2912:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																	"typeString": "struct GBMarketplace.NFTListing storage pointer"
																}
															},
															"id": 4433,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2920:7:20",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4189,
															"src": "2912:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4423,
															"name": "_nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4390,
															"src": "2867:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1870",
																"typeString": "contract ERC721"
															}
														},
														"id": 4425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2872:12:20",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "2867:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:61:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4435,
												"nodeType": "ExpressionStatement",
												"src": "2867:61:20"
											},
											{
												"expression": {
													"id": 4440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4436,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4401,
															"src": "2939:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4438,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2947:7:20",
														"memberName": "forSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4197,
														"src": "2939:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2957:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2939:23:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4441,
												"nodeType": "ExpressionStatement",
												"src": "2939:23:20"
											}
										]
									},
									"functionSelector": "98590ef9",
									"id": 4443,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4395,
													"name": "_nft",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4390,
													"src": "2661:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1870",
														"typeString": "contract ERC721"
													}
												},
												{
													"id": 4396,
													"name": "_Id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4392,
													"src": "2667:3:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 4397,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4394,
												"name": "onlyNftOwner",
												"nameLocations": [
													"2648:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4278,
												"src": "2648:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2648:23:20"
										}
									],
									"name": "cancel",
									"nameLocation": "2603:6:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4390,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "2617:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 4443,
												"src": "2610:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1870",
													"typeString": "contract ERC721"
												},
												"typeName": {
													"id": 4389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4388,
														"name": "ERC721",
														"nameLocations": [
															"2610:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1870,
														"src": "2610:6:20"
													},
													"referencedDeclaration": 1870,
													"src": "2610:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1870",
														"typeString": "contract ERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4392,
												"mutability": "mutable",
												"name": "_Id",
												"nameLocation": "2628:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 4443,
												"src": "2623:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2623:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:23:20"
									},
									"returnParameters": {
										"id": 4398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2672:0:20"
									},
									"scope": 4993,
									"src": "2594:376:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4580,
										"nodeType": "Block",
										"src": "3125:940:20",
										"statements": [
											{
												"assignments": [
													4457
												],
												"declarations": [
													{
														"constant": false,
														"id": 4457,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "3155:7:20",
														"nodeType": "VariableDeclaration",
														"scope": 4580,
														"src": "3136:26:20",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
															"typeString": "struct GBMarketplace.NFTListing"
														},
														"typeName": {
															"id": 4456,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4455,
																"name": "NFTListing",
																"nameLocations": [
																	"3136:10:20"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4198,
																"src": "3136:10:20"
															},
															"referencedDeclaration": 4198,
															"src": "3136:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4461,
												"initialValue": {
													"baseExpression": {
														"id": 4458,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "3165:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
															"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
														}
													},
													"id": 4460,
													"indexExpression": {
														"id": 4459,
														"name": "_Id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4448,
														"src": "3174:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3165:13:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
														"typeString": "struct GBMarketplace.NFTListing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3136:42:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4463,
																	"name": "_Id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4448,
																	"src": "3197:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3203:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3197:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4466,
																	"name": "_Id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4448,
																	"src": "3208:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 4467,
																			"name": "numOfListing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4172,
																			"src": "3215:12:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$2314_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 4468,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3228:7:20",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2326,
																		"src": "3215:20:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 4469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3215:22:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3208:29:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3197:40:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d20646f65736e2774206578697374",
															"id": 4472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3239:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140",
																"typeString": "literal_string \"item doesn't exist\""
															},
															"value": "item doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140",
																"typeString": "literal_string \"item doesn't exist\""
															}
														],
														"id": 4462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3189:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3189:71:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4474,
												"nodeType": "ExpressionStatement",
												"src": "3189:71:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4476,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4457,
																	"src": "3279:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4477,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3287:7:20",
																"memberName": "forSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4197,
																"src": "3279:15:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 4478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3298:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "3279:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d206973206e6f7420666f722073656c6c",
															"id": 4480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3305:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec",
																"typeString": "literal_string \"item is not for sell\""
															},
															"value": "item is not for sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec",
																"typeString": "literal_string \"item is not for sell\""
															}
														],
														"id": 4475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3271:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3271:57:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4482,
												"nodeType": "ExpressionStatement",
												"src": "3271:57:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4484,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4457,
																	"src": "3347:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4485,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3355:6:20",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4195,
																"src": "3347:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 4486,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3365:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3369:6:20",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3365:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3347:28:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f742062757920796f7572206f776e206e6674",
															"id": 4489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3377:29:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d",
																"typeString": "literal_string \"You cannot buy your own nft\""
															},
															"value": "You cannot buy your own nft"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d",
																"typeString": "literal_string \"You cannot buy your own nft\""
															}
														],
														"id": 4483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3339:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3339:68:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4491,
												"nodeType": "ExpressionStatement",
												"src": "3339:68:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_ERC721_$1870",
																"typeString": "contract ERC721"
															},
															"id": 4496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4493,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4457,
																	"src": "3426:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4494,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3434:3:20",
																"memberName": "nft",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4187,
																"src": "3426:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC721_$1870",
																	"typeString": "contract ERC721"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 4495,
																"name": "_nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4446,
																"src": "3441:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC721_$1870",
																	"typeString": "contract ERC721"
																}
															},
															"src": "3426:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d206973206e6f74207468652073616d6520636f6e74726163742061646472657373",
															"id": 4497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3447:39:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f661ee60be2fa877a71593716195b5df43b1e45b4642968f0a03f55a279dc0b",
																"typeString": "literal_string \"item is not the same contract address\""
															},
															"value": "item is not the same contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f661ee60be2fa877a71593716195b5df43b1e45b4642968f0a03f55a279dc0b",
																"typeString": "literal_string \"item is not the same contract address\""
															}
														],
														"id": 4492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3418:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3418:69:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4499,
												"nodeType": "ExpressionStatement",
												"src": "3418:69:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4501,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3506:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3510:5:20",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3506:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 4503,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4457,
																	"src": "3519:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4504,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3527:5:20",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4191,
																"src": "3519:13:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3506:26:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f7567682062616c616e636520666f722074686973207472616e73616374696f6e",
															"id": 4506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3534:41:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b930ef51d284c351242ccbfbfde4879a3afde537d75aab61455bfbc07a7188d",
																"typeString": "literal_string \"not enough balance for this transaction\""
															},
															"value": "not enough balance for this transaction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b930ef51d284c351242ccbfbfde4879a3afde537d75aab61455bfbc07a7188d",
																"typeString": "literal_string \"not enough balance for this transaction\""
															}
														],
														"id": 4500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3498:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3498:78:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4508,
												"nodeType": "ExpressionStatement",
												"src": "3498:78:20"
											},
											{
												"expression": {
													"id": 4512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4509,
														"name": "amountListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4184,
														"src": "3587:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4510,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4457,
															"src": "3602:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4511,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3610:5:20",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4191,
														"src": "3602:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3587:28:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4513,
												"nodeType": "ExpressionStatement",
												"src": "3587:28:20"
											},
											{
												"expression": {
													"id": 4522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4514,
														"name": "comissionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4180,
														"src": "3626:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3130303030",
																"id": 4520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3687:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 4517,
																		"name": "commissionPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4178,
																		"src": "3661:20:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 4515,
																		"name": "amountListed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4184,
																		"src": "3644:12:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3657:3:20",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3933,
																	"src": "3644:16:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 4518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3644:38:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3683:3:20",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3948,
															"src": "3644:42:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 4521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3644:49:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3626:67:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4523,
												"nodeType": "ExpressionStatement",
												"src": "3626:67:20"
											},
											{
												"expression": {
													"id": 4529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4524,
														"name": "sellerAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4182,
														"src": "3704:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4527,
																"name": "comissionAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4180,
																"src": "3736:15:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 4525,
																"name": "amountListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4184,
																"src": "3719:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3732:3:20",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3918,
															"src": "3719:16:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 4528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3719:33:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3704:48:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4530,
												"nodeType": "ExpressionStatement",
												"src": "3704:48:20"
											},
											{
												"expression": {
													"id": 4536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4531,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4162,
														"src": "3763:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$535",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 4533,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4457,
																	"src": "3778:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4534,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3786:4:20",
																"memberName": "coin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4193,
																"src": "3778:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 4532,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3771:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$535_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 4535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3771:20:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$535",
															"typeString": "contract IERC20"
														}
													},
													"src": "3763:28:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"id": 4537,
												"nodeType": "ExpressionStatement",
												"src": "3763:28:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4541,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4457,
																"src": "3817:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																	"typeString": "struct GBMarketplace.NFTListing storage pointer"
																}
															},
															"id": 4542,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3825:6:20",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4195,
															"src": "3817:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4543,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4182,
															"src": "3833:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4538,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4162,
															"src": "3802:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															}
														},
														"id": 4540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3808:8:20",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "3802:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 4544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:44:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4545,
												"nodeType": "ExpressionStatement",
												"src": "3802:44:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4551,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3885:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GBMarketplace_$4993",
																		"typeString": "contract GBMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GBMarketplace_$4993",
																		"typeString": "contract GBMarketplace"
																	}
																],
																"id": 4550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3877:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4549,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3877:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 4552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3877:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4553,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3892:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3896:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3892:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4555,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4457,
																"src": "3904:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																	"typeString": "struct GBMarketplace.NFTListing storage pointer"
																}
															},
															"id": 4556,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3912:7:20",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4189,
															"src": "3904:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4546,
															"name": "_nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4446,
															"src": "3859:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1870",
																"typeString": "contract ERC721"
															}
														},
														"id": 4548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3864:12:20",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "3859:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:61:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4558,
												"nodeType": "ExpressionStatement",
												"src": "3859:61:20"
											},
											{
												"expression": {
													"id": 4564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4559,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4457,
															"src": "3931:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4561,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3939:6:20",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4195,
														"src": "3931:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4562,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3948:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3952:6:20",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3948:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3931:27:20",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4565,
												"nodeType": "ExpressionStatement",
												"src": "3931:27:20"
											},
											{
												"expression": {
													"id": 4570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4566,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4457,
															"src": "3969:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3977:7:20",
														"memberName": "forSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4197,
														"src": "3969:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3987:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3969:23:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4571,
												"nodeType": "ExpressionStatement",
												"src": "3969:23:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4573,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4015:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4019:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4015:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4575,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4457,
																"src": "4027:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																	"typeString": "struct GBMarketplace.NFTListing storage pointer"
																}
															},
															"id": 4576,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4035:7:20",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4189,
															"src": "4027:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4577,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4182,
															"src": "4044:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4572,
														"name": "NftBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4206,
														"src": "4008:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4008:49:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4579,
												"nodeType": "EmitStatement",
												"src": "4003:54:20"
											}
										]
									},
									"functionSelector": "a82ba76f",
									"id": 4581,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4450,
												"name": "whenNotPaused",
												"nameLocations": [
													"3098:13:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "3098:13:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "3098:13:20"
										},
										{
											"id": 4453,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4452,
												"name": "nonReentrant",
												"nameLocations": [
													"3112:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "3112:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "3112:12:20"
										}
									],
									"name": "buyNFT",
									"nameLocation": "3053:6:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4446,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "3067:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 4581,
												"src": "3060:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1870",
													"typeString": "contract ERC721"
												},
												"typeName": {
													"id": 4445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4444,
														"name": "ERC721",
														"nameLocations": [
															"3060:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1870,
														"src": "3060:6:20"
													},
													"referencedDeclaration": 1870,
													"src": "3060:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1870",
														"typeString": "contract ERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4448,
												"mutability": "mutable",
												"name": "_Id",
												"nameLocation": "3078:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 4581,
												"src": "3073:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3073:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3059:23:20"
									},
									"returnParameters": {
										"id": 4454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3125:0:20"
									},
									"scope": 4993,
									"src": "3044:1021:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4686,
										"nodeType": "Block",
										"src": "4207:761:20",
										"statements": [
											{
												"assignments": [
													4592
												],
												"declarations": [
													{
														"constant": false,
														"id": 4592,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "4237:7:20",
														"nodeType": "VariableDeclaration",
														"scope": 4686,
														"src": "4218:26:20",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
															"typeString": "struct GBMarketplace.NFTListing"
														},
														"typeName": {
															"id": 4591,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4590,
																"name": "NFTListing",
																"nameLocations": [
																	"4218:10:20"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4198,
																"src": "4218:10:20"
															},
															"referencedDeclaration": 4198,
															"src": "4218:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4596,
												"initialValue": {
													"baseExpression": {
														"id": 4593,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "4247:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
															"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
														}
													},
													"id": 4595,
													"indexExpression": {
														"id": 4594,
														"name": "_listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4583,
														"src": "4256:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4247:20:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
														"typeString": "struct GBMarketplace.NFTListing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4218:49:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4598,
																	"name": "_listingId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4583,
																	"src": "4286:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4299:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4286:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4601,
																	"name": "_listingId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4583,
																	"src": "4304:10:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 4602,
																			"name": "numOfListing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4172,
																			"src": "4318:12:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$2314_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 4603,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4331:7:20",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2326,
																		"src": "4318:20:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 4604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4318:22:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4304:36:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4286:54:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d20646f65736e2774206578697374",
															"id": 4607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4342:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140",
																"typeString": "literal_string \"item doesn't exist\""
															},
															"value": "item doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140",
																"typeString": "literal_string \"item doesn't exist\""
															}
														],
														"id": 4597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4278:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4278:85:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4609,
												"nodeType": "ExpressionStatement",
												"src": "4278:85:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4611,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4592,
																	"src": "4382:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4612,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4390:7:20",
																"memberName": "forSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4197,
																"src": "4382:15:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 4613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4401:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "4382:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d206973206e6f7420666f722073656c6c",
															"id": 4615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4408:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec",
																"typeString": "literal_string \"item is not for sell\""
															},
															"value": "item is not for sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec",
																"typeString": "literal_string \"item is not for sell\""
															}
														],
														"id": 4610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4374:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4374:57:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4617,
												"nodeType": "ExpressionStatement",
												"src": "4374:57:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4619,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4592,
																	"src": "4450:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4620,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4458:6:20",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4195,
																"src": "4450:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 4621,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4468:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4472:6:20",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4468:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4450:28:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f742062757920796f7572206f776e206e6674",
															"id": 4624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4480:29:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d",
																"typeString": "literal_string \"You cannot buy your own nft\""
															},
															"value": "You cannot buy your own nft"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d",
																"typeString": "literal_string \"You cannot buy your own nft\""
															}
														],
														"id": 4618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4442:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4442:68:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4626,
												"nodeType": "ExpressionStatement",
												"src": "4442:68:20"
											},
											{
												"expression": {
													"id": 4630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4627,
														"name": "amountListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4184,
														"src": "4523:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4628,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4592,
															"src": "4538:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4629,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4546:5:20",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4191,
														"src": "4538:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4523:28:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4631,
												"nodeType": "ExpressionStatement",
												"src": "4523:28:20"
											},
											{
												"expression": {
													"id": 4640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4632,
														"name": "comissionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4180,
														"src": "4562:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3130303030",
																"id": 4638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4623:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 4635,
																		"name": "commissionPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4178,
																		"src": "4597:20:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 4633,
																		"name": "amountListed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4184,
																		"src": "4580:12:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 4634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4593:3:20",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3933,
																	"src": "4580:16:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 4636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4580:38:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4619:3:20",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3948,
															"src": "4580:42:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 4639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4580:49:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4562:67:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4641,
												"nodeType": "ExpressionStatement",
												"src": "4562:67:20"
											},
											{
												"expression": {
													"id": 4647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4642,
														"name": "sellerAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4182,
														"src": "4640:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4645,
																"name": "comissionAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4180,
																"src": "4672:15:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 4643,
																"name": "amountListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4184,
																"src": "4655:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4668:3:20",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3918,
															"src": "4655:16:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 4646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4655:33:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4640:48:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4648,
												"nodeType": "ExpressionStatement",
												"src": "4640:48:20"
											},
											{
												"expression": {
													"id": 4654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4649,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4162,
														"src": "4701:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$535",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 4651,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4592,
																	"src": "4716:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4652,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4724:4:20",
																"memberName": "coin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4193,
																"src": "4716:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 4650,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4709:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$535_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 4653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4709:20:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$535",
															"typeString": "contract IERC20"
														}
													},
													"src": "4701:28:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"id": 4655,
												"nodeType": "ExpressionStatement",
												"src": "4701:28:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4659,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4592,
																"src": "4755:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																	"typeString": "struct GBMarketplace.NFTListing storage pointer"
																}
															},
															"id": 4660,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4763:6:20",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4195,
															"src": "4755:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4661,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4182,
															"src": "4771:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4656,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4162,
															"src": "4740:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															}
														},
														"id": 4658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4746:8:20",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "4740:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 4662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4740:44:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4663,
												"nodeType": "ExpressionStatement",
												"src": "4740:44:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4667,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4810:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4814:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4810:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4669,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4182,
															"src": "4822:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4664,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4162,
															"src": "4795:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															}
														},
														"id": 4666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4801:8:20",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "4795:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 4670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4795:40:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4671,
												"nodeType": "ExpressionStatement",
												"src": "4795:40:20"
											},
											{
												"expression": {
													"id": 4676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4672,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4592,
															"src": "4872:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4880:7:20",
														"memberName": "forSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4197,
														"src": "4872:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4890:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4872:23:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4677,
												"nodeType": "ExpressionStatement",
												"src": "4872:23:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4679,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4918:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4922:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4918:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4681,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4592,
																"src": "4930:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																	"typeString": "struct GBMarketplace.NFTListing storage pointer"
																}
															},
															"id": 4682,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4938:7:20",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4189,
															"src": "4930:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4683,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4182,
															"src": "4947:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4678,
														"name": "NftBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4206,
														"src": "4911:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:49:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4685,
												"nodeType": "EmitStatement",
												"src": "4906:54:20"
											}
										]
									},
									"functionSelector": "249e10c5",
									"id": 4687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4585,
												"name": "whenNotPaused",
												"nameLocations": [
													"4180:13:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "4180:13:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "4180:13:20"
										},
										{
											"id": 4588,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4587,
												"name": "nonReentrant",
												"nameLocations": [
													"4194:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "4194:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "4194:12:20"
										}
									],
									"name": "transferNFT",
									"nameLocation": "4141:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4583,
												"mutability": "mutable",
												"name": "_listingId",
												"nameLocation": "4161:10:20",
												"nodeType": "VariableDeclaration",
												"scope": 4687,
												"src": "4153:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4153:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4152:20:20"
									},
									"returnParameters": {
										"id": 4589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4207:0:20"
									},
									"scope": 4993,
									"src": "4132:836:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4767,
										"nodeType": "Block",
										"src": "5140:506:20",
										"statements": [
											{
												"assignments": [
													4705
												],
												"declarations": [
													{
														"constant": false,
														"id": 4705,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "5170:7:20",
														"nodeType": "VariableDeclaration",
														"scope": 4767,
														"src": "5151:26:20",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
															"typeString": "struct GBMarketplace.NFTListing"
														},
														"typeName": {
															"id": 4704,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4703,
																"name": "NFTListing",
																"nameLocations": [
																	"5151:10:20"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4198,
																"src": "5151:10:20"
															},
															"referencedDeclaration": 4198,
															"src": "5151:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4709,
												"initialValue": {
													"baseExpression": {
														"id": 4706,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "5180:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
															"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
														}
													},
													"id": 4708,
													"indexExpression": {
														"id": 4707,
														"name": "_Id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4692,
														"src": "5189:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5180:13:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
														"typeString": "struct GBMarketplace.NFTListing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5151:42:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4711,
																	"name": "_Id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4692,
																	"src": "5212:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5218:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5212:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4714,
																	"name": "_Id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4692,
																	"src": "5223:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 4715,
																			"name": "numOfListing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4172,
																			"src": "5230:12:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$2314_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 4716,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5243:7:20",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2326,
																		"src": "5230:20:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 4717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5230:22:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5223:29:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5212:40:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d20646f65736e2774206578697374",
															"id": 4720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5254:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140",
																"typeString": "literal_string \"item doesn't exist\""
															},
															"value": "item doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_691d6967fb4faf24f781f720558bfc91c7cbc665261695da75d77b6775ede140",
																"typeString": "literal_string \"item doesn't exist\""
															}
														],
														"id": 4710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5204:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5204:71:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4722,
												"nodeType": "ExpressionStatement",
												"src": "5204:71:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4724,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4705,
																	"src": "5294:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4725,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5302:7:20",
																"memberName": "forSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4197,
																"src": "5294:15:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 4726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5313:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "5294:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d206973206e6f7420666f722073656c6c",
															"id": 4728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5320:22:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec",
																"typeString": "literal_string \"item is not for sell\""
															},
															"value": "item is not for sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbbaacd9e27b43d123cd6f46cd6d045e43137c646bc67a6937d22d710e4eabec",
																"typeString": "literal_string \"item is not for sell\""
															}
														],
														"id": 4723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5286:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5286:57:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4730,
												"nodeType": "ExpressionStatement",
												"src": "5286:57:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4732,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4705,
																	"src": "5362:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4733,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5370:6:20",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4195,
																"src": "5362:14:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 4734,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4694,
																"src": "5380:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5362:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f742062757920796f7572206f776e206e6674",
															"id": 4736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:29:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d",
																"typeString": "literal_string \"You cannot buy your own nft\""
															},
															"value": "You cannot buy your own nft"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2ee4b350565fd9c66ec35bdfc27382f1d3f1ec40959ddac388859b75baf1f3d",
																"typeString": "literal_string \"You cannot buy your own nft\""
															}
														],
														"id": 4731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:65:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4738,
												"nodeType": "ExpressionStatement",
												"src": "5354:65:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_ERC721_$1870",
																"typeString": "contract ERC721"
															},
															"id": 4743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4740,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4705,
																	"src": "5438:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing storage pointer"
																	}
																},
																"id": 4741,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5446:3:20",
																"memberName": "nft",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4187,
																"src": "5438:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC721_$1870",
																	"typeString": "contract ERC721"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 4742,
																"name": "_nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4690,
																"src": "5453:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC721_$1870",
																	"typeString": "contract ERC721"
																}
															},
															"src": "5438:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d206973206e6f74207468652073616d6520636f6e74726163742061646472657373",
															"id": 4744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5459:39:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f661ee60be2fa877a71593716195b5df43b1e45b4642968f0a03f55a279dc0b",
																"typeString": "literal_string \"item is not the same contract address\""
															},
															"value": "item is not the same contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f661ee60be2fa877a71593716195b5df43b1e45b4642968f0a03f55a279dc0b",
																"typeString": "literal_string \"item is not the same contract address\""
															}
														],
														"id": 4739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5430:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5430:69:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4746,
												"nodeType": "ExpressionStatement",
												"src": "5430:69:20"
											},
											{
												"expression": {
													"id": 4751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4747,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4705,
															"src": "5510:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4749,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5518:6:20",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4195,
														"src": "5510:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4750,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4694,
														"src": "5527:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5510:24:20",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4752,
												"nodeType": "ExpressionStatement",
												"src": "5510:24:20"
											},
											{
												"expression": {
													"id": 4757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4753,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4705,
															"src": "5545:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																"typeString": "struct GBMarketplace.NFTListing storage pointer"
															}
														},
														"id": 4755,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5553:7:20",
														"memberName": "forSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4197,
														"src": "5545:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5563:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5545:23:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4758,
												"nodeType": "ExpressionStatement",
												"src": "5545:23:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4760,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4694,
															"src": "5598:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4761,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4705,
																"src": "5607:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																	"typeString": "struct GBMarketplace.NFTListing storage pointer"
																}
															},
															"id": 4762,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5615:7:20",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4189,
															"src": "5607:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4763,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4705,
																"src": "5624:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																	"typeString": "struct GBMarketplace.NFTListing storage pointer"
																}
															},
															"id": 4764,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5632:5:20",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4191,
															"src": "5624:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4759,
														"name": "updateToBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4222,
														"src": "5584:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5584:54:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4766,
												"nodeType": "EmitStatement",
												"src": "5579:59:20"
											}
										]
									},
									"functionSelector": "925a9953",
									"id": 4768,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4697,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4696,
												"name": "whenNotPaused",
												"nameLocations": [
													"5103:13:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "5103:13:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "5103:13:20"
										},
										{
											"id": 4699,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4698,
												"name": "nonReentrant",
												"nameLocations": [
													"5117:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "5117:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "5117:12:20"
										},
										{
											"id": 4701,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4700,
												"name": "onlyOwner",
												"nameLocations": [
													"5130:9:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5130:9:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "5130:9:20"
										}
									],
									"name": "updateNFT",
									"nameLocation": "5046:9:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4690,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "5063:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 4768,
												"src": "5056:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1870",
													"typeString": "contract ERC721"
												},
												"typeName": {
													"id": 4689,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4688,
														"name": "ERC721",
														"nameLocations": [
															"5056:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1870,
														"src": "5056:6:20"
													},
													"referencedDeclaration": 1870,
													"src": "5056:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1870",
														"typeString": "contract ERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4692,
												"mutability": "mutable",
												"name": "_Id",
												"nameLocation": "5074:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 4768,
												"src": "5069:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4691,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5069:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4694,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "5087:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 4768,
												"src": "5079:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5079:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5055:40:20"
									},
									"returnParameters": {
										"id": 4702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5140:0:20"
									},
									"scope": 4993,
									"src": "5037:609:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4825,
										"nodeType": "Block",
										"src": "5818:323:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4782,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4770,
																"src": "5837:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 4783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5837:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742063616e6e6f74206265207a65726f",
															"id": 4785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5851:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b",
																"typeString": "literal_string \"Amount cannot be zero\""
															},
															"value": "Amount cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b",
																"typeString": "literal_string \"Amount cannot be zero\""
															}
														],
														"id": 4781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5829:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5829:46:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4787,
												"nodeType": "ExpressionStatement",
												"src": "5829:46:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4789,
																"name": "_ERC20Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4772,
																"src": "5894:13:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 4792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5919:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 4791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5911:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4790,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5911:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 4793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5911:10:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5894:27:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243323020616464726573732063616e6e6f74206265207a65726f2061646472657373",
															"id": 4795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5923:38:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a23279b622caed07dd1bb467a739f2ca284330500cb944389f4b28a24305693",
																"typeString": "literal_string \"ERC20 address cannot be zero address\""
															},
															"value": "ERC20 address cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a23279b622caed07dd1bb467a739f2ca284330500cb944389f4b28a24305693",
																"typeString": "literal_string \"ERC20 address cannot be zero address\""
															}
														],
														"id": 4788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5886:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:76:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4797,
												"nodeType": "ExpressionStatement",
												"src": "5886:76:20"
											},
											{
												"expression": {
													"id": 4802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4798,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4162,
														"src": "5973:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$535",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4800,
																"name": "_ERC20Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4772,
																"src": "5988:13:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 4799,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "5981:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$535_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 4801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5981:21:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$535",
															"typeString": "contract IERC20"
														}
													},
													"src": "5973:29:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$535",
														"typeString": "contract IERC20"
													}
												},
												"id": 4803,
												"nodeType": "ExpressionStatement",
												"src": "5973:29:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4805,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4770,
																"src": "6021:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 4810,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6056:4:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GBMarketplace_$4993",
																					"typeString": "contract GBMarketplace"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_GBMarketplace_$4993",
																					"typeString": "contract GBMarketplace"
																				}
																			],
																			"id": 4809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6048:7:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 4808,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6048:7:20",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 4811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6048:13:20",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 4806,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4162,
																		"src": "6032:5:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$535",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 4807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6038:9:20",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 492,
																	"src": "6032:15:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 4812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6032:30:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:41:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e64732e",
															"id": 4814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6064:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
																"typeString": "literal_string \"Insufficient funds.\""
															},
															"value": "Insufficient funds."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
																"typeString": "literal_string \"Insufficient funds.\""
															}
														],
														"id": 4804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6013:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:73:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4816,
												"nodeType": "ExpressionStatement",
												"src": "6013:73:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4820,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6112:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6116:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6112:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4822,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4770,
															"src": "6125:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4817,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4162,
															"src": "6097:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$535",
																"typeString": "contract IERC20"
															}
														},
														"id": 4819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6103:8:20",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "6097:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 4823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6097:36:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4824,
												"nodeType": "ExpressionStatement",
												"src": "6097:36:20"
											}
										]
									},
									"functionSelector": "6ee4c120",
									"id": 4826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4775,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4774,
												"name": "whenNotPaused",
												"nameLocations": [
													"5781:13:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "5781:13:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "5781:13:20"
										},
										{
											"id": 4777,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4776,
												"name": "nonReentrant",
												"nameLocations": [
													"5795:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "5795:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "5795:12:20"
										},
										{
											"id": 4779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4778,
												"name": "onlyOwner",
												"nameLocations": [
													"5808:9:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5808:9:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "5808:9:20"
										}
									],
									"name": "transferOrWithdraw",
									"nameLocation": "5717:18:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4770,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5742:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 4826,
												"src": "5737:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4769,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5737:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4772,
												"mutability": "mutable",
												"name": "_ERC20Address",
												"nameLocation": "5759:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 4826,
												"src": "5751:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5751:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5736:37:20"
									},
									"returnParameters": {
										"id": 4780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5818:0:20"
									},
									"scope": 4993,
									"src": "5708:433:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4837,
										"nodeType": "Block",
										"src": "6248:46:20",
										"statements": [
											{
												"expression": {
													"id": 4835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4833,
														"name": "commissionPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4178,
														"src": "6259:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4834,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4828,
														"src": "6282:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6259:29:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4836,
												"nodeType": "ExpressionStatement",
												"src": "6259:29:20"
											}
										]
									},
									"functionSelector": "9cefe029",
									"id": 4838,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4830,
												"name": "onlyOwner",
												"nameLocations": [
													"6239:9:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6239:9:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "6239:9:20"
										}
									],
									"name": "updateComissionPercentage",
									"nameLocation": "6190:25:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4828,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "6224:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 4838,
												"src": "6216:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6216:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6215:16:20"
									},
									"returnParameters": {
										"id": 4832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6248:0:20"
									},
									"scope": 4993,
									"src": "6181:113:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4848,
										"nodeType": "Block",
										"src": "6329:54:20",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4842,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6353:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6357:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6353:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4844,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6365:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6369:5:20",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6365:9:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4841,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4236,
														"src": "6345:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6345:30:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4847,
												"nodeType": "EmitStatement",
												"src": "6340:35:20"
											}
										]
									},
									"id": 4849,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6309:2:20"
									},
									"returnParameters": {
										"id": 4840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6329:0:20"
									},
									"scope": 4993,
									"src": "6302:81:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4861,
										"nodeType": "Block",
										"src": "6526:39:20",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 4857,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "6544:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
															"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
														}
													},
													"id": 4859,
													"indexExpression": {
														"id": 4858,
														"name": "_Id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4851,
														"src": "6553:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6544:13:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
														"typeString": "struct GBMarketplace.NFTListing storage ref"
													}
												},
												"functionReturnParameters": 4856,
												"id": 4860,
												"nodeType": "Return",
												"src": "6537:20:20"
											}
										]
									},
									"functionSelector": "0ea59c4b",
									"id": 4862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNFTListing",
									"nameLocation": "6462:13:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4851,
												"mutability": "mutable",
												"name": "_Id",
												"nameLocation": "6481:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 4862,
												"src": "6476:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6476:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6475:10:20"
									},
									"returnParameters": {
										"id": 4856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4862,
												"src": "6507:17:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NFTListing_$4198_memory_ptr",
													"typeString": "struct GBMarketplace.NFTListing"
												},
												"typeName": {
													"id": 4854,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4853,
														"name": "NFTListing",
														"nameLocations": [
															"6507:10:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4198,
														"src": "6507:10:20"
													},
													"referencedDeclaration": 4198,
													"src": "6507:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
														"typeString": "struct GBMarketplace.NFTListing"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6506:19:20"
									},
									"scope": 4993,
									"src": "6453:112:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4871,
										"nodeType": "Block",
										"src": "6660:48:20",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4867,
															"name": "numOfListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4172,
															"src": "6678:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2314_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4868,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6691:7:20",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2326,
														"src": "6678:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 4869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6678:22:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4866,
												"id": 4870,
												"nodeType": "Return",
												"src": "6671:29:20"
											}
										]
									},
									"functionSelector": "c85d5262",
									"id": 4872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getListinglength",
									"nameLocation": "6614:16:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6630:2:20"
									},
									"returnParameters": {
										"id": 4866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4872,
												"src": "6654:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4864,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6654:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6653:6:20"
									},
									"scope": 4993,
									"src": "6605:103:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4879,
										"nodeType": "Block",
										"src": "6815:44:20",
										"statements": [
											{
												"expression": {
													"id": 4877,
													"name": "commissionPercentage",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4178,
													"src": "6831:20:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4876,
												"id": 4878,
												"nodeType": "Return",
												"src": "6824:27:20"
											}
										]
									},
									"functionSelector": "65a19c20",
									"id": 4880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getComissionPercentage",
									"nameLocation": "6761:22:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6783:2:20"
									},
									"returnParameters": {
										"id": 4876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4880,
												"src": "6807:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6807:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6806:9:20"
									},
									"scope": 4993,
									"src": "6752:107:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4944,
										"nodeType": "Block",
										"src": "6978:616:20",
										"statements": [
											{
												"assignments": [
													4891
												],
												"declarations": [
													{
														"constant": false,
														"id": 4891,
														"mutability": "mutable",
														"name": "found",
														"nameLocation": "6990:5:20",
														"nodeType": "VariableDeclaration",
														"scope": 4944,
														"src": "6985:10:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 4890,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6985:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4893,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 4892,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6998:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6985:18:20"
											},
											{
												"assignments": [
													4895
												],
												"declarations": [
													{
														"constant": false,
														"id": 4895,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "7069:1:20",
														"nodeType": "VariableDeclaration",
														"scope": 4944,
														"src": "7061:9:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7061:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4896,
												"nodeType": "VariableDeclarationStatement",
												"src": "7061:9:20"
											},
											{
												"body": {
													"id": 4934,
													"nodeType": "Block",
													"src": "7176:227:20",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 4926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 4921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_contract$_ERC721_$1870",
																			"typeString": "contract ERC721"
																		},
																		"id": 4914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4909,
																					"name": "listings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4241,
																					"src": "7191:8:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
																						"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
																					}
																				},
																				"id": 4911,
																				"indexExpression": {
																					"id": 4910,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4895,
																					"src": "7200:1:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7191:11:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
																					"typeString": "struct GBMarketplace.NFTListing storage ref"
																				}
																			},
																			"id": 4912,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7203:3:20",
																			"memberName": "nft",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4187,
																			"src": "7191:15:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC721_$1870",
																				"typeString": "contract ERC721"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 4913,
																			"name": "_nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4883,
																			"src": "7210:4:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC721_$1870",
																				"typeString": "contract ERC721"
																			}
																		},
																		"src": "7191:23:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4915,
																					"name": "listings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4241,
																					"src": "7218:8:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
																						"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
																					}
																				},
																				"id": 4917,
																				"indexExpression": {
																					"id": 4916,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4895,
																					"src": "7227:1:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7218:11:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
																					"typeString": "struct GBMarketplace.NFTListing storage ref"
																				}
																			},
																			"id": 4918,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7230:7:20",
																			"memberName": "tokenId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4189,
																			"src": "7218:19:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 4919,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4885,
																			"src": "7241:8:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7218:31:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7191:58:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4922,
																			"name": "listings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4241,
																			"src": "7253:8:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
																				"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
																			}
																		},
																		"id": 4924,
																		"indexExpression": {
																			"id": 4923,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4895,
																			"src": "7262:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7253:11:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
																			"typeString": "struct GBMarketplace.NFTListing storage ref"
																		}
																	},
																	"id": 4925,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7265:7:20",
																	"memberName": "forSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4197,
																	"src": "7253:19:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7191:81:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4933,
															"nodeType": "IfStatement",
															"src": "7187:209:20",
															"trueBody": {
																"id": 4932,
																"nodeType": "Block",
																"src": "7274:122:20",
																"statements": [
																	{
																		"expression": {
																			"id": 4929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 4927,
																				"name": "found",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4891,
																				"src": "7289:5:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 4928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7297:4:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "7289:12:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 4930,
																		"nodeType": "ExpressionStatement",
																		"src": "7289:12:20"
																	},
																	{
																		"id": 4931,
																		"nodeType": "Break",
																		"src": "7361:5:20"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4901,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4895,
														"src": "7142:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4902,
																"name": "numOfListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4172,
																"src": "7147:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$2314_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 4903,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7160:7:20",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2326,
															"src": "7147:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 4904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7147:22:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7142:27:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4935,
												"initializationExpression": {
													"expression": {
														"id": 4899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4897,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4895,
															"src": "7135:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 4898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7139:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7135:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4900,
													"nodeType": "ExpressionStatement",
													"src": "7135:5:20"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7171:3:20",
														"subExpression": {
															"id": 4906,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4895,
															"src": "7171:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4908,
													"nodeType": "ExpressionStatement",
													"src": "7171:3:20"
												},
												"nodeType": "ForStatement",
												"src": "7130:273:20"
											},
											{
												"condition": {
													"id": 4937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7499:6:20",
													"subExpression": {
														"id": 4936,
														"name": "found",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4891,
														"src": "7500:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4941,
												"nodeType": "IfStatement",
												"src": "7495:39:20",
												"trueBody": {
													"id": 4940,
													"nodeType": "Block",
													"src": "7507:27:20",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 4938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7525:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 4889,
															"id": 4939,
															"nodeType": "Return",
															"src": "7518:8:20"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4942,
													"name": "i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4895,
													"src": "7549:1:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4889,
												"id": 4943,
												"nodeType": "Return",
												"src": "7542:8:20"
											}
										]
									},
									"functionSelector": "cf02976f",
									"id": 4945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIdListed",
									"nameLocation": "6905:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4883,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "6924:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 4945,
												"src": "6917:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1870",
													"typeString": "contract ERC721"
												},
												"typeName": {
													"id": 4882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4881,
														"name": "ERC721",
														"nameLocations": [
															"6917:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1870,
														"src": "6917:6:20"
													},
													"referencedDeclaration": 1870,
													"src": "6917:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1870",
														"typeString": "contract ERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4885,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "6938:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 4945,
												"src": "6930:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6930:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6916:31:20"
									},
									"returnParameters": {
										"id": 4889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4945,
												"src": "6969:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6969:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:9:20"
									},
									"scope": 4993,
									"src": "6896:698:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4991,
										"nodeType": "Block",
										"src": "7715:238:20",
										"statements": [
											{
												"body": {
													"id": 4987,
													"nodeType": "Block",
													"src": "7773:160:20",
													"statements": [
														{
															"assignments": [
																4969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4969,
																	"mutability": "mutable",
																	"name": "listing",
																	"nameLocation": "7803:7:20",
																	"nodeType": "VariableDeclaration",
																	"scope": 4987,
																	"src": "7784:26:20",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																		"typeString": "struct GBMarketplace.NFTListing"
																	},
																	"typeName": {
																		"id": 4968,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 4967,
																			"name": "NFTListing",
																			"nameLocations": [
																				"7784:10:20"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 4198,
																			"src": "7784:10:20"
																		},
																		"referencedDeclaration": 4198,
																		"src": "7784:10:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																			"typeString": "struct GBMarketplace.NFTListing"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4973,
															"initialValue": {
																"baseExpression": {
																	"id": 4970,
																	"name": "listings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4241,
																	"src": "7813:8:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTListing_$4198_storage_$",
																		"typeString": "mapping(uint256 => struct GBMarketplace.NFTListing storage ref)"
																	}
																},
																"id": 4972,
																"indexExpression": {
																	"id": 4971,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4956,
																	"src": "7822:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7813:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTListing_$4198_storage",
																	"typeString": "struct GBMarketplace.NFTListing storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7784:40:20"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 4982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_contract$_ERC721_$1870",
																		"typeString": "contract ERC721"
																	},
																	"id": 4977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 4974,
																			"name": "listing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4969,
																			"src": "7839:7:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																				"typeString": "struct GBMarketplace.NFTListing storage pointer"
																			}
																		},
																		"id": 4975,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7847:3:20",
																		"memberName": "nft",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4187,
																		"src": "7839:11:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC721_$1870",
																			"typeString": "contract ERC721"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 4976,
																		"name": "_nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4948,
																		"src": "7854:4:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC721_$1870",
																			"typeString": "contract ERC721"
																		}
																	},
																	"src": "7839:19:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 4978,
																			"name": "listing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4969,
																			"src": "7862:7:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFTListing_$4198_storage_ptr",
																				"typeString": "struct GBMarketplace.NFTListing storage pointer"
																			}
																		},
																		"id": 4979,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7870:7:20",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4189,
																		"src": "7862:15:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 4980,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4950,
																		"src": "7881:8:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7862:27:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7839:50:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4986,
															"nodeType": "IfStatement",
															"src": "7835:91:20",
															"trueBody": {
																"id": 4985,
																"nodeType": "Block",
																"src": "7891:35:20",
																"statements": [
																	{
																		"expression": {
																			"id": 4983,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4956,
																			"src": "7913:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 4954,
																		"id": 4984,
																		"nodeType": "Return",
																		"src": "7906:8:20"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4959,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4956,
														"src": "7739:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4960,
																"name": "numOfListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4172,
																"src": "7744:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$2314_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 4961,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7757:7:20",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2326,
															"src": "7744:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2314_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2314_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 4962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7744:22:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7739:27:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4988,
												"initializationExpression": {
													"assignments": [
														4956
													],
													"declarations": [
														{
															"constant": false,
															"id": 4956,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7732:1:20",
															"nodeType": "VariableDeclaration",
															"scope": 4988,
															"src": "7727:6:20",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4955,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7727:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4958,
													"initialValue": {
														"hexValue": "31",
														"id": 4957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7736:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7727:10:20"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7768:3:20",
														"subExpression": {
															"id": 4964,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4956,
															"src": "7768:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4966,
													"nodeType": "ExpressionStatement",
													"src": "7768:3:20"
												},
												"nodeType": "ForStatement",
												"src": "7722:211:20"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 4989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7946:1:20",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 4954,
												"id": 4990,
												"nodeType": "Return",
												"src": "7939:8:20"
											}
										]
									},
									"functionSelector": "8699fdf4",
									"id": 4992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllIdListed",
									"nameLocation": "7642:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4948,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "7665:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 4992,
												"src": "7658:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1870",
													"typeString": "contract ERC721"
												},
												"typeName": {
													"id": 4947,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4946,
														"name": "ERC721",
														"nameLocations": [
															"7658:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1870,
														"src": "7658:6:20"
													},
													"referencedDeclaration": 1870,
													"src": "7658:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1870",
														"typeString": "contract ERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4950,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "7679:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 4992,
												"src": "7671:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7671:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7657:31:20"
									},
									"returnParameters": {
										"id": 4954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4992,
												"src": "7710:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4952,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7710:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7709:6:20"
									},
									"scope": 4993,
									"src": "7633:320:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4994,
							"src": "478:7478:20",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								295,
								300,
								4206,
								4214,
								4222,
								4230,
								4236
							]
						}
					],
					"src": "33:7928:20"
				},
				"id": 20
			}
		}
	}
}